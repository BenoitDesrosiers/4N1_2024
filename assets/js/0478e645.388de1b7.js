"use strict";(self.webpackChunknotes_de_cours_4_n_1_2024=self.webpackChunknotes_de_cours_4_n_1_2024||[]).push([[6557],{6860:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var r=s(5893),i=s(1151);const o={sidebar_position:30},t="Extension de classe",a={id:"03 Entity Framework/methode_extension",title:"Extension de classe",description:"Mauvaise technique",source:"@site/docs/03 Entity Framework/methode_extension.md",sourceDirName:"03 Entity Framework",slug:"/03 Entity Framework/methode_extension",permalink:"/4N1_2024/docs/03 Entity Framework/methode_extension",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30},sidebar:"NotesSidebar",previous:{title:"EF_lecture_des_donnees",permalink:"/4N1_2024/docs/03 Entity Framework/EF_lecture_des_donnees"},next:{title:"Niveau sup\xe9rieur",permalink:"/4N1_2024/docs/05 Injection de d\xe9pendance/app_sans_main"}},c={},l=[{value:"Mauvaise technique",id:"mauvaise-technique",level:2},{value:"Les m\xe9thodes d&#39;extension",id:"les-m\xe9thodes-dextension",level:2},{value:"Param\xe8tres",id:"param\xe8tres",level:3},{value:"Collections",id:"collections",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"extension-de-classe",children:"Extension de classe"}),"\n",(0,r.jsx)(n.h2,{id:"mauvaise-technique",children:"Mauvaise technique"}),"\n",(0,r.jsxs)(n.p,{children:["Dans une conception objet, il serait int\xe9ressant d'ajouter une m\xe9thode dans la classe ",(0,r.jsx)(n.strong,{children:"Franchise"})," qui permettrait d'afficher son information dans la console. Cette approche permet de favoriser la r\xe9utilisation du code, donc d'\xeatre plus ",(0,r.jsx)(n.strong,{children:"DRY"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Ajoutez cette m\xe9thode dans la classe ",(0,r.jsx)(n.strong,{children:"Franchise"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'public void AfficherConsole()\r\n{\r\n    Console.WriteLine($"Id : {FranchiseId}");\r\n    Console.WriteLine($"Nom : {Nom}");\r\n    Console.WriteLine($"Ann\xe9e de cr\xe9ation : {AnneeCreation}");\r\n    Console.WriteLine($"Site Web : {SiteWeb}");\r\n    Console.WriteLine($"Propri\xe9taire : {Proprietaire}");\r\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Maintenant, il est possible de faire ceci dans le fichier ",(0,r.jsx)(n.strong,{children:"Program.cs"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"using (UniversContext db = new UniversContext())\r\n{\r\n    List<Franchise> lstFranchiseQuery = (from lqFranchise in db.FranchiseTb\r\n                                     orderby\r\n                                         lqFranchise.AnneeCreation descending\r\n                                     select\r\n                                         lqFranchise).ToList();\r\n\r\n    foreach (Franchise franchise in lstFranchiseQuery)\r\n    {\r\n        franchise.AfficherConsole();\r\n    }\r\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Mais est-il correct d'ajouter une m\xe9thode d'affichage dans une classe de mod\xe8le?"}),"\n",(0,r.jsxs)(n.p,{children:["Selon les principes ",(0,r.jsx)(n.strong,{children:"SOLID"}),", le ",(0,r.jsx)(n.strong,{children:"S"})," est pour une responsabilit\xe9 simple. Pour ",(0,r.jsx)(n.strong,{children:"Entity Framework"}),", une classe du mod\xe8le doit contenir seulement les donn\xe9es d'un enregistrement et les propri\xe9t\xe9s de navigations. Elle ne peut pas avoir d'autres responsabilit\xe9s."]}),"\n",(0,r.jsx)(n.p,{children:"De plus, il faut \xe9viter de mettre des fonctionnalit\xe9s li\xe9es directement \xe0 l'interface utilisateur dans des classes de mod\xe8les. \xc0 quoi servirait une m\xe9thode d'affichage console dans une application web?"}),"\n",(0,r.jsxs)(n.p,{children:["Donc, pour \xeatre en mesure d'ajouter des fonctionnalit\xe9s, il faut utiliser des m\xe9thodes d'extension. Le ",(0,r.jsx)(n.strong,{children:"O"})," de ",(0,r.jsx)(n.strong,{children:"SOLID"})," est ",(0,r.jsx)(n.strong,{children:"(open/close)"}),", c'est-\xe0-dire une classe doit \xeatre ferm\xe9e \xe0 la modification directe, mais ouverte \xe0 l'extension. C'est avec ce principe qu'il sera possible d'ajouter la m\xe9thode ",(0,r.jsx)(n.strong,{children:"AfficherConsole()"})," dans la classe ",(0,r.jsx)(n.strong,{children:"Franchise"}),"."]}),"\n",(0,r.jsx)(n.admonition,{title:"important",type:"danger",children:(0,r.jsx)(n.p,{children:"Effacer la m\xe9thode AfficherConsole que vous venez de cr\xe9er"})}),"\n",(0,r.jsx)(n.h2,{id:"les-m\xe9thodes-dextension",children:"Les m\xe9thodes d'extension"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/extension-methods",children:"Pour en savoir plus"})}),"\n",(0,r.jsxs)(n.p,{children:["Cr\xe9ez un nouveau dossier ",(0,r.jsx)(n.strong,{children:"Extensions"})," dans le projet ",(0,r.jsx)(n.strong,{children:"LinqCRUD"})," et cr\xe9ez la classe ",(0,r.jsx)(n.strong,{children:"FranchiseConsoleExtensions"}),". Cette classe contiendra les m\xe9thodes pour la console."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'using Univers.EF.Data;\r\n\r\nnamespace LinqCRUD.Extensions;\r\n/// <summary>\r\n/// Classe statique qui regroupe les m\xe9thodes d\'extension pour la console du mod\xe8le Franchise\r\n/// </summary>\r\npublic static class FranchiseConsoleExtensions\r\n{\r\n    /// <summary>\r\n    /// M\xe9thode qui affiche l\'information d\'une franchise \xe0 la console\r\n    /// </summary>\r\n    /// <param name="franchise">Franchise</param>\r\n    public static void AfficherConsole(this Franchise franchise)\r\n    {\r\n        Console.WriteLine($"Id : {franchise.FranchiseId}");\r\n        Console.WriteLine($"Nom : {franchise.Nom}");\r\n        Console.WriteLine($"Ann\xe9e de cr\xe9ation : {franchise.AnneeCreation}");\r\n        Console.WriteLine($"Site Web : {franchise.SiteWeb}");\r\n        Console.WriteLine($"Propri\xe9taire : {franchise.Proprietaire}");\r\n    }\r\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Pour ajouter des m\xe9thodes d'extension, il faut obligatoirement les cr\xe9er dans une classe ",(0,r.jsx)(n.strong,{children:"static"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["La m\xe9thode doit \xe9galement \xeatre ",(0,r.jsx)(n.strong,{children:"static"}),". Remarquez le param\xe8tre, il d\xe9bute par ",(0,r.jsx)(n.strong,{children:"this"}),". Ceci indique que le premier param\xe8tre consiste \xe0 l'objet qui utilisera la m\xe9thode d'extension."]}),"\n",(0,r.jsxs)(n.p,{children:["Essayez ce code dans ",(0,r.jsx)(n.strong,{children:"Program.cs"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"using Univers.EF.Data.Context;\r\nusing Univers.EF.Data;\r\nusing LinqCRUD.Extensions;\r\n\r\nusing (UniversContext db = new UniversContext())\r\n{\r\n    Franchise f = db.FranchiseTb.FirstOrDefault();\r\n\r\n    f.AfficherConsole();\r\n\r\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["La m\xe9thode ",(0,r.jsx)(n.strong,{children:"f.AfficherConsole()"}),"  est en r\xe9alit\xe9 ",(0,r.jsx)(n.strong,{children:"FranchiseConsoleExtensions.AfficherConsole(f);"})," pour le compilateur."]}),"\n",(0,r.jsxs)(n.p,{children:["Pour quelle soit disponible, il faut ajouter le ",(0,r.jsx)(n.strong,{children:"using"})," qui contient la classe d'extension."]}),"\n",(0,r.jsx)(n.h3,{id:"param\xe8tres",children:"Param\xe8tres"}),"\n",(0,r.jsx)(n.p,{children:"Il est possible d'ajouter des param\xe8tres dans la m\xe9thode."}),"\n",(0,r.jsxs)(n.p,{children:["Remplacez le code de la classe ",(0,r.jsx)(n.strong,{children:"FranchiseConsoleExtensions"})," par celui-ci."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'/// <summary>\r\n/// Classe statique qui regroupe les m\xe9thodes d\'extension pour la console du mod\xe8le Franchise\r\n/// </summary>\r\npublic static class FranchiseConsoleExtensions\r\n{\r\n    /// <summary>\r\n    /// M\xe9thode qui affiche l\'information d\'une franchise \xe0 la console\r\n    /// </summary>\r\n    /// <param name="franchise">Franchise</param>\r\n    /// <param name="majuscule">Affiche le texte en majuscule. Faux par d\xe9faut.</param>\r\n    public static void AfficherConsole(this Franchise franchise, bool majuscule = false)\r\n    {\r\n        if (majuscule == true)\r\n        {\r\n            //En majuscule\r\n            Console.WriteLine($"Id : {franchise.FranchiseId}");\r\n            Console.WriteLine($"Nom : {franchise.Nom.ToUpper()}");\r\n            Console.WriteLine($"Id : {franchise.FranchiseId}");\r\n            Console.WriteLine($"Ann\xe9e de cr\xe9ation : {franchise.AnneeCreation}");\r\n            Console.WriteLine($"Site Web : {franchise.SiteWeb.ToUpper()}");\r\n            Console.WriteLine($"Propri\xe9taire : {franchise.Proprietaire.ToUpper()}");\r\n        }\r\n        else\r\n        {\r\n            //Aucun changement\r\n            Console.WriteLine($"Id : {franchise.FranchiseId}");\r\n            Console.WriteLine($"Nom : {franchise.Nom}");\r\n            Console.WriteLine($"Ann\xe9e de cr\xe9ation : {franchise.AnneeCreation}");\r\n            Console.WriteLine($"Site Web : {franchise.SiteWeb}");\r\n            Console.WriteLine($"Propri\xe9taire : {franchise.Proprietaire}");\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Il est donc possible de faire ceci."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"using Univers.EF.Data.Context;\r\nusing Univers.EF.Data;\r\nusing LinqCRUD.Extensions;\r\n\r\nusing (UniversContext db = new UniversContext())\r\n{\r\n    List<Franchise> lstFranchiseQuery = (from lqFranchise in db.FranchiseTb\r\n                                         orderby\r\n                                             lqFranchise.AnneeCreation descending\r\n                                         select\r\n                                             lqFranchise).ToList();\r\n\r\n    foreach (Franchise franchise in lstFranchiseQuery)\r\n    {\r\n        franchise.AfficherConsole(); //false par d\xe9faut => FranchiseConsoleExtensions.AfficherConsole(franchise);       \r\n        franchise.AfficherConsole(false); //false sp\xe9cifi\xe9 => FranchiseConsoleExtensions.AfficherConsole(franchise, false);\r\n        franchise.AfficherConsole(true); //true sp\xe9cifi\xe9 ==> FranchiseConsoleExtensions.AfficherConsole(franchise, true);\r\n    }\r\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"collections",children:"Collections"}),"\n",(0,r.jsx)(n.p,{children:"Il est possible de le faire sur une collection \xe9galement."}),"\n",(0,r.jsxs)(n.p,{children:["Dans la classe ",(0,r.jsx)(n.strong,{children:"FranchiseConsoleExtensions"}),", ajoutez la m\xe9thode ci-dessous."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"/// <summary>\r\n/// M\xe9thode qui affiche l'information d'une liste de franchises \xe0 la console\r\n/// </summary>\r\n/// <param name=\"lstFranchise\"></param>\r\npublic static void AfficherConsole(this List<Franchise> lstFranchise)\r\n{\r\n    if(lstFranchise?.Count > 0)\r\n    {\r\n        foreach (Franchise franchise in lstFranchise)\r\n        {\r\n            franchise.AfficherConsole();\r\n        }\r\n    }\r\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Il est possible de simplifier le code dans le fichier ",(0,r.jsx)(n.strong,{children:"Program.cs"})," par celui-ci."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"using (UniversContext db = new UniversContext())\r\n{\r\n    List<Franchise> lstFranchiseQuery = (from lqFranchise in db.FranchiseTb\r\n                                     orderby\r\n                                         lqFranchise.AnneeCreation descending\r\n                                     select\r\n                                         lqFranchise).ToList();\r\n\r\n    lstFranchiseQuery.AfficherConsole();\r\n\r\n    //Ou directement en lambda\r\n    db.FranchiseTb.OrderByDescending(u => u.AnneeCreation).ToList().AfficherConsole();\r\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>a,a:()=>t});var r=s(7294);const i={},o=r.createContext(i);function t(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);