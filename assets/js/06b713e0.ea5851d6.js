"use strict";(self.webpackChunknotes_de_cours_4_n_1_2024=self.webpackChunknotes_de_cours_4_n_1_2024||[]).push([[2032],{823:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>a});var s=r(5893),o=r(1151);const i={sidebar_position:1},t="Les Collections",l={id:"02 LINQ/collections",title:"Les Collections",description:"Avant d'aborder LINQ, nous allons introduire un type de donn\xe9es qui est fr\xe9quemment utilis\xe9e avec LINQ: Les collections.",source:"@site/docs/02 LINQ/collections.md",sourceDirName:"02 LINQ",slug:"/02 LINQ/collections",permalink:"/4N1_2024/docs/02 LINQ/collections",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"NotesSidebar",previous:{title:"Cl\xe9 auto incr\xe9ment\xe9e",permalink:"/4N1_2024/docs/01 R\xe9vision SQL/cles_auto_incrementees"},next:{title:"Requ\xeates en LINQ",permalink:"/4N1_2024/docs/02 LINQ/introductionLINQ"}},c={},a=[{value:"Cr\xe9ation du projet",id:"cr\xe9ation-du-projet",level:2},{value:"Collection en C#",id:"collection-en-c",level:2},{value:"ArrayList",id:"arraylist",level:3},{value:"List&lt;T&gt;",id:"listt",level:2},{value:"Dictionary&lt;TKey,TValue&gt;",id:"dictionarytkeytvalue",level:2},{value:"Queue et Queue&lt;T&gt;",id:"queue-et-queuet",level:2},{value:"Stack et Stack&lt;T&gt;",id:"stack-et-stackt",level:2}];function d(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"les-collections",children:"Les Collections"}),"\n",(0,s.jsx)(n.p,{children:"Avant d'aborder LINQ, nous allons introduire un type de donn\xe9es qui est fr\xe9quemment utilis\xe9e avec LINQ: Les collections."}),"\n",(0,s.jsx)(n.h2,{id:"cr\xe9ation-du-projet",children:"Cr\xe9ation du projet"}),"\n",(0,s.jsxs)(n.p,{children:["Pour faire les exercices, il faut cr\xe9er une application console en ",(0,s.jsx)(n.strong,{children:".NET 7"})]}),"\n",(0,s.jsx)(n.p,{children:"Cr\xe9ez un projet."}),"\n",(0,s.jsx)("img",{src:"/4N1_2024/img/04_projet_1.png"}),"\n",(0,s.jsxs)(n.p,{children:["S\xe9lectionnez le type ",(0,s.jsx)(n.strong,{children:"Application Console"})," en ",(0,s.jsx)(n.strong,{children:"C#"}),". Important, il ne faut pas avoir la mention ",(0,s.jsx)(n.strong,{children:"(.NET Framework)"}),"."]}),"\n",(0,s.jsx)("img",{src:"/4N1_2024/img/S04_projet_2.png"}),"\n",(0,s.jsxs)(n.p,{children:["Nommez le projet ",(0,s.jsx)(n.strong,{children:"ConsoleLINQ"}),"."]}),"\n",(0,s.jsx)("img",{src:"/4N1_2024/img/04_projet_3.png"}),"\n",(0,s.jsxs)(n.p,{children:["S\xe9lectionnez l'infrastructure ",(0,s.jsx)(n.strong,{children:".NET 7.0"})," et d\xe9cochez ",(0,s.jsx)(n.strong,{children:"N'utilisez pas d'instructions de niveau sup\xe9rieur."})]}),"\n",(0,s.jsx)("img",{src:"/4N1_2024/img/04_projet_4.png"}),"\n",(0,s.jsx)(n.h2,{id:"collection-en-c",children:"Collection en C#"}),"\n",(0,s.jsx)(n.p,{children:"Il existe plusieurs collections en C#. Nous allons en prendre quelques-unes pour les expliquer."}),"\n",(0,s.jsxs)(n.p,{children:["Pour plus d'information : ",(0,s.jsx)(n.a,{href:"https://docs.microsoft.com/fr-ca/dotnet/csharp/programming-guide/concepts/collections",children:"https://docs.microsoft.com/fr-ca/dotnet/csharp/programming-guide/concepts/collections"})]}),"\n",(0,s.jsx)(n.h3,{id:"arraylist",children:"ArrayList"}),"\n",(0,s.jsxs)(n.p,{children:["Un ",(0,s.jsx)(n.strong,{children:"ArrayList"})," est un tableau de ",(0,s.jsx)(n.strong,{children:"taille dynamique"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Elle peut contenir tous les types d'objets."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"ArrayList al = new ArrayList();\r\nal.Add(100);\r\nal.Add(200);\r\nal.Add(300);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["La signature de la m\xe9thode ",(0,s.jsx)(n.strong,{children:"Add"})," est ",(0,s.jsx)(n.strong,{children:"int Add(object? value)"}),". Cette collection est en mesure de contenir n'importe quoi."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'ArrayList al = new ArrayList();\r\nal.Add(1);\r\nal.Add("Bonjour");\r\nal.Add(true);\n'})}),"\n",(0,s.jsx)(n.p,{children:"Au niveau coh\xe9rence des donn\xe9es, ceci peut \xeatre un probl\xe8me."}),"\n",(0,s.jsxs)(n.p,{children:["Par exemple, il faut un tableau dynamique qui contient des entiers. Il y a un probl\xe8me dans la m\xe9thode d'insertion et la donn\xe9e entr\xe9e en ",(0,s.jsx)(n.strong,{children:"string"})," par l'utilisateur n'a pas \xe9t\xe9 transform\xe9e en ",(0,s.jsx)(n.strong,{children:"int"}),". La donn\xe9e sera tout de m\xeame dans la liste."]}),"\n",(0,s.jsx)(n.p,{children:"Il est possible d'acc\xe9der \xe0 un item de la collection en utilisant son index comme un tableau."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"ArrayList al = new ArrayList();\r\nal.Add(100);\r\nal.Add(200);\r\nal.Add(300);\r\n\r\nConsole.WriteLine(al[1]); //200 est affich\xe9 dans la console\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Il est possible de faire des recherches avec la m\xe9thode ",(0,s.jsx)(n.strong,{children:"IndexOf"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"ArrayList al = new ArrayList();\r\nal.Add(100);\r\nal.Add(200);\r\nal.Add(300);\r\nal.Add(100);\r\n\r\nint indexPremier = al.IndexOf(100); //Part du d\xe9but\r\nint indexDeuxieme = al.IndexOf(100, indexPremier + 1); //Commence apr\xe8s le premier trouv\xe9\r\n\r\nConsole.WriteLine(indexPremier); //Affiche 0\r\nConsole.WriteLine(indexDeuxieme); //Affiche 3\n"})}),"\n",(0,s.jsx)(n.p,{children:"Il peut \xeatre difficile de faire des recherches sur le contenu d'un objet."}),"\n",(0,s.jsxs)(n.p,{children:["Cr\xe9ez la classe ",(0,s.jsx)(n.strong,{children:"Personne"})]}),"\n",(0,s.jsx)(n.p,{children:"Menu Projet/ajouter une classe."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public class Personne\r\n{\r\n    public int Id { get; set; }\r\n    public string Prenom { get; set; }\r\n    public string Nom { get; set; }\r\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Ensuite, cr\xe9ez 2 personnes et ajoutez les dans la liste."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'Personne personne1 = new Personne();\r\npersonne1.Id = 1;\r\npersonne1.Prenom = "Fran\xe7ois";\r\npersonne1.Nom = "St-Hilaire";\r\n\r\nPersonne personne2 = new Personne();\r\npersonne2.Id = 2;\r\npersonne2.Prenom = "St\xe9phane";\r\npersonne2.Nom = "Janvier";\r\n\r\nPersonne personne3 = new Personne();\r\npersonne2.Id = 3;\r\npersonne2.Prenom = "Fran\xe7ois";\r\npersonne2.Nom = "Morin";\r\n\r\nArrayList al = new ArrayList();\r\nal.Add(personne1);\r\nal.Add(personne2);\r\nal.Add(personne3);\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Un ",(0,s.jsx)(n.strong,{children:"ArrayList"})," fonctionne comme un tableau, il est possible de r\xe9cup\xe9rer un \xe9l\xe9ment par un ",(0,s.jsx)(n.strong,{children:"index"}),". \xc9tant donn\xe9 que l'ArrayList peut contenir n'importe quel type d'objet, un ",(0,s.jsx)(n.strong,{children:"cast"})," doit \xeatre fait afin de ressortir une ",(0,s.jsx)(n.strong,{children:"Personne"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"Personne p = (Personne)al[0];\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Pour obtenir le nombre d'\xe9l\xe9ments dans la collection , la propri\xe9t\xe9 ",(0,s.jsx)(n.strong,{children:"Count"})," permet d'obtenir la quantit\xe9."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"int nb = al.Count;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Pour retrouver les personnes ",(0,s.jsx)(n.strong,{children:"Fran\xe7ois"}),", il n'y a pas de moyen efficace, \xe0 part de parcourir le ",(0,s.jsx)(n.strong,{children:"ArrayList"})," et de faire une v\xe9rification sur chacun des \xe9l\xe9ments."]}),"\n",(0,s.jsx)(n.p,{children:"Mais il existe d'autres types de listes que nous allons voir ci-bas."}),"\n",(0,s.jsx)(n.h2,{id:"listt",children:"List<T>"}),"\n",(0,s.jsxs)(n.p,{children:["La plus populaire est la ",(0,s.jsx)(n.strong,{children:"List<T>"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"C# est en mesure d'utiliser des types g\xe9n\xe9riques pour avoir un meilleur contr\xf4le dans la coh\xe9rence des donn\xe9es internes."}),"\n",(0,s.jsxs)(n.p,{children:["La liste peut accepter uniquement des objets types ",(0,s.jsx)(n.strong,{children:"T"}),". Il s'agit d'un type g\xe9n\xe9rique."]}),"\n",(0,s.jsx)(n.p,{children:"Un type g\xe9n\xe9rique permet de faire abstraction du type dans le fonctionnement d'une classe."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'Personne personne1 = new Personne();\r\npersonne1.Id = 1;\r\npersonne1.Prenom = "Fran\xe7ois";\r\npersonne1.Nom = "St-Hilaire";\r\n\r\nPersonne personne2 = new Personne();\r\npersonne2.Id = 2;\r\npersonne2.Prenom = "St\xe9phane";\r\npersonne2.Nom = "Janvier";\r\n\r\nPersonne personne3 = new Personne();\r\npersonne3.Id = 3;\r\npersonne3.Prenom = "Fran\xe7ois";\r\npersonne3.Nom = "Morin";\r\n\r\n// Notez ici que la liste porte le nom du type au pluriel car elle contient DES personneS.\r\n// D\'autres noms qui seraient int\xe9ressants: groupe, classe, employes ... \r\nList<Personne> personnes = new List<Personne\\>(); \r\npersonnes.Add(personne1);\r\npersonnes.Add(personne2);\r\npersonnes.Add(personne3);\n'})}),"\n",(0,s.jsxs)(n.p,{children:["La liste ci-dessus peut accepter uniquement des objets de type ",(0,s.jsx)(n.strong,{children:"Personne"}),", car ",(0,s.jsx)(n.strong,{children:"T"})," = ",(0,s.jsx)(n.strong,{children:"Personne"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"List<T>"})," permet de faire des recherches avec des crit\xe8res grace aux fonctions ",(0,s.jsx)(n.strong,{children:"Find"}),", ",(0,s.jsx)(n.strong,{children:"FindAll"})," etc."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'List<Personne> lesFrancois = personnes.FindAll(p => p.Prenom == "Fran\xe7ois");\n'})}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsxs)(n.p,{children:["Ici, le param\xe8tre de FindAll est un ",(0,s.jsx)(n.strong,{children:"pr\xe9dicat"})," utilisant une fonction lambda. Nous y reviendrons plus en d\xe9tails.\r\nIl faut le lire de la facon suivante:",(0,s.jsx)(n.br,{}),"\n","Dans personnes, trouve toutes les personnes p dont le Prenom est Francois, et mets chacun de ces p dans la listes lesFrancois."]}),(0,s.jsxs)(n.p,{children:["Pour en savoir plus: ",(0,s.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/system.predicate-1?view=net-8.0",children:"https://learn.microsoft.com/en-us/dotnet/api/system.predicate-1?view=net-8.0"})]})]}),"\n",(0,s.jsxs)(n.p,{children:["Un ",(0,s.jsx)(n.strong,{children:"List<T>"})," fonctionne comme un tableau, il est possible de r\xe9cup\xe9rer un \xe9l\xe9ment par un ",(0,s.jsx)(n.strong,{children:"index"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"Personne p = personnes[0];\n"})}),"\n",(0,s.jsx)(n.p,{children:"Notez ici que le cast n'est pas n\xe9cessaire comme avec ArrayList car personnes ne contient que des Personne."}),"\n",(0,s.jsxs)(n.p,{children:["Pour obtenir le nombre d'\xe9l\xe9ments dans la collection , la propri\xe9t\xe9 ",(0,s.jsx)(n.strong,{children:"Count"})," permet d'obtenir la quantit\xe9."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"int nb = personnes.Count;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"dictionarytkeytvalue",children:"Dictionary<TKey,TValue>"}),"\n",(0,s.jsx)(n.p,{children:"Le dictionnaire permet d'enregistrer une valeur en fonction d'une cl\xe9."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"TKey"})," et ",(0,s.jsx)(n.strong,{children:"TValue"})," sont g\xe9n\xe9riques, donc il est possible de mettre le type d\xe9sir\xe9."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'Personne personne1 = new Personne();\r\npersonne1.Id = 1;\r\npersonne1.Prenom = "Fran\xe7ois";\r\npersonne1.Nom = "St-Hilaire";\r\n\r\nPersonne personne2 = new Personne();\r\npersonne2.Id = 2;\r\npersonne2.Prenom = "St\xe9phane";\r\npersonne2.Nom = "Janvier";\r\n\r\nPersonne personne3 = new Personne();\r\npersonne3.Id = 3;\r\npersonne3.Prenom = "Fran\xe7ois";\r\npersonne3.Nom = "Morin";\r\n\r\nDictionary<int, Personne> dic = new Dictionary<int, Personne>();\r\ndic.Add(personne1.Id, personne1);\r\ndic.Add(personne2.Id, personne2);\r\ndic.Add(personne3.Id, personne3);\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Ci-dessus, la cl\xe9 est un ",(0,s.jsx)(n.strong,{children:"int"})," et la valeur est ",(0,s.jsx)(n.strong,{children:"Personne"}),". La cl\xe9 doit \xeatre unique. Il n'est pas possible d'ins\xe9rer 2 fois la m\xeame valeur pour une cl\xe9."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"Dictionary<int, Personne> dic = new Dictionary<int, Personne>();\r\ndic.Add(1, personne1);\r\ndic.Add(2, personne2);\r\ndic.Add(1, personne3); //System.ArgumentException\xa0: 'Un \xe9l\xe9ment avec la m\xeame cl\xe9 a d\xe9j\xe0 \xe9t\xe9 ajout\xe9.'\n"})}),"\n",(0,s.jsx)(n.p,{children:"Le dictionnaire peut utiliser la cl\xe9 pour acc\xe9der directement \xe0 un \xe9l\xe9ment."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"//Retourne la personne \xe0 la cl\xe9 2 et non l'index 2\r\nPersonne p = dic[2];\n"})}),"\n",(0,s.jsxs)(n.p,{children:["L'acc\xe8s par les ",(0,s.jsx)(n.strong,{children:"[]"})," indique la valeur de la cl\xe9 et non une position."]}),"\n",(0,s.jsx)(n.p,{children:"La valeur peut \xe9galement \xeatre une collection."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'Dictionary<string, List<Personne> dicNom = new Dictionary<string, List<Personne>();\r\n\r\ndicNom.Add("Fran\xe7ois", new List<Personne>());\r\n//le .Add est le .Add de List et non le .Add du Dictionary, car dicNom[""] retourne la valeur.\r\n//ce code ajoute donc personne1 dans une liste de Personne, qui se trouve \xe0 l\'entr\xe9 "Francois" du dictionnaire. \r\ndicNom["Fran\xe7ois"].Add(personne1);\r\ndicNom["Fran\xe7ois"].Add(personne2);\r\n\r\ndicNom.Add("St\xe9phane", new List<Personne>());\r\ndicNom["St\xe9phane"].Add(personne2);\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Dans le cas-ci dessus, l'acc\xe8s se fait par ",(0,s.jsx)(n.strong,{children:"[]"})," et \xe0 l'int\xe9rieur c'est une ",(0,s.jsx)(n.strong,{children:"string"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["\xc9galement ",(0,s.jsx)(n.strong,{children:'dicNom["Fran\xe7ois"]'})," retourne une ",(0,s.jsx)(n.strong,{children:"List<Personne>"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'List<Personne> lesFrancois = dicNom["Fran\xe7ois"];\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Les propri\xe9t\xe9s ",(0,s.jsx)(n.strong,{children:"Keys"})," et ",(0,s.jsx)(n.strong,{children:"Values"})," retournent une collection sp\xe9cifique contenant toutes les cl\xe9s."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'foreach(int key in dic.Keys)\r\n{\r\n    Console.WriteLine(key);\r\n}\r\n\r\nforeach (Personne personne in dic.Values)\r\n{\r\n    Console.WriteLine($" Id : {personne.Id} Pr\xe9nom : {personne.Prenom} Nom : {personne.Nom}");\r\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Pour obtenir le nombre d'\xe9l\xe9ments dans la collection , la propri\xe9t\xe9 ",(0,s.jsx)(n.strong,{children:"Count"})," permet d'obtenir la quantit\xe9."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"int nb = dic.Count;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"queue-et-queuet",children:"Queue et Queue<T>"}),"\n",(0,s.jsxs)(n.p,{children:["Le type ",(0,s.jsx)(n.strong,{children:"Queue"})," et ",(0,s.jsx)(n.strong,{children:"Queue<T>"})," sont des collections de type file (FIFO), c'est-\xe0-dire le premier \xe9l\xe9ment entr\xe9 est le premier retir\xe9."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Queue"})," re\xe7oit des objets de type ",(0,s.jsx)(n.strong,{children:"objet"}),". Il est comme le ",(0,s.jsx)(n.strong,{children:"ArrayList"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Queue<T>"})," est g\xe9n\xe9rique. La file re\xe7oit uniquement des objets du type sp\xe9cifi\xe9."]}),"\n",(0,s.jsxs)(n.p,{children:["La m\xe9thode ",(0,s.jsx)(n.strong,{children:"Enqueue"})," permet d'ajouter un \xe9l\xe9ment et la m\xe9thode ",(0,s.jsx)(n.strong,{children:"Dequeue"})," permet de le retirer de la file."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'Personne personne1 = new Personne();\r\npersonne1.Id = 1;\r\npersonne1.Prenom = "Fran\xe7ois";\r\npersonne1.Nom = "St-Hilaire";\r\n\r\nPersonne personne2 = new Personne();\r\npersonne2.Id = 2;\r\npersonne2.Prenom = "St\xe9phane";\r\npersonne2.Nom = "Janvier";\r\n\r\nPersonne personne3 = new Personne();\r\npersonne3.Id = 3;\r\npersonne3.Prenom = "Fran\xe7ois";\r\npersonne3.Nom = "Morin";\r\n\r\nQueue<Personne> queue = new Queue<Personne>();\r\nqueue.Enqueue(personne1);\r\nqueue.Enqueue(personne2);\r\nqueue.Enqueue(personne3);\r\n\r\nPersonne p1 = queue.Dequeue(); //Fran\xe7ois St-Hilaire\r\nPersonne p2 = queue.Dequeue(); //St\xe9phane Janvier\r\nPersonne p3 = queue.Dequeue(); //Fran\xe7ois Morin\r\nPersonne p4 = queue.Dequeue(); //Retoure un null exception\n'})}),"\n",(0,s.jsxs)(n.p,{children:["La m\xe9thode ",(0,s.jsx)(n.strong,{children:"Peek"})," permet d'obtenir le prochain item sans le retirer de la liste."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'Personne personne1 = new Personne();\r\npersonne1.Id = 1;\r\npersonne1.Prenom = "Fran\xe7ois";\r\npersonne1.Nom = "St-Hilaire";\r\n\r\nPersonne personne2 = new Personne();\r\npersonne2.Id = 2;\r\npersonne2.Prenom = "St\xe9phane";\r\npersonne2.Nom = "Janvier";\r\n\r\nPersonne personne3 = new Personne();\r\npersonne3.Id = 3;\r\npersonne3.Prenom = "Fran\xe7ois";\r\npersonne3.Nom = "Morin";\r\n\r\nQueue<Personne> queue = new Queue<Personne>();\r\nqueue.Enqueue(personne1);\r\nqueue.Enqueue(personne2);\r\nqueue.Enqueue(personne3);\r\n\r\nPersonne p1 = queue.Peek(); //Fran\xe7ois St-Hilaire\r\nPersonne p2 = queue.Peek(); //Fran\xe7ois St-Hilaire\r\nPersonne p3 = queue.Peek(); //Fran\xe7ois St-Hilaire\r\nPersonne p4 = queue.Peek(); //Fran\xe7ois St-Hilaire\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Pour obtenir le nombre d'\xe9l\xe9ments dans la collection , la propri\xe9t\xe9 ",(0,s.jsx)(n.strong,{children:"Count"})," permet d'obtenir la quantit\xe9."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"int nb = queue.Count;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"stack-et-stackt",children:"Stack et Stack<T>"}),"\n",(0,s.jsxs)(n.p,{children:["Le type ",(0,s.jsx)(n.strong,{children:"Stack"})," et ",(0,s.jsx)(n.strong,{children:"Stack<T>"})," sont des collections de type pile (LIFO), c'est-\xe0-dire que le dernier \xe9l\xe9ment entr\xe9 est le premier retir\xe9."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Stack"})," re\xe7oit des objets de type ",(0,s.jsx)(n.strong,{children:"objet"}),". Il est comme le ",(0,s.jsx)(n.strong,{children:"ArrayList"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Stack<T>"})," est g\xe9n\xe9rique. La file re\xe7oit uniquement des objets du type sp\xe9cifi\xe9."]}),"\n",(0,s.jsxs)(n.p,{children:["La m\xe9thode ",(0,s.jsx)(n.strong,{children:"Push"})," permet d'ajouter un \xe9l\xe9ment et la m\xe9thode ",(0,s.jsx)(n.strong,{children:"Pop"})," permet de le retirer de la pile."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'Personne personne1 = new Personne();\r\npersonne1.Id = 1;\r\npersonne1.Prenom = "Fran\xe7ois";\r\npersonne1.Nom = "St-Hilaire";\r\n\r\nPersonne personne2 = new Personne();\r\npersonne2.Id = 2;\r\npersonne2.Prenom = "St\xe9phane";\r\npersonne2.Nom = "Janvier";\r\n\r\nPersonne personne3 = new Personne();\r\npersonne3.Id = 3;\r\npersonne3.Prenom = "Fran\xe7ois";\r\npersonne3.Nom = "Morin";\r\n\r\nStack<Personne> stack = new Stack<Personne>();\r\nstack.Push(personne1);\r\nstack.Push(personne2);\r\nstack.Push(personne3);\r\n\r\nPersonne p1 = stack.Pop(); //Fran\xe7ois Morin            \r\nPersonne p2 = stack.Pop(); //St\xe9phane Janvier\r\nPersonne p3 = stack.Pop(); //Fran\xe7ois St-Hilaire\r\nPersonne p4 = stack.Pop(); //Retoure un null exception\n'})}),"\n",(0,s.jsxs)(n.p,{children:["La m\xe9thode ",(0,s.jsx)(n.strong,{children:"Peek"})," permet d'obtenir le prochain item sans le retirer de la liste."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'Personne personne1 = new Personne();\r\npersonne1.Id = 1;\r\npersonne1.Prenom = "Fran\xe7ois";\r\npersonne1.Nom = "St-Hilaire";\r\n\r\nPersonne personne2 = new Personne();\r\npersonne2.Id = 2;\r\npersonne2.Prenom = "St\xe9phane";\r\npersonne2.Nom = "Janvier";\r\n\r\nPersonne personne3 = new Personne();\r\npersonne3.Id = 3;\r\npersonne3.Prenom = "Fran\xe7ois";\r\npersonne3.Nom = "Morin";\r\n\r\nStack<Personne> stack = new Stack<Personne>();\r\nstack.Push(personne1);\r\nstack.Push(personne2);\r\nstack.Push(personne3);\r\n\r\nPersonne p1 = stack.Peek(); //Fran\xe7ois Morin\r\nPersonne p2 = stack.Peek(); //Fran\xe7ois Morin\r\nPersonne p3 = stack.Peek(); //Fran\xe7ois Morin\r\nPersonne p4 = stack.Peek(); //Fran\xe7ois Morin\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Pour obtenir le nombre d'\xe9l\xe9ments dans la collection , la propri\xe9t\xe9 ",(0,s.jsx)(n.strong,{children:"Count"})," permet d'obtenir la quantit\xe9."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"int nb = stack.Count;\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>t});var s=r(7294);const o={},i=s.createContext(o);function t(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);