"use strict";(self.webpackChunknotes_de_cours_4_n_1_2024=self.webpackChunknotes_de_cours_4_n_1_2024||[]).push([[2136],{2512:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>a,toc:()=>o});var i=s(5893),n=s(1151);const r={sidebar_position:810,draft:!1},l="Introduction",a={id:"Tests/introduction",title:"Introduction",description:"Pour s'assurer de la qualit\xe9 du logiciel, il faut effectuer des tests.",source:"@site/docs/80-Tests/introduction.md",sourceDirName:"80-Tests",slug:"/Tests/introduction",permalink:"/4N1_2024/docs/Tests/introduction",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:810,frontMatter:{sidebar_position:810,draft:!1},sidebar:"NotesSidebar",previous:{title:"Suppression d'une carte d'un utilisateur - Explication",permalink:"/4N1_2024/docs/WPF partie 4/suppression_carte_utilisateur"},next:{title:"Structure d'un test",permalink:"/4N1_2024/docs/Tests/structure_test"}},u={},o=[{value:"Librairies de test",id:"librairies-de-test",level:2},{value:"Plan de test",id:"plan-de-test",level:2},{value:"Classe \xe0 tester",id:"classe-\xe0-tester",level:2},{value:"Test unitaire, Test d&#39;int\xe9gration et Test bout en bout (e2e)",id:"test-unitaire-test-dint\xe9gration-et-test-bout-en-bout-e2e",level:2},{value:"Validit\xe9 d&#39;un test",id:"validit\xe9-dun-test",level:2},{value:"Caract\xe9ristiques d\u2019un bon test",id:"caract\xe9ristiques-dun-bon-test",level:3},{value:"Explorateur de tests dans Visual Studio",id:"explorateur-de-tests-dans-visual-studio",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(t.p,{children:"Pour s'assurer de la qualit\xe9 du logiciel, il faut effectuer des tests."}),"\n",(0,i.jsx)(t.p,{children:"Il existe plusieurs cat\xe9gories de tests."}),"\n",(0,i.jsx)(t.p,{children:"Les tests unitaires servent \xe0 v\xe9rifier une m\xe9thode pr\xe9cise d'une classe et de s'assurer que le r\xe9sultat ou le comportement attendu est valide."}),"\n",(0,i.jsx)(t.p,{children:"Les tests d'int\xe9gration servent \xe0 v\xe9rifier l'interaction entre plusieurs modules et fonctions et de s'assurer que le r\xe9sultat final est valide."}),"\n",(0,i.jsx)(t.p,{children:"Les tests bout en bout (end to end : e2e) servent \xe0 v\xe9rifier que le logiciel fonctionne de l'interface utilisateur \xe0 la base de donn\xe9es ou aux autres syst\xe8mes."}),"\n",(0,i.jsx)(t.p,{children:"Les tests d'acceptation servent \xe0 v\xe9rifier que le logiciel r\xe9pond aux sp\xe9cifications logicielles \xe9nonc\xe9es par le client."}),"\n",(0,i.jsxs)(t.p,{children:["Voici un bon article de ",(0,i.jsx)(t.strong,{children:"Microsoft"})," pour les bonnes pratiques des tests : ",(0,i.jsx)(t.a,{href:"https://learn.microsoft.com/fr-ca/dotnet/core/testing/unit-testing-best-practices",children:"https://learn.microsoft.com/fr-ca/dotnet/core/testing/unit-testing-best-practices"})]}),"\n",(0,i.jsx)(t.p,{children:"Ce document est une r\xe9f\xe9rence th\xe9orique. La librairie pr\xe9sent\xe9e n'est pas celle utilis\xe9e."}),"\n",(0,i.jsx)(t.h2,{id:"librairies-de-test",children:"Librairies de test"}),"\n",(0,i.jsx)(t.p,{children:"L'utilisation d'outils de test n'est pas obligatoire, mais fortement conseill\xe9e."}),"\n",(0,i.jsx)(t.p,{children:"Il est possible de faire des tests manuellement. Par contre, il faut faire les tests en suivant un guide pr\xe9cis et un humain doit faire les actions \xe0 chaque fois. Cette approche est tr\xe8s couteuse et le risque d'erreur est tr\xe8s \xe9lev\xe9, car il est possible que le test #1 ne soit pas fait de la m\xeame fa\xe7on \xe0 chaque fois."}),"\n",(0,i.jsx)(t.p,{children:"L'avantage d'automatiser les tests avec une librairie est qu'ils sont facilement ex\xe9cutables et permet de tester le logiciel sur demande."}),"\n",(0,i.jsx)(t.p,{children:"Avant chaque d\xe9ploiement, l'ensemble des tests sont ex\xe9cut\xe9s. Il est possible de v\xe9rifier si le code a \xe9t\xe9 alt\xe9r\xe9 et que le comportement attendu n'est plus le m\xeame."}),"\n",(0,i.jsxs)(t.p,{children:["Le gros probl\xe8me avec les tests automatis\xe9s est que le programmeur a tendance \xe0 faire de faux positifs. Le test programm\xe9 ne teste rien et est l'\xe9quivalent de s'assurer que ",(0,i.jsx)(t.strong,{children:"true == true"}),". Il faut s'assurer que le test a une valeur r\xe9elle."]}),"\n",(0,i.jsxs)(t.p,{children:["Il existe 3 librairies populaires pour faire les tests dans un environnement ",(0,i.jsx)(t.strong,{children:".Net"}),"."]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.strong,{children:"MSTest"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.strong,{children:"NUnit"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.strong,{children:"xUnit"})}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Dans le cours de ",(0,i.jsx)(t.strong,{children:"Native III"}),", ce sera l'outil ",(0,i.jsx)(t.strong,{children:"xUnit"})," qui sera utilis\xe9. Il est d\xe9j\xe0 int\xe9gr\xe9 \xe0 Visual Studio."]}),"\n",(0,i.jsxs)(t.p,{children:["Pour plus d'information sur ",(0,i.jsx)(t.strong,{children:"xUnit"})," : ",(0,i.jsx)(t.a,{href:"https://xunit.net/",children:"https://xunit.net/"})]}),"\n",(0,i.jsx)(t.h2,{id:"plan-de-test",children:"Plan de test"}),"\n",(0,i.jsx)(t.p,{children:"Avant de d\xe9buter la conception des tests, il faut faire l'inventaire de ce qu'il faut tester."}),"\n",(0,i.jsx)(t.p,{children:"Beaucoup d'\xe9l\xe9ments de la liste proviendront de l'analyse, car pour les tests d'int\xe9gration et e2e, c'est g\xe9n\xe9ralement des cas d'utilisation."}),"\n",(0,i.jsx)(t.p,{children:"\xc0 cette \xe9tape, il ne faut pas penser comment le test sera effectu\xe9, mais de penser ce qu'il faut tester."}),"\n",(0,i.jsx)(t.p,{children:"Il est important de prioriser les tests, car malheureusement, il arrive souvent que les tests ne soient pas l'\xe9l\xe9ment le plus important dans un projet et que l'enveloppe budg\xe9taire de celle-ci soit limit\xe9e."}),"\n",(0,i.jsx)(t.p,{children:"Prenez par exemple un magasin en ligne."}),"\n",(0,i.jsx)(t.p,{children:"Le logiciel permet de cr\xe9er des cat\xe9gories de produit, des produits, un inventaire sur les produits, d'ajouter des produits dans le panier d'achats et de faire un achat."}),"\n",(0,i.jsx)(t.p,{children:"Si le budget est limit\xe9, le module d'inventaire, le panier d'achats et faire l'achat seront prioritaire, car ces fonctionnalit\xe9s font partie du coeur du syst\xe8me."}),"\n",(0,i.jsx)(t.p,{children:"Par la suite, pour chacun des items du plan, il faut d\xe9terminer comment il sera test\xe9."}),"\n",(0,i.jsx)(t.h2,{id:"classe-\xe0-tester",children:"Classe \xe0 tester"}),"\n",(0,i.jsx)(t.p,{children:"Il ne faut pas tester les librairies externes, car c'est la responsabilit\xe9 du propri\xe9taire de la librairie d'effectuer les tests."}),"\n",(0,i.jsxs)(t.p,{children:["Il n'est pas n\xe9cessaire de tester le ",(0,i.jsx)(t.strong,{children:"contexte"})," de ",(0,i.jsx)(t.strong,{children:"EntityFramework"}),", car ",(0,i.jsx)(t.strong,{children:"Microsoft"})," s'en occupe. \xc9galement, ",(0,i.jsx)(t.strong,{children:"FluentValidation"})," n'est pas \xe0 tester."]}),"\n",(0,i.jsx)(t.p,{children:"Par contre, il faut tester les classes qui les utilisent."}),"\n",(0,i.jsxs)(t.p,{children:["Dans cette application, il faudrait tester du ",(0,i.jsx)(t.strong,{children:"Repository"})," au ",(0,i.jsx)(t.strong,{children:"ViewModel"}),". Il ne faut pas oublier les extensions pour le ",(0,i.jsx)(t.strong,{children:"mappage"})," et les validateurs du mod\xe8le du domaine."]}),"\n",(0,i.jsx)(t.p,{children:"Il n'y a rien \xe0 tester dans le mod\xe8le du domaine et de donn\xe9es, car ce sont des classes qui contiennent uniquement des propri\xe9t\xe9s. Il n'y a aucune logique. S'il y avait des m\xe9thodes d'assignation, il faudrait les tester pour s'assurer que l'assignation se fait ad\xe9quatement."}),"\n",(0,i.jsx)(t.h2,{id:"test-unitaire-test-dint\xe9gration-et-test-bout-en-bout-e2e",children:"Test unitaire, Test d'int\xe9gration et Test bout en bout (e2e)"}),"\n",(0,i.jsx)(t.p,{children:"Un test unitaire consiste \xe0 tester un \xe9l\xe9ment isol\xe9 d'une classe. Toutes les d\xe9pendances de la classe doivent \xeatre simul\xe9es pour s'assurer du comportement du test. Si la d\xe9pendance n'est pas simul\xe9e, il est possible qu'elle soit probl\xe9matique. Donc le test pourrait \xeatre un faux positif ou un faux n\xe9gatif."}),"\n",(0,i.jsxs)(t.p,{children:["Par exemple, il faut tester l'ajout d'un item dans un service. Le service doit valider l'objet avant de l'ajouter. L'objet de test cr\xe9\xe9 par le testeur est consid\xe9r\xe9 valide. Donc il n'est pas n\xe9cessaire de le valider, car il faut tester la s\xe9quence de l'ajout. Est-ce que la validation a eu lieu.  Dans le cas qu'il est valide, il doit appeler le ",(0,i.jsx)(t.strong,{children:"Repository"}),". Dans le cas qu'il n'est pas valide, il ne doit pas l'appeler. Donc si le vrai validateur est utilis\xe9, il est possible qu'il y ait un bug. Ce sera le test unitaire du validateur qui d\xe9terminera si la validation fonctionne ad\xe9quatement. Pour le test unitaire du service, il faut tester le cas objet valide et objet non valide. Le simulacre du validateur sera configur\xe9 pour indiquer que l'objet est valide ou non selon le test."]}),"\n",(0,i.jsxs)(t.p,{children:["Pour un test d'int\xe9gration, il faut que les classes communiquent r\xe9ellement entre elles pour s'assurer que la s\xe9quence fonctionne correctement. Il est possible d'utiliser des simulacres pour certains composants qui sont li\xe9s \xe0 l'interface visuelle. Un test d'int\xe9gration complet d\xe9bute de la couche pr\xe9sentation \xe0 la base de donn\xe9es. Dans le cas d'une application ",(0,i.jsx)(t.strong,{children:"WPF"}),", la couche de pr\xe9sentation est le ",(0,i.jsx)(t.strong,{children:"ViewModel"}),". Le test doit communiquer avec une base de donn\xe9es. Il est important d'avoir un contr\xf4le sur les donn\xe9es de la base de donn\xe9es, car il faut s'assurer du r\xe9sultat du test. Les tests d'int\xe9gration sont g\xe9n\xe9ralement li\xe9s au cas d'utilisation. En effectuant une action, est-ce que tous les r\xe9sultats attendus sont valides. Ces tests peuvent \xeatre tr\xe8s complexes \xe0 programmer et \xe0 valider. Il est important de faire les tests les plus granulaires possibles."]}),"\n",(0,i.jsxs)(t.p,{children:["Un test bout en bout ou ",(0,i.jsx)(t.strong,{children:"e2e"})," est un test qui permet de simuler les interactions d'un utilisateur et de v\xe9rifier le comportement. Dans la mesure du possible, il est pr\xe9f\xe9rable de tester \xe0 partir de l'interface visuelle. Selon la technologie utilis\xe9e, il peut \xeatre plus ou moins facile de faire ces tests."]}),"\n",(0,i.jsxs)(t.p,{children:["Il arrive parfois que le test d'int\xe9gration effectue un peu de ",(0,i.jsx)(t.strong,{children:"e2e"})," en m\xeame temps. Avec le ",(0,i.jsx)(t.strong,{children:"ViewModel"}),", il est possible de simuler des actions de l'utilisateur sans avoir besoin de l'interface visuelle. Un test d'int\xe9gration ",(0,i.jsx)(t.strong,{children:"pur"})," fait l'action le plus directement possible et valide uniquement le r\xe9sultat dans la base de donn\xe9es. Les exemples des tests d'int\xe9gration de ce projet adoptent un peu de ",(0,i.jsx)(t.strong,{children:"e2e"}),", car il y aura des assertions sur le comportement des propri\xe9t\xe9s de liaison."]}),"\n",(0,i.jsx)(t.h2,{id:"validit\xe9-dun-test",children:"Validit\xe9 d'un test"}),"\n",(0,i.jsxs)(t.p,{children:["Pour s'assurer que la v\xe9rification du r\xe9sultat du test fonctionne, il doit d\xe9tecter une erreur dans le r\xe9sultat ou dans le comportement. Donc en principe, si on introduit volontairement un ",(0,i.jsx)(t.strong,{children:"bug"})," dans une m\xe9thode, au moins un des tests de cette m\xe9thode doit le d\xe9tecter. Si aucun test ne le d\xe9tecte, il est possible que l'affirmation ne soit pas ad\xe9quate ou qu'il manque un cas de test."]}),"\n",(0,i.jsx)(t.p,{children:"D\xe8s qu'une m\xe9thode est modifi\xe9e, il faut s'assurer que la couverture de test est toujours ad\xe9quate."}),"\n",(0,i.jsx)(t.p,{children:"Dans le cas d'un test comportemental, il est possible qu'un test soit en erreur apr\xe8s une modification, mais que la m\xe9thode soit correcte. Ceci indique au testeur qu'il y a eu une modification dans la m\xe9thode. Est-ce que le nouveau comportement est valide ou c'est une erreur du programmeur ? Il faut analyser le code et d\xe9terminer s'il faut mettre le test \xe0 jour ou non."}),"\n",(0,i.jsx)(t.p,{children:"Par exemple, il faut envoyer un courriel au directeur \xe0 chaque fois qu'un \xe9tudiant \xe9choue un cours. Il faut un test qui v\xe9rifie que l'envoi de courriel est bien ex\xe9cut\xe9 dans le service. Le directeur consid\xe8re qu'il a trop de courriel, il ne souhaite plus recevoir ce courriel. Le service est modifi\xe9 pour retirer la m\xe9thode d'envoi de courriel. Le test va d\xe9tecter que l'envoi de courriel n'est pas appel\xe9, il sera donc en erreur. Mais il s'agit d'un nouveau comportement. Le test doit \xeatre mis \xe0 jour pour tenir compte de la nouvelle r\xe9alit\xe9. \xc0 l'inverse, l'\xe9quipe de d\xe9veloppement a mis en commentaire cette ligne de code pour faire des tests du logiciel, car il ne souhaite pas envoyer un courriel dans les tests d'ex\xe9cution. Mais cette ligne a \xe9t\xe9 oubli\xe9e et elle est toujours en commentaire. Le test va le d\xe9tecter."}),"\n",(0,i.jsx)(t.h3,{id:"caract\xe9ristiques-dun-bon-test",children:"Caract\xe9ristiques d\u2019un bon test"}),"\n",(0,i.jsx)(t.p,{children:"Voici ce que Microsoft recommande pour les tests."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Rapide"})," : il n\u2019est pas rare que les projets matures aient des milliers de tests unitaires. L\u2019ex\xe9cution des tests unitaires doit prendre peu de temps. Millisecondes."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Isol\xe9"})," : les tests unitaires sont autonomes, peuvent \xeatre ex\xe9cut\xe9s isol\xe9ment et n\u2019ont aucune d\xe9pendance vis-\xe0-vis de facteurs externes tels qu\u2019un syst\xe8me de fichiers ou une base de donn\xe9es."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Reproductible"})," : l\u2019ex\xe9cution d\u2019un test unitaire doit \xeatre coh\xe9rente avec ses r\xe9sultats, c\u2019est-\xe0-dire qu\u2019elle retourne toujours le m\xeame r\xe9sultat si vous ne modifiez rien entre les ex\xe9cutions."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Auto-v\xe9rification"})," : le test doit \xeatre en mesure de d\xe9tecter automatiquement s\u2019il a r\xe9ussi ou \xe9chou\xe9 sans aucune interaction humaine."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Temps opportun"})," : l\u2019\xe9criture d\u2019un test unitaire ne doit pas prendre beaucoup de temps par rapport au code test\xe9. Si vous trouvez que le test du code prend beaucoup de temps par rapport \xe0 son \xe9criture, optez pour une conception plus facile \xe0 tester."]}),"\n"]}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["Source : ",(0,i.jsx)(t.a,{href:"https://learn.microsoft.com/fr-ca/dotnet/core/testing/unit-testing-best-practices#characteristics-of-a-good-unit-test",children:"https://learn.microsoft.com/fr-ca/dotnet/core/testing/unit-testing-best-practices#characteristics-of-a-good-unit-test"})]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"explorateur-de-tests-dans-visual-studio",children:"Explorateur de tests dans Visual Studio"}),"\n",(0,i.jsxs)(t.p,{children:["Pour avoir acc\xe8s \xe0 la fen\xeatre ",(0,i.jsx)(t.strong,{children:"Explorateur de tests"})," dans Visual Studio, il fait aller dans le menu ",(0,i.jsx)(t.strong,{children:"Affichage -> Explorateur de tests"})," ou ",(0,i.jsx)(t.strong,{children:"CRTL+T,E"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"Cette fen\xeatre permet de contr\xf4ler les tests."}),"\n",(0,i.jsx)(t.p,{children:"Il est possible d'ex\xe9cuter tous les tests, ou un \xe0 la fois."}),"\n",(0,i.jsxs)(t.p,{children:["Il est possible d'ex\xe9cuter un test en mode ",(0,i.jsx)(t.strong,{children:"debug"})," pour \xeatre en mesure de visualiser les points d'arr\xeat et d'analyser le test."]}),"\n",(0,i.jsxs)(t.p,{children:["Chaque test indique un r\xe9sultat. S'il est en ",(0,i.jsx)(t.strong,{children:"rouge"}),", il est possible de voir l'assertion invalide ou l'exception g\xe9n\xe9r\xe9e dans le ",(0,i.jsx)(t.strong,{children:"R\xe9capitulatif"})," du test."]})]})}function c(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,t,s)=>{s.d(t,{Z:()=>a,a:()=>l});var i=s(7294);const n={},r=i.createContext(n);function l(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);