"use strict";(self.webpackChunknotes_de_cours_4_n_1_2024=self.webpackChunknotes_de_cours_4_n_1_2024||[]).push([[1391],{5197:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>d,toc:()=>a});var s=r(5893),i=r(1151);const t={sidebar_position:20},l=void 0,d={id:"03 Entity Framework/EF_lecture_des_donnees",title:"EF_lecture_des_donnees",description:"Pr\xe9paration du projet de CRUD",source:"@site/docs/03 Entity Framework/EF_lecture_des_donnees.md",sourceDirName:"03 Entity Framework",slug:"/03 Entity Framework/EF_lecture_des_donnees",permalink:"/4N1_2024/docs/03 Entity Framework/EF_lecture_des_donnees",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"NotesSidebar",previous:{title:"Insertion de donn\xe9es",permalink:"/4N1_2024/docs/03 Entity Framework/EF_seed"},next:{title:"Extension de classe",permalink:"/4N1_2024/docs/03 Entity Framework/methode_extension"}},o={},a=[{value:"Pr\xe9paration du projet de CRUD",id:"pr\xe9paration-du-projet-de-crud",level:2},{value:"Cr\xe9ation du projet dans une solution existante",id:"cr\xe9ation-du-projet-dans-une-solution-existante",level:3},{value:"Ajout des d\xe9pendances de projet",id:"ajout-des-d\xe9pendances-de-projet",level:3},{value:"Fichier Usings.cs",id:"fichier-usingscs",level:3},{value:"Lecture des donn\xe9es",id:"lecture-des-donn\xe9es",level:2},{value:"Refactor de Univers",id:"refactor-de-univers",level:3},{value:"using",id:"using",level:3},{value:"Voir le SQL g\xe9n\xe9r\xe9",id:"voir-le-sql-g\xe9n\xe9r\xe9",level:2},{value:"Exemple 1",id:"exemple-1",level:3},{value:"Exemple 2",id:"exemple-2",level:3},{value:"Exemple 3",id:"exemple-3",level:3},{value:"Ajouter des donn\xe9es",id:"ajouter-des-donn\xe9es",level:2},{value:"Exercice",id:"exercice",level:3},{value:"Modifier des donn\xe9es",id:"modifier-des-donn\xe9es",level:2},{value:"Mise \xe0 jour massive",id:"mise-\xe0-jour-massive",level:2},{value:"Supprimer des donn\xe9es",id:"supprimer-des-donn\xe9es",level:2},{value:"Suppression massive",id:"suppression-massive",level:2},{value:"Transaction",id:"transaction",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"pr\xe9paration-du-projet-de-crud",children:"Pr\xe9paration du projet de CRUD"}),"\n",(0,s.jsx)(n.h3,{id:"cr\xe9ation-du-projet-dans-une-solution-existante",children:"Cr\xe9ation du projet dans une solution existante"}),"\n",(0,s.jsxs)(n.p,{children:["Il faut ajouter le projet ",(0,s.jsx)(n.strong,{children:"LinqCRUD"})," dans la solution."]}),"\n",(0,s.jsxs)(n.p,{children:["Pour ce faire, s\xe9lectionnez la solution ",(0,s.jsx)(n.strong,{children:"Univers"})," en haut de l'",(0,s.jsx)(n.strong,{children:"Explorateur de solution"})," et choisissez ",(0,s.jsx)(n.strong,{children:"Ajouter -> Nouveau projet..."})," dans le menu contextuel."]}),"\n",(0,s.jsxs)(n.p,{children:["Cr\xe9ez un projet de type ",(0,s.jsx)(n.strong,{children:"Application Console"}),". Il est important ",(0,s.jsx)(n.strong,{children:"de ne pas choisir"})," la version ",(0,s.jsx)(n.strong,{children:".NET Framework"}),"."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Nom du projet"})," : LinqCRUD"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Infrastructure"})," : .NET la derni\xe8re"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Ensuite, s\xe9lectionnez le projet ",(0,s.jsx)(n.strong,{children:"LinqCRUD"})," dans l'",(0,s.jsx)(n.strong,{children:"Explorateur de solution"})," et choisissez ",(0,s.jsx)(n.strong,{children:"D\xe9finir en tant que projet de d\xe9marrage"})," dans le menu contextuel."]}),"\n",(0,s.jsx)(n.h3,{id:"ajout-des-d\xe9pendances-de-projet",children:"Ajout des d\xe9pendances de projet"}),"\n",(0,s.jsxs)(n.p,{children:["Le projet ",(0,s.jsx)(n.strong,{children:"LinqCRUD"})," aura besoin du projet ",(0,s.jsx)(n.strong,{children:"Univers.EF"})," pour initialiser le contexte."]}),"\n",(0,s.jsx)(n.p,{children:"Il faut l'ajouter dans les d\xe9pendances du projet."}),"\n",(0,s.jsxs)(n.p,{children:["S\xe9lectionnez le dossier ",(0,s.jsx)(n.strong,{children:"D\xe9pendances"})," du projet ",(0,s.jsx)(n.strong,{children:"LinqCRUD"})," et choisissez ",(0,s.jsx)(n.strong,{children:"Ajouter une r\xe9f\xe9rence de projet"})," dans le menu contextuel."]}),"\n",(0,s.jsxs)(n.p,{children:["Dans la fen\xeatre, il faut cocher ",(0,s.jsx)(n.strong,{children:"Univers.EF"}),". Vous venez d'int\xe9grer cette librairie interne au projet."]}),"\n",(0,s.jsx)(n.h3,{id:"fichier-usingscs",children:"Fichier Usings.cs"}),"\n",(0,s.jsxs)(n.p,{children:["Afin de r\xe9duire la taille des classes, les ",(0,s.jsx)(n.strong,{children:"using"})," qui seront beaucoup utilis\xe9s dans ce projet seront d\xe9clar\xe9 globalement."]}),"\n",(0,s.jsxs)(n.p,{children:["Cr\xe9ez le fichier ",(0,s.jsx)(n.strong,{children:"Usings.cs"})," \xe0 la racine du projet ",(0,s.jsx)(n.strong,{children:"LinqCRUD"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"\r\nglobal using Univers.EF.Data; //Les classes du mod\xe8le du contexte\r\nglobal using Univers.EF.Data.Context; // La classe du contexte\r\nglobal using System;\r\nglobal using System.Collections.Generic;\r\nglobal using System.Threading.Tasks;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Au fur et \xe0 mesure que des classes s'ajouteront dans le projet, le fichier ",(0,s.jsx)(n.strong,{children:"Usings.cs"})," sera mis \xe0 jour."]}),"\n",(0,s.jsxs)(n.p,{children:["\xc9galement, le fichier ",(0,s.jsx)(n.strong,{children:"Usings.cs"})," appartient uniquement au projet dans lequel il est cr\xe9\xe9."]}),"\n",(0,s.jsx)(n.h1,{id:"crud-ef-en-linq",children:"CRUD EF en LINQ"}),"\n",(0,s.jsx)(n.h2,{id:"lecture-des-donn\xe9es",children:"Lecture des donn\xe9es"}),"\n",(0,s.jsxs)(n.p,{children:["Inscrivez directement les blocs de code dans le fichier ",(0,s.jsx)(n.strong,{children:"Program.cs"})," pour tester."]}),"\n",(0,s.jsxs)(n.p,{children:["Pour avoir une connexion \xe0 la base de donn\xe9es, il faut cr\xe9er une instance du ",(0,s.jsx)(n.strong,{children:"contexte"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'UniversContext db = new UniversContext();\r\nUnivers univers = db.Univers.FirstOrDefault(); //Retourne le premier univers de la base de donn\xe9es\r\nConsole.WriteLine($"Id : {univers.UniversId}");\r\nConsole.WriteLine($"Nom : {univers.Nom}");\r\ndb.Dispose();\n'})}),"\n",(0,s.jsx)(n.p,{children:"Oups ... petit probl\xe8me!!! Univers est le nom du Namespace ET le nom d'une classe. Le compilateur ne sais pas de quoi on parle."}),"\n",(0,s.jsx)(n.p,{children:"Il y a 2 solutions:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["toujours indiquer que la classe Univers est dans le contexte Univers avec la syntaxe ",(0,s.jsx)(n.strong,{children:"Univers.EF.Data.Univers"}),". Ca vient un peu long."]}),"\n",(0,s.jsx)(n.li,{children:"renommer la classe Univers en Franchise."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Nous allons utiliser la solution 2 avec ce qu'elle a comme complications. Mais ca sera fait une fois pour toute."}),"\n",(0,s.jsx)(n.h3,{id:"refactor-de-univers",children:"Refactor de Univers"}),"\n",(0,s.jsxs)(n.p,{children:["Ouvrez ",(0,s.jsx)(n.strong,{children:"Univers.cs"})," et renommez la classe ",(0,s.jsx)(n.strong,{children:"Univers"})," en ",(0,s.jsx)(n.strong,{children:"Franchise"}),"."]}),"\n",(0,s.jsx)(n.admonition,{title:"Attention",type:"warning",children:(0,s.jsx)(n.p,{children:"c'est la classe qu'il faut renommer."})}),"\n",(0,s.jsx)(n.admonition,{title:"Attention #2",type:"warning",children:(0,s.jsxs)(n.p,{children:["Utilisez l'option ",(0,s.jsx)(n.strong,{children:"rename"})," de visual studio. Ne changez pas directement le nom de la classe. Visual Studio va s'occuper de changer toutes les r\xe9f\xe9rences \xe0 cette classe dans le reste du code."]})}),"\n",(0,s.jsxs)(n.p,{children:["Renommez aussi ",(0,s.jsx)(n.strong,{children:"UniversId"})," pour ",(0,s.jsx)(n.strong,{children:"FranchiseId"})]}),"\n",(0,s.jsx)(n.p,{children:"Quiz: qu'est-ce qui doit suivre le changement d'un nom de classe utilis\xe9 dans un contexte ?"}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"R\xe9ponse"}),(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"le DBset: le type utilis\xe9 et le nom par d\xe9faut de la table (se terminant par Tb)"}),"\n",(0,s.jsx)(n.li,{children:"la classe Personnage contient une r\xe9f\xe9rence vers UniversId"}),"\n",(0,s.jsx)(n.li,{children:"le nom de la table dans le OnModelCreating (entity.ToTable())"}),"\n",(0,s.jsx)(n.li,{children:"le seeder"}),"\n"]})]}),"\n",(0,s.jsx)(n.p,{children:"Commencons par le DbSet."}),"\n",(0,s.jsx)(n.p,{children:"Le type Univers a \xe9t\xe9 chang\xe9 pour Franchise, mais UniversTb ne l'a pas \xe9t\xe9. Changez le pour FranchiseTb"}),"\n",(0,s.jsx)(n.p,{children:"Changeons la r\xe9f\xe9rence dans Personnage."}),"\n",(0,s.jsx)(n.p,{children:"Continuons vers les changement dans le OnModelCreating. Changez le commentaire, et le nom de la table."}),"\n",(0,s.jsx)(n.p,{children:"Et terminons par le seeder."}),"\n",(0,s.jsx)(n.p,{children:"Remplac\xe9 tous les univers et UniversId par franchises et FranchiseId"}),"\n",(0,s.jsx)(n.p,{children:"Il faut maintenant faire la migration."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-powershell",children:"Add-Migration RenommerClasseUnivers -StartupProject Univers.EF\n"})}),"\n",(0,s.jsx)(n.p,{children:"et l'appliquer \xe0 la BD"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-powershell",children:'Update-Database -StartupProject "Univers.EF" -Migration RenommerClasseUnivers\n'})}),"\n",(0,s.jsx)(n.p,{children:"V\xe9rifiez que la migration c'est bien faite."}),"\n",(0,s.jsx)(n.p,{children:"Comme vous pouvez le voir, il arrive qu'on ait des erreurs de design qui n'apparaissent que beaucoup plus tard. Les migrations peuvent nous sortir de ce genre de probl\xe8me dans certains cas, mais il est toujours mieux de bien r\xe9fl\xe9chir au syst\xe8me avant de trop coder."}),"\n",(0,s.jsx)(n.p,{children:"Revenons \xe0 notre premier test de requ\xeate sur la bd utilisant Linq. Notre code devrait fonctionner maintenant en changeant la classe Univers par Franchise:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'UniversContext db = new UniversContext();\r\nFranchise franchise = db.FranchiseTb.FirstOrDefault(); //Retourne la premiere franchise de la base de donn\xe9es\r\nConsole.WriteLine($"Id : {franchise.FranchiseId}");\r\nConsole.WriteLine($"Nom : {franchise.Nom}");\r\ndb.Dispose();\n'})}),"\n",(0,s.jsx)(n.p,{children:"Essayez ce code."}),"\n",(0,s.jsxs)(n.p,{children:["La m\xe9thode ",(0,s.jsx)(n.strong,{children:"Dispose"})," ferme la connexion."]}),"\n",(0,s.jsx)(n.h3,{id:"using",children:"using"}),"\n",(0,s.jsxs)(n.p,{children:["Il est pr\xe9f\xe9rable d'utiliser un bloc de code ",(0,s.jsx)(n.strong,{children:"using"}),". La m\xe9thode ",(0,s.jsx)(n.strong,{children:"Dispose"})," est appel\xe9e automatiquement lorsque le bloc de code est termin\xe9."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'using (UniversContext db = new UniversContext())\r\n{\r\n\tFranchise franchise = db.FranchiseTb.FirstOrDefault();\r\n    Console.WriteLine($"Id : {franchise.FranchiseId}");\r\n\tConsole.WriteLine($"Nom : {franchise.Nom}");\r\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Pour faire une requ\xeate \xe0 la base de donn\xe9es, on peut utiliser ",(0,s.jsx)(n.strong,{children:"LINQ"})," en syntaxe ",(0,s.jsx)(n.strong,{children:"Query"})," ou ",(0,s.jsx)(n.strong,{children:"Lambda"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'using (UniversContext db = new UniversContext())\r\n{\r\n    //Syntaxe Query\r\n    List<Franchise> lstFranchiseQuery = (from lqFranchise in db.FranchiseTb\r\n                                     orderby\r\n                                         lqFranchise.AnneeCreation descending\r\n                                     select\r\n                                         lqFranchise).ToList();\r\n\r\n    foreach (Franchise franchise in lstFranchiseQuery)\r\n    {\r\n        Console.WriteLine($"Id : {franchise.FranchiseId}");\r\n        Console.WriteLine($"Nom : {franchise.Nom}");\r\n    }\r\n\r\n    //Syntaxe Lambda\r\n    List<Franchise> lstFranchiseLambda = db.FranchiseTb.OrderByDescending(u => u.AnneeCreation).ToList();\r\n\r\n    foreach (Franchise franchise in lstFranchiseLambda)\r\n    {\r\n        Console.WriteLine($"Id : {franchise.FranchiseId}");\r\n        Console.WriteLine($"Nom : {franchise.Nom}");\r\n    }\r\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Il est possible d'utiliser le ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"using"})})," sans cr\xe9er un sous bloc de code. Si le ",(0,s.jsx)(n.strong,{children:"contexte"})," doit exister tout le long de la dur\xe9e de vie de la m\xe9thode, il est possible de d\xe9clarer comme ci-dessous."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'MaMethode();\r\n\r\nvoid MaMethode()\r\n{\r\n    //D\xe9claration du contexte par un using\r\n    using UniversContext db = new UniversContext();\r\n\r\n    List<Franchise> lstFranchiseQuery = (from lqFranchise in db.FranchiseTb\r\n                                     orderby\r\n                                         lqFranchise.AnneeCreation descending\r\n                                     select\r\n                                         lqFranchise).ToList();\r\n\r\n    foreach (Franchise franchise in lstFranchiseQuery)\r\n    {\r\n        Console.WriteLine($"Id : {franchise.FranchiseId}");\r\n        Console.WriteLine($"Nom : {franchise.Nom}");\r\n    }\r\n} //Fin du contexte\n'})}),"\n",(0,s.jsx)(n.h2,{id:"voir-le-sql-g\xe9n\xe9r\xe9",children:"Voir le SQL g\xe9n\xe9r\xe9"}),"\n",(0,s.jsx)(n.p,{children:"Il peut \xeatre int\xe9ressant de voir le SQL g\xe9n\xe9r\xe9."}),"\n",(0,s.jsxs)(n.p,{children:["Le contexte doit \xeatre cr\xe9\xe9 avec ces options. Le SQL sera g\xe9n\xe9r\xe9 dans le fichier ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"C:\\eflog\\{tick}.txt"})}),". Il faut que le dossier ",(0,s.jsx)(n.strong,{children:"c:\\eflog"})," existe."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'var optBuilder = new DbContextOptionsBuilder<UniversContext>();\r\noptBuilder.LogTo(message => File.WriteAllText(@"C:\\eflog\\" + DateTime.Now.Ticks + ".txt", message),\r\n    Microsoft.Extensions.Logging.LogLevel.Information);\r\noptBuilder.EnableSensitiveDataLogging(); //Permet de voir les valeurs\r\n\r\nusing (UniversContext db = new UniversContext(optBuilder.Options))\r\n{\r\n\t//Les requ\xeates\r\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Il y aura un fichier de cr\xe9er par requ\xeate effectu\xe9e \xe0 la base de donn\xe9es."}),"\n",(0,s.jsx)(n.h3,{id:"exemple-1",children:"Exemple 1"}),"\n",(0,s.jsxs)(n.p,{children:["Code ",(0,s.jsx)(n.strong,{children:"SQL"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"SELECT * \r\nFROM Film\r\nWHERE Etoile >= 2;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Code ",(0,s.jsx)(n.strong,{children:"LINQ"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'var optBuilder = new DbContextOptionsBuilder<UniversContext>();\r\noptBuilder.LogTo(message => File.WriteAllText(@"C:\\eflog\\" + DateTime.Now.Ticks + ".txt", message),\r\n    Microsoft.Extensions.Logging.LogLevel.Information);\r\noptBuilder.EnableSensitiveDataLogging();\r\n\r\nusing (UniversContext db = new UniversContext(optBuilder.Options))\r\n{\r\n    List<Film> lstFilmQuery = (from lqFilm in db.FilmTb\r\n                               where\r\n                                    lqFilm.Etoile >= 8\r\n                               select\r\n                                    lqFilm).ToList();\r\n\r\n    List<Film> lstFilmLambda = db.FilmTb.Where(f => f.Etoile >= 8).ToList();\r\n    \r\n    foreach(Film film in lstFilmLambda)\r\n    {\r\n        Console.WriteLine($"Id : {film.FilmId}");\r\n        Console.WriteLine($"Titre : {film.Titre}");\r\n    }\r\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Code ",(0,s.jsx)(n.strong,{children:"SQL g\xe9n\xe9r\xe9"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"SELECT [f].[FilmId], [f].[Budget], [f].[DateSortie], [f].[Duree], [f].[Etoile], [f].[Titre]\r\nFROM [Film] AS [f]\r\nWHERE [f].[Etoile] >= CAST(2 AS tinyint)\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Il y a 2 logs de g\xe9n\xe9r\xe9es car il y a 2 requ\xeates identiques de faites: une en query, l'autre en lambda"})}),"\n",(0,s.jsx)(n.h3,{id:"exemple-2",children:"Exemple 2"}),"\n",(0,s.jsxs)(n.p,{children:["Code ",(0,s.jsx)(n.strong,{children:"SQL"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"SELECT * \r\nFROM Film\r\nWHERE Year(DateSortie) = 2021;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Code ",(0,s.jsx)(n.strong,{children:"LINQ"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'var optBuilder = new DbContextOptionsBuilder<UniversContext>();\r\noptBuilder.LogTo(message => File.WriteAllText(@"C:\\eflog\\" + DateTime.Now.Ticks + ".txt", message),\r\n    Microsoft.Extensions.Logging.LogLevel.Information);\r\noptBuilder.EnableSensitiveDataLogging();\r\n\r\nusing (UniversContext db = new UniversContext(optBuilder.Options))\r\n{\r\n    List<Film> lstFilmQuery = (from lqFilm in db.FilmTb\r\n                               where\r\n                                    lqFilm.DateSortie.Year == 2021\r\n                               select\r\n                                    lqFilm).ToList();\r\n\r\n    List<Film> lstFilmLambda = db.FilmTb.Where(f => f.DateSortie.Year == 2021).ToList();\r\n\r\n    foreach(Film film in lstFilmLambda)\r\n    {\r\n        Console.WriteLine($"Id : {film.FilmId}");\r\n        Console.WriteLine($"Titre : {film.Titre}");\r\n    }\r\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Code ",(0,s.jsx)(n.strong,{children:"SQL g\xe9n\xe9r\xe9"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"SELECT [f].[FilmId], [f].[Budget], [f].[DateSortie], [f].[Duree], [f].[Etoile], [f].[Titre]\r\nFROM [Film] AS [f]\r\nWHERE DATEPART(year, [f].[DateSortie]) = 2021\n"})}),"\n",(0,s.jsx)(n.h3,{id:"exemple-3",children:"Exemple 3"}),"\n",(0,s.jsxs)(n.p,{children:["Code ",(0,s.jsx)(n.strong,{children:"SQL"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"SELECT * \r\nFROM Film\r\nORDER BY Year(DateSortie) ASC, Titre DESC;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Code ",(0,s.jsx)(n.strong,{children:"LINQ"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'var optBuilder = new DbContextOptionsBuilder<UniversContext>();\r\noptBuilder.LogTo(message => File.WriteAllText(@"C:\\eflog\\" + DateTime.Now.Ticks + ".txt", message),\r\n    Microsoft.Extensions.Logging.LogLevel.Information);\r\noptBuilder.EnableSensitiveDataLogging();\r\n\r\nusing (UniversContext db = new UniversContext(optBuilder.Options))\r\n{\r\n    List<Film> lstFilmQuery = (from lqFilm in db.FilmTb\r\n                               orderby \r\n                                lqFilm.DateSortie.Year descending, \r\n                                lqFilm.Titre\r\n                               select\r\n                                    lqFilm).ToList();\r\n\r\n    List<Film> lstFilmLambda = db.FilmTb\r\n        .OrderByDescending(f => f.DateSortie.Year)\r\n        .ThenBy(f => f.Titre).ToList();\r\n\r\n    foreach(Film film in lstFilmLambda)\r\n    {\r\n        Console.WriteLine($"Id : {film.FilmId}");\r\n        Console.WriteLine($"Titre : {film.Titre}");\r\n    }\r\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Code ",(0,s.jsx)(n.strong,{children:"SQL g\xe9n\xe9r\xe9"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"SELECT [f].[FilmId], [f].[Budget], [f].[DateSortie], [f].[Duree], [f].[Etoile], [f].[Titre]\r\nFROM [Film] AS [f]\r\nORDER BY DATEPART(year, [f].[DateSortie]) DESC, [f].[Titre]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"ajouter-des-donn\xe9es",children:"Ajouter des donn\xe9es"}),"\n",(0,s.jsx)(n.p,{children:"Pour ajouter un nouvel enregistrement dans la base de donn\xe9es, il faut cr\xe9er un nouvel objet."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers",children:'var optBuilder = new DbContextOptionsBuilder<UniversContext>();\r\noptBuilder.LogTo(message => File.WriteAllText(@"C:\\eflog\\" + DateTime.Now.Ticks + ".txt", message),\r\n    Microsoft.Extensions.Logging.LogLevel.Information);\r\noptBuilder.EnableSensitiveDataLogging();\r\n\r\nusing (UniversContext db = new UniversContext(optBuilder.Options))\r\n{\r\n    //Obtenir la franchise \xe0 modifier\r\n    Franchise franchise = new Franchise()\r\n    {\r\n        Nom = "Teenage mutant ninja turtles",\r\n        AnneeCreation = 1984,\r\n        Proprietaire = "Paramount",\r\n        SiteWeb = "https://www.teenagemutantninjaturtles.com/"\r\n    };\r\n\r\n    //L\'ajouter dans la base de donn\xe9es\r\n    //Le contexte est en mesure de d\xe9terminer la table par le type de l\'objet\r\n    db.Add(franchise);\r\n\r\n    //Affiche la cl\xe9, elle sera \xe0 0\r\n    //highlight-next-line\r\n    Console.WriteLine($"Id : {franchise.FranchiseId}");\r\n\r\n    db.SaveChanges();\r\n\r\n    //Affiche la cl\xe9, elle aura une valeur\r\n    //highlight-next-line\r\n    Console.WriteLine($"Id : {franchise.FranchiseId}");\r\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Remarquez que la cl\xe9 n'est pas sp\xe9cifi\xe9e lors de la cr\xe9ation de l'objet. \xc0 la ligne 22, la valeur de la cl\xe9 est 0, car le contexte ne s'est pas mis \xe0 jour avec la base de donn\xe9es."}),"\n",(0,s.jsxs)(n.p,{children:["Une fois que la m\xe9thode ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"SaveChanges()"})})," a \xe9t\xe9 appel\xe9e, la valeur de la propri\xe9t\xe9 ",(0,s.jsx)(n.strong,{children:"FranchiseId"})," a \xe9t\xe9 mise \xe0 jour avec celle qui a \xe9t\xe9 autog\xe9n\xe9r\xe9e par la base de donn\xe9es."]}),"\n",(0,s.jsx)(n.h3,{id:"exercice",children:"Exercice"}),"\n",(0,s.jsx)(n.p,{children:"Vous devez compl\xe9ter la BD Univers afin de correspondre \xe0 ces donn\xe9es."}),"\n",(0,s.jsx)(n.p,{children:"Il y a d\xe9j\xe0 de l'information dans la bd. Comment allez-vous faire pour connaitre les ids des films, personnages et franchises d\xe9j\xe0 pr\xe9sente dans la bd ?"}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Solution"}),(0,s.jsx)(n.p,{children:"Vous savez comment aller lire de l'information. Cr\xe9ez des variables pour contenir l'info qui est d\xe9j\xe0 dans la bd."})]}),"\n",(0,s.jsxs)(n.p,{children:["Et tant qu'\xe0 se pratiquer, utilisez une ",(0,s.jsx)(n.strong,{children:"List<Distribution>"})," afin de cr\xe9er les distributions."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Table Franchise"})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"FranchiseId"}),(0,s.jsx)(n.th,{children:"Nom"}),(0,s.jsx)(n.th,{children:"AnneCreation"}),(0,s.jsx)(n.th,{children:"SiteWeb"}),(0,s.jsx)(n.th,{children:"Proprietaire"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:"Marvel"}),(0,s.jsx)(n.td,{children:"1939"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://www.marvel.com",children:"https://www.marvel.com"})}),(0,s.jsx)(n.td,{children:"Disney"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"2"}),(0,s.jsx)(n.td,{children:"DC Comics"}),(0,s.jsx)(n.td,{children:"1934"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://www.dc.com",children:"https://www.dc.com"})}),(0,s.jsx)(n.td,{children:"Warner Bros"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]})]})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Table Personnage"})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"PersonnageId"}),(0,s.jsx)(n.th,{children:"Nom"}),(0,s.jsx)(n.th,{children:"IdentiteReelle"}),(0,s.jsx)(n.th,{children:"DateNaissance"}),(0,s.jsx)(n.th,{children:"EstVilain"}),(0,s.jsx)(n.th,{children:"Franchise"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:"Spiderman"}),(0,s.jsx)(n.td,{children:"Peter Parker"}),(0,s.jsx)(n.td,{children:"null"}),(0,s.jsx)(n.td,{children:"0"}),(0,s.jsx)(n.td,{children:"Marvel"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"2"}),(0,s.jsx)(n.td,{children:"Iron Man"}),(0,s.jsx)(n.td,{children:"Tony Stark"}),(0,s.jsx)(n.td,{children:"1970-11-12"}),(0,s.jsx)(n.td,{children:"0"}),(0,s.jsx)(n.td,{children:"Marvel"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"3"}),(0,s.jsx)(n.td,{children:"Batman"}),(0,s.jsx)(n.td,{children:"Bruce Wayne"}),(0,s.jsx)(n.td,{children:"1966-03-04"}),(0,s.jsx)(n.td,{children:"0"}),(0,s.jsx)(n.td,{children:"DC"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"4"}),(0,s.jsx)(n.td,{children:"Joker"}),(0,s.jsx)(n.td,{children:"null"}),(0,s.jsx)(n.td,{children:"1966-01-01"}),(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:"DC"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"5"}),(0,s.jsx)(n.td,{children:"Thor"}),(0,s.jsx)(n.td,{children:"Thor"}),(0,s.jsx)(n.td,{children:"0001-01-01"}),(0,s.jsx)(n.td,{children:"0"}),(0,s.jsx)(n.td,{children:"Marvel"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"6"}),(0,s.jsx)(n.td,{children:"Black Widow"}),(0,s.jsx)(n.td,{children:"Nathasha Romanoff"}),(0,s.jsx)(n.td,{children:"1985-08-31"}),(0,s.jsx)(n.td,{children:"0"}),(0,s.jsx)(n.td,{children:"Marvel"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Table Film"})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"FilmId"}),(0,s.jsx)(n.th,{children:"Titre"}),(0,s.jsx)(n.th,{children:"DateSortie"}),(0,s.jsx)(n.th,{children:"Etoile"}),(0,s.jsx)(n.th,{children:"Duree"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:"Black Widow"}),(0,s.jsx)(n.td,{children:"2021-07-09"}),(0,s.jsx)(n.td,{children:"3"}),(0,s.jsx)(n.td,{children:"121"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"2"}),(0,s.jsx)(n.td,{children:"The Avengers"}),(0,s.jsx)(n.td,{children:"2012-05-04"}),(0,s.jsx)(n.td,{children:"5"}),(0,s.jsx)(n.td,{children:"98"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"3"}),(0,s.jsx)(n.td,{children:"Spiderman"}),(0,s.jsx)(n.td,{children:"2003-05-03"}),(0,s.jsx)(n.td,{children:"5"}),(0,s.jsx)(n.td,{children:"110"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"4"}),(0,s.jsx)(n.td,{children:"The Dark Knight"}),(0,s.jsx)(n.td,{children:"2008-07-18"}),(0,s.jsx)(n.td,{children:"5"}),(0,s.jsx)(n.td,{children:"142"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"5"}),(0,s.jsx)(n.td,{children:"Avengers : Endgame"}),(0,s.jsx)(n.td,{children:"2019-04-26"}),(0,s.jsx)(n.td,{children:"4"}),(0,s.jsx)(n.td,{children:"132"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"6"}),(0,s.jsx)(n.td,{children:"Iron Man"}),(0,s.jsx)(n.td,{children:"2008-05-02"}),(0,s.jsx)(n.td,{children:"4"}),(0,s.jsx)(n.td,{children:"96"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"7"}),(0,s.jsx)(n.td,{children:"Joker"}),(0,s.jsx)(n.td,{children:"2019-10-04"}),(0,s.jsx)(n.td,{children:"4"}),(0,s.jsx)(n.td,{children:"99"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Table Distribution"})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Personnage"}),(0,s.jsx)(n.th,{children:"Film"}),(0,s.jsx)(n.th,{children:"Acteur"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Spiderman"}),(0,s.jsx)(n.td,{children:"Spiderman"}),(0,s.jsx)(n.td,{children:"Tobey Maguire"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Spiderman"}),(0,s.jsx)(n.td,{children:"Avengers : Endgame"}),(0,s.jsx)(n.td,{children:"Tom Holland"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Iron Man"}),(0,s.jsx)(n.td,{children:"Iron Man"}),(0,s.jsx)(n.td,{children:"Robert Downey Jr"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Iron Man"}),(0,s.jsx)(n.td,{children:"The Avengers"}),(0,s.jsx)(n.td,{children:"Robert Downey Jr"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Iron Man"}),(0,s.jsx)(n.td,{children:"Avengers : Endgame"}),(0,s.jsx)(n.td,{children:"Robert Downey Jr"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Batman"}),(0,s.jsx)(n.td,{children:"The Dark Knight"}),(0,s.jsx)(n.td,{children:"Christian Bale"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Joker"}),(0,s.jsx)(n.td,{children:"The Dark Knight"}),(0,s.jsx)(n.td,{children:"Heath Ledger"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Joker"}),(0,s.jsx)(n.td,{children:"Joker"}),(0,s.jsx)(n.td,{children:"Joaquin Phoenix"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Thor"}),(0,s.jsx)(n.td,{children:"The Avengers"}),(0,s.jsx)(n.td,{children:"Chris Hemsworth"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Thor"}),(0,s.jsx)(n.td,{children:"Avengers : Endgame"}),(0,s.jsx)(n.td,{children:"Chris Hemsworth"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Black Widow"}),(0,s.jsx)(n.td,{children:"The Avengers"}),(0,s.jsx)(n.td,{children:"Scarlett Johansson"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Black Widow"}),(0,s.jsx)(n.td,{children:"Avengers : Endgame"}),(0,s.jsx)(n.td,{children:"Scarlett Johansson"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Black Widow"}),(0,s.jsx)(n.td,{children:"Black Widow"}),(0,s.jsx)(n.td,{children:"Scarlett Johansson"})]})]})]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Solution"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'global using Univers.EF.Data; //Les classes du mod\xe8le du contexte\r\nglobal using Univers.EF.Data.Context; // La classe du contexte\r\nglobal using System;\r\nglobal using System.Collections.Generic;\r\nglobal using System.Threading.Tasks;\r\nusing Microsoft.EntityFrameworkCore;\r\n\r\nusing (UniversContext db = new UniversContext())\r\n{\r\n    Franchise marvel = db.FranchiseTb.Where(f => f.Nom == "Marvel").First();\r\n    Franchise dc = db.FranchiseTb.Where(f => f.Nom == "DC Comics").First();\r\n\r\n    Personnage joker = new Personnage()\r\n    {\r\n        Nom = "Joker",\r\n        IdentiteReelle = null,\r\n        DateNaissance = new DateOnly(1966, 01, 01),\r\n        EstVilain = true,\r\n        FranchiseId = dc.FranchiseId,\r\n\r\n    };\r\n\r\n    Personnage thor = new Personnage()\r\n    {\r\n        Nom = "Thor",\r\n        IdentiteReelle = "Thor",\r\n        DateNaissance = new DateOnly(01, 01, 01),\r\n        EstVilain = false,\r\n        FranchiseId = marvel.FranchiseId,\r\n\r\n    };\r\n    Personnage blackwidow = new Personnage()\r\n    {\r\n        Nom = "Black Widow",\r\n        IdentiteReelle = "Nathasha Romanoff",\r\n        DateNaissance = new DateOnly(1985, 08, 31),\r\n        EstVilain = false,\r\n        FranchiseId = marvel.FranchiseId,\r\n\r\n    };\r\n\r\n    db.Add(joker);\r\n    db.Add(thor);\r\n    db.Add(blackwidow);\r\n\r\n    //il est important de faire la sauvegarde afin d\'avoir des id pour les 3\r\n    // personnages ajout\xe9s. \r\n    db.SaveChanges();\r\n\r\n    Film darkknight = new Film()\r\n    {\r\n        Titre = "The Dark Knight",\r\n        DateSortie = new DateOnly(2008, 07, 18),\r\n        Etoile = 5, \r\n        Duree = 142,\r\n    };\r\n    Film endgame = new Film()\r\n    {\r\n        Titre = "Avengers : Endgame",\r\n        DateSortie = new DateOnly(2019, 04, 26),\r\n        Etoile = 4,\r\n        Duree = 132,\r\n    };\r\n    Film ironman = new Film()\r\n    {\r\n        Titre = "Iron Man",\r\n        DateSortie = new DateOnly(2008, 05, 02),\r\n        Etoile = 4,\r\n        Duree = 96,\r\n    };\r\n\r\n    Film jokerf = new Film()\r\n    {\r\n        Titre = "Joker",\r\n        DateSortie = new DateOnly(2019, 10, 04),\r\n        Etoile = 4,\r\n        Duree = 99,\r\n    };\r\n\r\n    db.Add(darkknight);\r\n    db.Add(endgame);\r\n    db.Add(ironman); \r\n    db.Add(jokerf);\r\n\r\n    db.SaveChanges();\r\n    \r\n    //Pour compl\xe9ter l\'inventaire des personnages et films qui sont d\xe9j\xe0 dans la bd\r\n    Personnage spidey = db.PersonnageTb.Where(p => p.Nom == "Spiderman").First();\r\n    Personnage ironmanP = db.PersonnageTb.Where(p => p.Nom == "Iron Man").First();\r\n    Personnage batman = db.PersonnageTb.Where(p => p.Nom == "Batman").First();\r\n\r\n    Film spidermanF = db.FilmTb.Where(f => f.Titre == "Spiderman").First();\r\n    Film ironmanF  = db.FilmTb.Where(f => f.Titre == "Iron Man").First();\r\n    Film batmanF = db.FilmTb.Where(f => f.Titre == "The Dark Knight").First();\r\n    Film avenger = db.FilmTb.Where(f => f.Titre == "The Avengers").First();\r\n    Film blackwidowF = db.FilmTb.Where(f => f.Titre == "Black Widow").First();\r\n\r\n    List<Distribution> distributions = new List<Distribution>()\r\n    {\r\n        new Distribution(){PersonnageId=spidey.PersonnageId,\r\n                            FilmId = spidermanF.FilmId, \r\n                            Acteur = "Tobey Maguire"},\r\n        new Distribution(){PersonnageId=spidey.PersonnageId,\r\n                            FilmId = endgame.FilmId,\r\n                            Acteur = "Tom Holland"},\r\n        new Distribution(){PersonnageId=ironmanP.PersonnageId,\r\n                            FilmId = ironmanF.FilmId,\r\n                            Acteur = "Robert Downey Jr"},\r\n        new Distribution(){PersonnageId=ironmanP.PersonnageId,\r\n                            FilmId = endgame.FilmId,\r\n                            Acteur = "Robert Downey Jr"},\r\n        new Distribution(){PersonnageId=batman.PersonnageId,\r\n                            FilmId = darkknight.FilmId,\r\n                            Acteur = "Christian Bale"},\r\n        new Distribution(){PersonnageId=joker.PersonnageId,\r\n                            FilmId = darkknight.FilmId,\r\n                            Acteur = "Heath Ledger"},\r\n        new Distribution(){PersonnageId=joker.PersonnageId,\r\n                            FilmId = jokerf.FilmId,\r\n                            Acteur = "Joaquin Phoenix"},\r\n        new Distribution(){PersonnageId=thor.PersonnageId,\r\n                            FilmId = endgame.FilmId,\r\n                            Acteur = "Chris Hemsworth"},\r\n        new Distribution(){PersonnageId=thor.PersonnageId,\r\n                            FilmId = avenger.FilmId,\r\n                            Acteur = "Chris Hemsworth"},\r\n        new Distribution(){PersonnageId=blackwidow.PersonnageId,\r\n                            FilmId = endgame.FilmId,\r\n                            Acteur = "Scarlett Johansson"},\r\n        new Distribution(){PersonnageId=blackwidow.PersonnageId,\r\n                            FilmId = avenger.FilmId,\r\n                            Acteur = "Scarlett Johansson"},\r\n        new Distribution(){PersonnageId=blackwidow.PersonnageId,\r\n                            FilmId = blackwidowF.FilmId,\r\n                            Acteur = "Scarlett Johansson"},\r\n    };\r\n\r\n    foreach (Distribution d  in distributions)\r\n    {\r\n        db.Add(d);\r\n    }\r\n    db.SaveChanges();\r\n}\n'})})]}),"\n",(0,s.jsx)(n.h2,{id:"modifier-des-donn\xe9es",children:"Modifier des donn\xe9es"}),"\n",(0,s.jsx)(n.p,{children:"Pour \xeatre en mesure de modifier un enregistrement, il faut avoir une instance d'un objet de l'enregistrement."}),"\n",(0,s.jsxs)(n.p,{children:["Il n'y a pas d'action directe comme ",(0,s.jsx)(n.strong,{children:"SQL"})," pour le faire en une seule commande."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",metastring:'title="NE PAS EX\xc9CUTER"',children:"UPDATE Franchise SET Nom = 'DC Comics modifi\xe9' WHERE FranchiseId = 2; --En supposant que DC = 2\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Pour faire la m\xeame chose avec ",(0,s.jsx)(n.strong,{children:"Entity Framework"}),", il faut faire un ",(0,s.jsx)(n.strong,{children:"SELECT"})," pour obtenir l'enregistrement et ensuite modifier les valeurs."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'var optBuilder = new DbContextOptionsBuilder<UniversContext>();\r\noptBuilder.LogTo(message => File.WriteAllText(@"C:\\eflog\\" + DateTime.Now.Ticks + ".txt", message),\r\n    Microsoft.Extensions.Logging.LogLevel.Information);\r\noptBuilder.EnableSensitiveDataLogging();\r\n\r\nusing (UniversContext db = new UniversContext(optBuilder.Options))\r\n{\r\n    //Obetnir la franchise \xe0 modifier\r\n    Franchise franchise = (from lqFranchise in db.FranchiseTb\r\n                        where\r\n                             lqFranchise.FranchiseId == 2\r\n                        select\r\n                             lqFranchise).First();\r\n\r\n    //Appliquer la modification\r\n    franchise.Nom = "DC Comics modifi\xe9";    \r\n\r\n    //Obtenir la liste de tous les franchises\r\n    List<Franchise> lstFranchise = db.FranchiseTb.ToList();\r\n\r\n    //Afficher toutes les franchises\r\n    foreach(Franchise f in lstFranchise)\r\n    {\r\n        Console.WriteLine($"Id : {f.FranchiseId}");\r\n        Console.WriteLine($"Nom : {f.Nom}");\r\n    }\r\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Ex\xe9cutez le code et allez voir dans la base de donn\xe9es. Est-ce que l'enregistrement s'y retrouve ? Non il n'est pas dans la base de donn\xe9es."}),"\n",(0,s.jsxs)(n.p,{children:["Pourtant, le ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"foreach"})})," sur tous les enregistrements de la table l'a affich\xe9."]}),"\n",(0,s.jsxs)(n.p,{children:["Regardez le code ",(0,s.jsx)(n.strong,{children:"SQL"})," g\xe9n\xe9r\xe9. Il aura seulement les 2 ",(0,s.jsx)(n.strong,{children:"SELECT"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["L'enregistrement n'est pas dans la base de donn\xe9es, car l'ajout a \xe9t\xe9 fait en m\xe9moire uniquement dans le ",(0,s.jsx)(n.strong,{children:"contexte"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Il est important d'appeler la m\xe9thode ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"SaveChanges()"})})," pour indiquer au contexte qu'il faut appliquer les modifications \xe0 la base de donn\xe9es."]}),"\n",(0,s.jsx)(n.p,{children:"Ex\xe9cutez ce code. La modification sera appliqu\xe9e."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'var optBuilder = new DbContextOptionsBuilder<UniversContext>();\r\noptBuilder.LogTo(message => File.WriteAllText(@"C:\\eflog\\" + DateTime.Now.Ticks + ".txt", message),\r\n    Microsoft.Extensions.Logging.LogLevel.Information);\r\noptBuilder.EnableSensitiveDataLogging();\r\n\r\nusing (UniversContext db = new UniversContext(optBuilder.Options))\r\n{\r\n    //Obtenir la franchise \xe0 modifier\r\n    Franchise franchise = (from lqFranchise in db.FranchiseTb\r\n                        where\r\n                             lqFranchise.FranchiseId == 2\r\n                        select\r\n                             lqFranchise).First();\r\n\r\n    //Appliquer la modification\r\n    franchise.Nom = "DC Comics modifi\xe9";\r\n\r\n    db.SaveChanges();    \r\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Dans le code g\xe9n\xe9r\xe9, il y aura un ",(0,s.jsx)(n.strong,{children:"UPDATE"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",metastring:'title="NE PAS EX\xc9CUTER"',children:"info: 2023-02-22 13:57:52.904 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) \r\n      Executed DbCommand (86ms) [Parameters=[@p1='2', @p0='DC Comics' (Nullable = false) (Size = 100) (DbType = AnsiString)], CommandType='Text', CommandTimeout='30']\r\n      SET IMPLICIT_TRANSACTIONS OFF;\r\n      SET NOCOUNT ON;\r\n      UPDATE [Franchise] SET [Nom] = @p0\r\n      OUTPUT 1\r\n      WHERE [FranchiseId] = @p1;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"mise-\xe0-jour-massive",children:"Mise \xe0 jour massive"}),"\n",(0,s.jsxs)(n.p,{children:["Contrairement au langage ",(0,s.jsx)(n.strong,{children:"SQL"}),", il n'est pas possible de faire une mise \xe0 jour sur plusieurs enregistrements en fonction de sa condition."]}),"\n",(0,s.jsx)(n.p,{children:"Voici par exemple, il faut masquer l'identit\xe9 r\xe9elle de tous les personnages de la franchise Marvel."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",metastring:'title="NE PAS EX\xc9CUTER"',children:"UPDATE Personnage SET IdentiteReelle = 'Confidentielle' WHERE FranchiseId = 1; --En supposant que Marvel = 1;\n"})}),"\n",(0,s.jsx)(n.p,{children:"Si la table a 1 million de personnages de Marvel, cette simple requ\xeate est en mesure de mettre \xe0 jour tous les enregistrements."}),"\n",(0,s.jsxs)(n.p,{children:["Avec ",(0,s.jsx)(n.strong,{children:"Entity Framework"}),", il faut faire en plusieurs \xe9tapes."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"R\xe9cup\xe9rer tous les enregistrements"}),"\n",(0,s.jsx)(n.li,{children:"Parcourir les enregistrements"}),"\n",(0,s.jsx)(n.li,{children:"Assigner la nouvelle valeur \xe0 chaque enregistrement"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'var optBuilder = new DbContextOptionsBuilder<UniversContext>();\r\noptBuilder.LogTo(message => File.WriteAllText(@"C:\\eflog\\" + DateTime.Now.Ticks + ".txt", message),\r\n    Microsoft.Extensions.Logging.LogLevel.Information);\r\noptBuilder.EnableSensitiveDataLogging();\r\n\r\nusing (UniversContext db = new UniversContext(optBuilder.Options))\r\n{\r\n    //Obtenir les personnages \xe0 mettre \xe0 jour\r\n    List<Personnage> lstPersonnage =\r\n        (from lqPersonnage in db.PersonnageTb\r\n         where\r\n            lqPersonnage.FranchiseId == 1\r\n         select lqPersonnage).ToList();\r\n\r\n    \r\n    foreach(Personnage personnage in lstPersonnage)\r\n    {\r\n        personnage.IdentiteReelle = "Confidentielle";\r\n    }\r\n\r\n    db.SaveChanges();    \r\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Remarquez que le ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"SaveChanges()"})})," se fait uniquement \xe0 la fin. Il est possible de faire plusieurs modifications et d'enregistrer les modifications \xe0 la fin."]}),"\n",(0,s.jsxs)(n.p,{children:["Est-ce qu'il aura un seul ou plusieurs ",(0,s.jsx)(n.strong,{children:"UPDATE"})," ? Voici le ",(0,s.jsx)(n.strong,{children:"SQL g\xe9n\xe9r\xe9"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"info: 2023-02-22 13:59:54.801 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) \r\n      Executed DbCommand (39ms) [Parameters=[@p1='1', @p0='Confidentielle' (Size = 100) (DbType = AnsiString), @p3='2', @p2='Confidentielle' (Size = 100) (DbType = AnsiString), @p5='5', @p4='Confidentielle' (Size = 100) (DbType = AnsiString), @p7='6', @p6='Confidentielle' (Size = 100) (DbType = AnsiString)], CommandType='Text', CommandTimeout='30']\r\n      SET NOCOUNT ON;\r\n      UPDATE [Personnage] SET [IdentiteReelle] = @p0\r\n      OUTPUT 1\r\n      WHERE [PersonnageId] = @p1;\r\n      UPDATE [Personnage] SET [IdentiteReelle] = @p2\r\n      OUTPUT 1\r\n      WHERE [PersonnageId] = @p3;\r\n      UPDATE [Personnage] SET [IdentiteReelle] = @p4\r\n      OUTPUT 1\r\n      WHERE [PersonnageId] = @p5;\r\n      UPDATE [Personnage] SET [IdentiteReelle] = @p6\r\n      OUTPUT 1\r\n      WHERE [PersonnageId] = @p7;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Il y en a plusieurs. Pour des mises \xe0 jour massives, ",(0,s.jsx)(n.strong,{children:"SQL"})," a toujours son utilit\xe9."]}),"\n",(0,s.jsx)(n.h2,{id:"supprimer-des-donn\xe9es",children:"Supprimer des donn\xe9es"}),"\n",(0,s.jsx)(n.p,{children:"Pour supprimer un enregistrement, il faut faire une technique similaire \xe0 la mise \xe0 jour."}),"\n",(0,s.jsxs)(n.p,{children:["Pour supprimer la franchise ",(0,s.jsx)(n.strong,{children:"Teenage mutant ninja turtles"}),", il faut faire cette requ\xeate."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",metastring:'title="NE PAS EX\xc9CUTER"',children:"DELETE FROM Franchise WHERE Nom = 'Teenage mutant ninja turtles';\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Avec ",(0,s.jsx)(n.strong,{children:"Entity Framework"}),", il faut faire en plusieurs \xe9tapes."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"R\xe9cup\xe9rer l'enregistrement"}),"\n",(0,s.jsxs)(n.li,{children:["Le retirer du ",(0,s.jsx)(n.strong,{children:"DBSet"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'var optBuilder = new DbContextOptionsBuilder<UniversContext>();\r\noptBuilder.LogTo(message => File.WriteAllText(@"C:\\eflog\\" + DateTime.Now.Ticks + ".txt", message),\r\n    Microsoft.Extensions.Logging.LogLevel.Information);\r\noptBuilder.EnableSensitiveDataLogging();\r\n\r\nusing (UniversContext db = new UniversContext(optBuilder.Options))\r\n{\r\n    Franchise franchise = db.FranchiseTb.Where(u => u.Nom == "Teenage mutant ninja turtles").First();\r\n\r\n    //Le contexte est en mesure de d\xe9terminer la table par le type de l\'objet\r\n    db.Remove(franchise);\r\n\r\n    db.SaveChanges();\r\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"suppression-massive",children:"Suppression massive"}),"\n",(0,s.jsxs)(n.p,{children:["Contrairement au langage ",(0,s.jsx)(n.strong,{children:"SQL"}),", il n'est pas possible de supprimer plusieurs enregistrements en fonction de sa condition."]}),"\n",(0,s.jsxs)(n.p,{children:["Pour supprimer toutes les r\xe9f\xe9rences de ",(0,s.jsx)(n.strong,{children:"Spideman"})," dans les films, il faudrait faire ceci en ",(0,s.jsx)(n.strong,{children:"SQL"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",metastring:'title="NE PAS EX\xc9CUTER"',children:"DELETE FROM [Distribution] WHERE PersonnageId = 1; --En supposant que Spiderman = 1\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Avec ",(0,s.jsx)(n.strong,{children:"Entity Framework"}),", il faut faire en plusieurs \xe9tapes."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"R\xe9cup\xe9rer toutes les donn\xe9es"}),"\n",(0,s.jsxs)(n.li,{children:["Les retirer du ",(0,s.jsx)(n.strong,{children:"DBSet"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:'var optBuilder = new DbContextOptionsBuilder<UniversContext>();\r\noptBuilder.LogTo(message => File.WriteAllText(@"C:\\eflog\\" + DateTime.Now.Ticks + ".txt", message),\r\n    Microsoft.Extensions.Logging.LogLevel.Information);\r\noptBuilder.EnableSensitiveDataLogging();\r\n\r\nusing (UniversContext db = new UniversContext(optBuilder.Options))\r\n{\r\n\t//Obtenir les distributions \xe0 supprimer\r\n    List<Distribution> lstDistribution =\r\n        (from lqDistribution in db.Distribution\r\n         where\r\n            lqDistribution.PersonnageId == 1\r\n         select lqDistribution).ToList();\r\n    \r\n    //Le contexte est en mesure de d\xe9terminer la table par le type de l\'objet\r\n    db.RemoveRange(lstDistribution);\r\n\r\n    db.SaveChanges();\r\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Voici le ",(0,s.jsx)(n.strong,{children:"SQL g\xe9n\xe9r\xe9"}),". Encore une fois, il y a plusieurs requ\xeates."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"info: 2023-02-22 14:07:33.395 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) \r\n      Executed DbCommand (16ms) [Parameters=[@p0='3', @p1='1', @p2='5', @p3='1'], CommandType='Text', CommandTimeout='30']\r\n      SET NOCOUNT ON;\r\n      DELETE FROM [Distribution]\r\n      OUTPUT 1\r\n      WHERE [FilmId] = @p0 AND [PersonnageId] = @p1;\r\n      DELETE FROM [Distribution]\r\n      OUTPUT 1\r\n      WHERE [FilmId] = @p2 AND [PersonnageId] = @p3;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"transaction",children:"Transaction"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Entity Framework"})," effectue toutes les modifications(ajout, suppression, mise \xe0 jour) de la base de donn\xe9es dans la m\xe9moire de son contexte."]}),"\n",(0,s.jsxs)(n.p,{children:["Toutes les actions sont effectu\xe9es lors de l'ex\xe9cution de la m\xe9thode ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"SaveChanges()"})}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Est-ce que le comportement de ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"SaveChanges()"})})," est comme celui d'une transaction ?"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'var optBuilder = new DbContextOptionsBuilder<UniversContext>();\r\noptBuilder.LogTo(message => File.WriteAllText(@"C:\\eflog\\" + DateTime.Now.Ticks + ".txt", message),\r\n    Microsoft.Extensions.Logging.LogLevel.Information);\r\noptBuilder.EnableSensitiveDataLogging();\r\n\r\nusing (UniversContext db = new UniversContext(optBuilder.Options))\r\n{\r\n    Film film1 = new Film()\r\n    {\r\n        Titre = "Film #1",\r\n        DateSortie = new DateTime(2019, 7, 29),\r\n        Etoile = 4,\r\n        Duree = 123        \r\n    };\r\n\r\n    Film film2 = new Film()\r\n    {\r\n        Titre = "Film #2",\r\n        DateSortie = new DateTime(2017, 8, 9),\r\n        Etoile = 100, //Ne respecte pas la contrainte CHECK de 1 \xe0 10\r\n        Duree = 135\r\n    };\r\n\r\n    Film film3 = new Film()\r\n    {\r\n        Titre = "Film #3",\r\n        DateSortie = new DateTime(2021, 12, 17),\r\n        Etoile = 9,\r\n        Duree = 99\r\n    };    \r\n\r\n    //Ajout des nouveaux films dans le contexte\r\n    db.Add(film1);\r\n    db.Add(film2);\r\n    db.Add(film3);\r\n\r\n    db.SaveChanges();\r\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Lors de l'ex\xe9cution du ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"SaveChanges()"})}),", il y aura une exception."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-powershell",children:'SqlException\xa0: The MERGE statement conflicted with the CHECK constraint "CK_Film_Etoile". The conflict occurred in database "eDA_4N1_GestionPersonnage", table "dbo.Film", column \'Etoile\'.\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Est-ce qu'une partie des donn\xe9es seront dans la base de donn\xe9es ? Il n'y aura aucun des 3 films, car la m\xe9thode ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"SaveChanges()"})})," effectue une transaction."]}),"\n",(0,s.jsxs)(n.p,{children:["La gestion de transaction se fait automatiquement, il faut seulement bien g\xe9rer quand est-ce que la m\xe9thode ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"SaveChanges()"})})," doit \xeatre appel\xe9e."]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>d,a:()=>l});var s=r(7294);const i={},t=s.createContext(i);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);