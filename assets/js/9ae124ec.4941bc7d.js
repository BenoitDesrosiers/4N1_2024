"use strict";(self.webpackChunknotes_de_cours_4_n_1_2024=self.webpackChunknotes_de_cours_4_n_1_2024||[]).push([[3539],{3999:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>g,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var t=n(5893),i=n(1151);const a={sidebar_position:232,draft:!1},s="Barre d'activit\xe9",o={id:"WPF partie 2/barre_activite",title:"Barre d'activit\xe9",description:"Il serait int\xe9ressant d'ajouter une barre d'activit\xe9 pour indiquer \xe0 l'utilisateur qu'il y a du travail en cours d'ex\xe9cution.",source:"@site/docs/72-WPF partie 2/barre_activite.md",sourceDirName:"72-WPF partie 2",slug:"/WPF partie 2/barre_activite",permalink:"/4N1_2024/docs/WPF partie 2/barre_activite",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:232,frontMatter:{sidebar_position:232,draft:!1},sidebar:"NotesSidebar",previous:{title:"Liste des cat\xe9gories",permalink:"/4N1_2024/docs/WPF partie 2/lister_categorie"},next:{title:"Lien entre les couches",permalink:"/4N1_2024/docs/WPF partie 2/servicelogic"}},l={},c=[];function d(e){const r={code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"barre-dactivit\xe9",children:"Barre d'activit\xe9"}),"\n",(0,t.jsx)(r.p,{children:"Il serait int\xe9ressant d'ajouter une barre d'activit\xe9 pour indiquer \xe0 l'utilisateur qu'il y a du travail en cours d'ex\xe9cution."}),"\n",(0,t.jsxs)(r.p,{children:["Modifiez la classe ",(0,t.jsx)(r.strong,{children:"ListeCategoriesVM"}),"."]}),"\n",(0,t.jsxs)(r.p,{children:["Il faut ajouter une propri\xe9t\xe9 ",(0,t.jsx)(r.strong,{children:"EstEnTravail"}),"(ligne 45) et son attribut ",(0,t.jsx)(r.strong,{children:"_estEnTravail"})," (ligne 15)."]}),"\n",(0,t.jsxs)(r.p,{children:["Dans la m\xe9thode ",(0,t.jsx)(r.strong,{children:"ObtenirListeAsync()"}),", la propri\xe9t\xe9 ",(0,t.jsx)(r.strong,{children:"EstEnTravail"})," est mise \xe0 jour au d\xe9but (ligne 33) et \xe0 la fin (ligne 38)."]}),"\n",(0,t.jsx)(r.p,{children:"Le d\xe9lai artificiel est toujours dans la m\xe9thode \xe0 la ligne 36."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-csharp",metastring:"showLineNumbers",children:'using CommunityToolkit.Mvvm.Input;\r\n\r\nnamespace SuperCarte.WPF.ViewModels;\r\n\r\n/// <summary>\r\n/// ViewModel de la vue ListeCategories\r\n/// </summary>\r\npublic class ListeCategoriesVM : BaseVM\r\n{\r\n    //D\xe9pendances\r\n    private readonly ICategorieService _categorieService;\r\n\r\n    //Attributs des propri\xe9t\xe9s\r\n    private List<CategorieModel> _lstCategories;\r\n    //highlight-next-line\r\n    private bool _estEnTravail = false;\r\n    private CategorieModel? _categorieSelection;\r\n\r\n    /// <summary>\r\n    /// Constructeur\r\n    /// </summary>\r\n    /// <param name="categorieService">Service du mod\xe8le Categorie</param>\r\n\tpublic ListeCategoriesVM(ICategorieService categorieService)\r\n    {\r\n        _categorieService = categorieService;\r\n\r\n        ObtenirListeCommande = new AsyncRelayCommand(ObtenirListeAsync);\r\n    }\r\n\r\n    /// <summary>\r\n    /// Obtenir la liste de cat\xe9gories du service\r\n    /// </summary>    \r\n    private async Task ObtenirListeAsync()\r\n    {\r\n        //highlight-next-line\r\n        EstEnTravail = true;\r\n\r\n        ListeCategories = await _categorieService.ObtenirListeAsync();\r\n        //highlight-next-line\r\n        await Task.Delay(5000);\r\n\r\n        //highlight-next-line\r\n        EstEnTravail = false;\r\n    }\r\n\r\n    //Commandes\r\n    public IAsyncRelayCommand ObtenirListeCommande { get; set; }\r\n\r\n    //Propri\xe9t\xe9s li\xe9es\r\n    //highlight-start\r\n    public bool EstEnTravail\r\n    {\r\n        get\r\n        {\r\n            return _estEnTravail;\r\n        }\r\n        set\r\n        {\r\n            SetProperty(ref _estEnTravail, value);\r\n        }\r\n    }\r\n//highlight-end\r\n    public List<CategorieModel> ListeCategories\r\n    {\r\n        get\r\n        {\r\n            return _lstCategories;\r\n        }\r\n        set\r\n        {\r\n            SetProperty(ref _lstCategories, value);\r\n        }\r\n    }\r\n\r\n    public CategorieModel? CategorieSelection\r\n{\r\n    get\r\n    {\r\n        return _categorieSelection;\r\n    }\r\n    set\r\n    {\r\n        SetProperty(ref _categorieSelection, value);\r\n    }\r\n}\r\n}\n'})}),"\n",(0,t.jsxs)(r.p,{children:["Dans le fichier ",(0,t.jsx)(r.strong,{children:"UcListeCategories.xaml"}),", ajoutez le composant ",(0,t.jsx)(r.strong,{children:"<ProgressBar>"})," dans la 4e rang\xe9e de la grille (ligne 68)."]}),"\n",(0,t.jsxs)(r.p,{children:["La propri\xe9t\xe9 ",(0,t.jsx)(r.strong,{children:"IsIndeterminate"})," du composant ",(0,t.jsx)(r.strong,{children:"<ProgressBar>"}),"  est li\xe9e \xe0 la propri\xe9t\xe9 ",(0,t.jsx)(r.strong,{children:"EstEnTravail"})," du ",(0,t.jsx)(r.strong,{children:"ViewModel"}),"."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-xaml",metastring:"showLineNumbers ",children:'<UserControl x:Class="SuperCarte.WPF.Views.UcListeCategories"\r\n             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\r\n             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\r\n             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" \r\n             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" \r\n             xmlns:local="clr-namespace:SuperCarte.WPF.Views"\r\n             xmlns:vm="clr-namespace:SuperCarte.WPF.ViewModels"\r\n             d:DataContext="{d:DesignInstance vm:ListeCategoriesVM}"\r\n             mc:Ignorable="d" \r\n             d:DesignHeight="450" d:DesignWidth="800"\r\n             Loaded="UserControl_Loaded">\r\n    <Grid>\r\n        <Grid.RowDefinitions>\r\n             \x3c!--Rang\xe9e 0 --\x3e\r\n            <RowDefinition Height="auto" /> \r\n            \x3c!--Rang\xe9e 1 --\x3e\r\n            <RowDefinition Height="auto" />\r\n            \x3c!--Rang\xe9e 2 --\x3e\r\n            <RowDefinition Height="*" />\r\n            \x3c!--Rang\xe9e 3 --\x3e\r\n            <RowDefinition Height="20" />\r\n        </Grid.RowDefinitions>           \r\n        \r\n         \x3c!--Rang\xe9e 0--\x3e\r\n        <TextBlock \r\n            Grid.Row="0" \r\n            VerticalAlignment="Center" HorizontalAlignment="Center"\r\n            FontSize="16" FontWeight="Bold"\r\n            Text="Liste des cat\xe9gories"/>\r\n        \r\n        \x3c!--Rang\xe9e 1--\x3e\r\n        <WrapPanel Grid.Row="1" \r\n                    Orientation="Horizontal" VerticalAlignment="Center">\r\n            \r\n            <Button Content="N" ToolTip="Nouveau"\r\n                    Margin="5" Width="32" Height="32" />\r\n            <Button Content="E" ToolTip="\xc9diter"\r\n                    Margin="5" Width="32" Height="32" />\r\n            <Button Content="S" ToolTip="Supprimer"\r\n                    Margin="5" Width="32" Height="32" />\r\n            <Button Content="R" ToolTip="Rafraichir"\r\n                    Margin="5" Width="32" Height="32"\r\n                    Command="{Binding ObtenirListeCommande}" />\r\n        </WrapPanel>\r\n\r\n        \x3c!--Rang\xe9e 2--\x3e\r\n        <DataGrid Grid.Row="2" \r\n                  AutoGenerateColumns="False"\r\n                  SelectionMode="Single" \r\n                  IsReadOnly="True"\r\n                  ItemsSource="{Binding ListeCategories}"\r\n                  SelectedItem="{Binding CategorieSelection}">\r\n            <DataGrid.Columns>\r\n                <DataGridTextColumn Header="Id"\r\n                                    MinWidth="50"\r\n                                    Binding="{Binding CategorieId}"/>\r\n                \r\n                <DataGridTextColumn Header="Nom"\r\n                                    MinWidth="300"\r\n                                    Binding="{Binding Nom}"/>\r\n\r\n                <DataGridTextColumn Header="Description"                                    \r\n                                    Binding="{Binding Description}"\r\n                                    MinWidth="300"\r\n                                    Width="*"/>\r\n\r\n            </DataGrid.Columns>\r\n        </DataGrid>\r\n        //highlight-start\r\n        \x3c!--Rang\xe9e 3--\x3e\r\n        <ProgressBar Grid.Row="3" Height="10" IsIndeterminate="{Binding EstEnTravail}" />\r\n\t\t//highlight-end\r\n    </Grid>\r\n</UserControl>\n'})}),"\n",(0,t.jsx)(r.p,{children:"D\xe9marrez le programme et la barre sera en activit\xe9 en pendant un peu plus de 5 secondes ."}),"\n",(0,t.jsx)(r.p,{children:"Vous pouvez retirer le d\xe9lai artificiel."})]})}function g(e={}){const{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,r,n)=>{n.d(r,{Z:()=>o,a:()=>s});var t=n(7294);const i={},a=t.createContext(i);function s(e){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);