"use strict";(self.webpackChunknotes_de_cours_4_n_1_2024=self.webpackChunknotes_de_cours_4_n_1_2024||[]).push([[1544],{7642:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var i=r(5893),t=r(1151);const l={sidebar_position:220,draft:!1},o="Composants XAML",s={id:"WPF partie 2/composants_xaml",title:"Composants XAML",description:"Avant de continuer avec des am\xe9lioration du code de SuperCarte, nous allons exp\xe9rimenter avec les composants visuels XAML dans le HelloWorld.",source:"@site/docs/72-WPF partie 2/composants_xaml.md",sourceDirName:"72-WPF partie 2",slug:"/WPF partie 2/composants_xaml",permalink:"/4N1_2024/docs/WPF partie 2/composants_xaml",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:220,frontMatter:{sidebar_position:220,draft:!1},sidebar:"NotesSidebar",previous:{title:"Ex\xe9cution du HelloWorld",permalink:"/4N1_2024/docs/WPF partie 2/partie2_helloworld_resume"},next:{title:"Commande",permalink:"/4N1_2024/docs/WPF partie 2/commande"}},a={},c=[{value:"Formater des donn\xe9es",id:"formater-des-donn\xe9es",level:2},{value:"Grid Layout",id:"grid-layout",level:2},{value:"Taille fixe",id:"taille-fixe",level:3},{value:"Taille dynamique",id:"taille-dynamique",level:3},{value:"Taille fixe et dynamique",id:"taille-fixe-et-dynamique",level:3},{value:"Taille automatique",id:"taille-automatique",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"composants-xaml",children:"Composants XAML"}),"\n",(0,i.jsx)(n.p,{children:"Avant de continuer avec des am\xe9lioration du code de SuperCarte, nous allons exp\xe9rimenter avec les composants visuels XAML dans le HelloWorld."}),"\n",(0,i.jsx)(n.h2,{id:"formater-des-donn\xe9es",children:"Formater des donn\xe9es"}),"\n",(0,i.jsx)(n.p,{children:"Il est possible de formater la valeur des propri\xe9t\xe9s dans un format sp\xe9cifique."}),"\n",(0,i.jsxs)(n.p,{children:["Lors du ",(0,i.jsx)(n.strong,{children:"Binding"}),", il est possible d'indiquer la transformation avec la propri\xe9t\xe9 ",(0,i.jsx)(n.strong,{children:"StringFormat"}),", Le choix de l'affichage appartient \xe0 la ",(0,i.jsx)(n.strong,{children:"Vue"}),", donc il faut faire les transformations d'affichage dans la ",(0,i.jsx)(n.strong,{children:"Vue"})," et non dans le ",(0,i.jsx)(n.strong,{children:"ViewModel"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Pour la date, elle sera affich\xe9e selon le format ",(0,i.jsxs)(n.strong,{children:["dd MMM yyyy HH:mm",":ss"]}),". Donc pour ",(0,i.jsx)(n.strong,{children:"2023-03-03 15:23:03.452121"})," se sera ",(0,i.jsx)(n.strong,{children:"3 Mars 2023 15:23:03"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Pour le nombre d\xe9cimal, il sera affich\xe9 avec un s\xe9parateur de milliers et une pr\xe9cision au milli\xe8me (3 d\xe9cimaux). Le format sera ",(0,i.jsx)(n.strong,{children:"N3"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'<UserControl x:Class="SuperCarte.WPF.Views.UcHelloWorld"\r\n             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\r\n             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\r\n             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" \r\n             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" \r\n             xmlns:local="clr-namespace:SuperCarte.WPF.Views"\r\n             xmlns:vm="clr-namespace:SuperCarte.WPF.ViewModels"\r\n             xmlns:v="clr-namespace:SuperCarte.WPF.Views"        \r\n             mc:Ignorable="d"\r\n             d:DataContext="{d:DesignInstance Type=vm:HelloWorldVM}" \r\n             d:DesignHeight="450" d:DesignWidth="800">\r\n    <Grid>\r\n        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="Hello World" />\r\n\t\t\t//highlight-start\r\n            <TextBlock Text="{Binding DateHeure , StringFormat=\\{0:d MMMM yyyy HH:mm:ss\\}}"/>\r\n            <TextBlock Text="{Binding ValeurDecimal, StringFormat=\\{0:N3\\}}" />     \r\n\t\t\t//highlight-end       \r\n            <CheckBox IsChecked="{Binding ValeurBool}" />\r\n        </StackPanel>        \r\n    </Grid>\r\n</UserControl>\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Notez que le format des chaines de caract\xe8res d\xe9pend \xe9galement des param\xe8tres r\xe9gionaux de l'ordinateur. En ",(0,i.jsx)(n.strong,{children:"fr-ca"}),", le s\xe9parateur de milliers est un espace et la d\xe9cimale est une virgule. Donc ",(0,i.jsx)(n.strong,{children:"N3"})," ne s'affichera pas n\xe9cessairement de la m\xeame fa\xe7on."]}),"\n",(0,i.jsxs)(n.p,{children:["Pour plus d'information sur les r\xe8gles : ",(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/fr-ca/dotnet/api/system.string.format?view=net-7.0",children:"https://learn.microsoft.com/fr-ca/dotnet/api/system.string.format?view=net-7.0"})]}),"\n",(0,i.jsx)(n.h2,{id:"grid-layout",children:"Grid Layout"}),"\n",(0,i.jsxs)(n.p,{children:["Le composant ",(0,i.jsx)(n.strong,{children:"Grid"})," permet de cr\xe9er une disposition dans un contr\xf4le. Afin de faciliter la visualisation du ",(0,i.jsx)(n.strong,{children:"Grid"}),", le param\xe8tre ",(0,i.jsx)(n.strong,{children:'ShowGridLines="true"'}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Afin de d\xe9finir la grille, il faut d\xe9clarer des rang\xe9es et des colonnes."}),"\n",(0,i.jsx)(n.p,{children:"Dans l'exemple ci-dessous, la disposition sera de 3 rang\xe9es et de 2 colonnes. La premi\xe8re colonne est 0 et la premi\xe8re rang\xe9e est 0."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xaml",metastring:'title="Ne pas copier"',children:'<Grid ShowGridLines="true">\r\n        <Grid.RowDefinitions>\r\n            <RowDefinition />\r\n            <RowDefinition />            \r\n            <RowDefinition />\r\n        </Grid.RowDefinitions>\r\n        <Grid.ColumnDefinitions>\r\n            <ColumnDefinition />\r\n            <ColumnDefinition />\r\n        </Grid.ColumnDefinitions>\r\n </Grid>\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Si aucun \xe9l\xe9ment n'est sp\xe9cifi\xe9 dans ",(0,i.jsx)(n.strong,{children:"Grid.ColumnDefinitions"}),", il y aura une seule colonne qui prendra tout l'espace."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xaml",metastring:'title="Ne pas copier"',children:'<Grid ShowGridLines="true">\r\n        <Grid.RowDefinitions>\r\n            <RowDefinition />\r\n            <RowDefinition />            \r\n            <RowDefinition />\r\n        </Grid.RowDefinitions>\r\n </Grid>\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Si aucun \xe9l\xe9ment n'est sp\xe9cifi\xe9 dans ",(0,i.jsx)(n.strong,{children:"Grid.RowDefinitions"}),", il y aura une seule rang\xe9e qui prendra tout l'espace."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xaml",metastring:'title="Ne pas copier"',children:'<Grid ShowGridLines="true">\r\n        <Grid.ColumnDefinitions>\r\n            <ColumnDefinition />\r\n            <ColumnDefinition />\r\n        </Grid.ColumnDefinitions>\r\n </Grid>\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Afin d'indiquer l'emplacement d'un composant dans la grille, il faut l'indiquer dans les propri\xe9t\xe9s de positionnement ",(0,i.jsx)(n.strong,{children:"Grid.Row"})," et ",(0,i.jsx)(n.strong,{children:"Grid.Column"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["\xc9galement, s'il la largeur et la hauteur n'est pas sp\xe9cifi\xe9, la disposition de la grille sera uniforme en fonction de la taille de la fen\xeatre. Elle sera ",(0,i.jsx)(n.strong,{children:"responsive"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Si ce n'est pas sp\xe9cifi\xe9, ce sera la valeur ",(0,i.jsx)(n.strong,{children:"0"}),". Il est recommand\xe9 de toujours indiquer l'emplacement de la rang\xe9e \xe0 moins qu'il y ait seulement 1 rang\xe9e et la m\xeame chose pour les colonnes."]}),"\n",(0,i.jsxs)(n.p,{children:["Il n'est pas n\xe9cessaire de les d\xe9clarer dans un ordre sp\xe9cifique. Le ",(0,i.jsx)(n.strong,{children:"TextBloc"})," (2,1) est d\xe9clar\xe9 avant le (1,0). Ce n'est pas recommand\xe9 de faire ceci, mais c'est possible."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xaml",metastring:'title="Ne pas copier"',children:'<Grid ShowGridLines="true">\r\n        <Grid.RowDefinitions>\r\n            <RowDefinition />\r\n            <RowDefinition />\r\n            <RowDefinition />\r\n        </Grid.RowDefinitions>\r\n        <Grid.ColumnDefinitions>\r\n            <ColumnDefinition />\r\n            <ColumnDefinition />\r\n        </Grid.ColumnDefinitions>\r\n\r\n        \x3c!--Row 0, Column 0--\x3e\r\n        <TextBlock  Grid.Row="0" Grid.Column="0"  Text="Hello World 0,0" />\r\n        \x3c!--<TextBlock Text="Hello World 0,0" />--\x3e\r\n        \r\n        \x3c!--Row 0, Col 1--\x3e\r\n        <TextBlock Grid.Row="0" Grid.Column="1" Text="Hello World 0,1" />\r\n        \x3c!--<TextBlock Grid.Column="1"  Text="Hello World 0,1" />--\x3e\r\n\r\n//highlight-start\r\n        \x3c!--Row 2, Col 1--\x3e\r\n        <TextBlock Grid.Row="2" Grid.Column="1" Text="Hello World 2,1" />\r\n//highlight-end        \r\n\r\n        \x3c!--Row 1, Col 0--\x3e\r\n        <TextBlock Grid.Row="1" Grid.Column="0" Text="Hello World 1,0" />\r\n</Grid>\n'})}),"\n",(0,i.jsx)(n.p,{children:"\xc9galement, il n'est pas n\xe9cessaire de sp\xe9cifier l'emplacement pour les composants enfants, si le parent poss\xe8de les propri\xe9t\xe9s de positionnement."}),"\n",(0,i.jsxs)(n.p,{children:["Ici, le composant parent ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/uwp/api/windows.ui.xaml.controls.stackpanel?view=winrt-22621",children:"StackPanel"})})," est positionn\xe9 (Grid.Row et Grid.Column), il n'est donc pas n\xe9cessaire de positionner ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/uwp/api/windows.ui.xaml.controls.textblock?view=winrt-22621",children:"TextBlock"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Dans ",(0,i.jsx)(n.strong,{children:"Views/UcHelloWorld.xaml"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xaml",metastring:'title="Vous pouvez l\'essayer"',children:'<UserControl x:Class="SuperCarte.WPF.Views.UcHelloWorld"\r\n             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\r\n             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\r\n             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" \r\n             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" \r\n             xmlns:local="clr-namespace:SuperCarte.WPF.Views"\r\n             xmlns:vm="clr-namespace:SuperCarte.WPF.ViewModels"\r\n             xmlns:v="clr-namespace:SuperCarte.WPF.Views"        \r\n             mc:Ignorable="d"\r\n             d:DataContext="{d:DesignInstance Type=vm:HelloWorldVM}" \r\n             d:DesignHeight="450" d:DesignWidth="800">\r\n    <Grid ShowGridLines="true">\r\n        <Grid.RowDefinitions>\r\n            <RowDefinition />\r\n            <RowDefinition />\r\n            <RowDefinition />\r\n        </Grid.RowDefinitions>\r\n        <Grid.ColumnDefinitions>\r\n            <ColumnDefinition />\r\n            <ColumnDefinition />\r\n        </Grid.ColumnDefinitions>\r\n        \r\n        \x3c!-- Rang\xe9e 0 Colonne 0 --\x3e\r\n        <StackPanel Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="Hello World (0,0)" />            \r\n        </StackPanel>\r\n\r\n        \x3c!-- Rang\xe9e 0 Colonne 1 --\x3e\r\n        <StackPanel Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="Hello World (0,1)" />            \r\n        </StackPanel>\r\n\r\n        \x3c!-- Rang\xe9e 1 Colonne 0 --\x3e\r\n\r\n        <StackPanel Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="Hello World (1,0)" />            \r\n        </StackPanel>\r\n\r\n        \x3c!-- Rang\xe9e 1 Colonne 1 --\x3e\r\n        <StackPanel Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="Hello World (1,1)" />  \r\n        </StackPanel>\r\n    </Grid>\r\n</UserControl>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"taille-fixe",children:"Taille fixe"}),"\n",(0,i.jsxs)(n.p,{children:["Dans l'exemple ci-dessous, il y a 4 rang\xe9es. Il y a un \xe9l\xe9ment par rang\xe9es. La hauteur des rang\xe9es est fixe, donc la fen\xeatre n'est pas ",(0,i.jsx)(n.strong,{children:"responsive"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Le nombre correspond au nombre de pixels."}),"\n",(0,i.jsxs)(n.p,{children:["Dans ",(0,i.jsx)(n.strong,{children:"Views/UcHelloWorld.xaml"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xaml",metastring:'title="Vous pouvez l\'essayer"',children:'<UserControl x:Class="SuperCarte.WPF.Views.UcHelloWorld"\r\n             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\r\n             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\r\n             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" \r\n             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" \r\n             xmlns:local="clr-namespace:SuperCarte.WPF.Views"\r\n             xmlns:vm="clr-namespace:SuperCarte.WPF.ViewModels"\r\n             xmlns:v="clr-namespace:SuperCarte.WPF.Views"        \r\n             mc:Ignorable="d"\r\n             d:DataContext="{d:DesignInstance Type=vm:HelloWorldVM}" \r\n             d:DesignHeight="450" d:DesignWidth="800">\r\n    <Grid ShowGridLines="true">\r\n        <Grid.RowDefinitions>\r\n            <RowDefinition Height="100" />\r\n            <RowDefinition Height="200" />\r\n            <RowDefinition Height="300" />\r\n            <RowDefinition Height="400" />\r\n        </Grid.RowDefinitions>\r\n        \r\n        \x3c!-- Rang\xe9e 0 --\x3e\r\n        <StackPanel Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="Hello World" />            \r\n        </StackPanel>\r\n                 \r\n        \x3c!-- Rang\xe9e 1 --\x3e\r\n        <StackPanel Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="{Binding DateHeure , StringFormat=\\{0:d MMMM yyyy HH:mm:ss\\}}"/>\r\n        </StackPanel>\r\n\r\n        \x3c!-- Rang\xe9e 2 --\x3e\r\n        <StackPanel Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="{Binding ValeurDecimal, StringFormat=\\{0:N3\\}}" />\r\n        </StackPanel>\r\n\r\n        \x3c!-- Rang\xe9e 3 --\x3e\r\n        <StackPanel Grid.Row="3" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <CheckBox IsChecked="{Binding ValeurBool}" />\r\n        </StackPanel>\r\n    </Grid>\r\n</UserControl>\n'})}),"\n",(0,i.jsx)(n.p,{children:"Dans l'exemple ci-dessous, il y a \xe9galement des colonnes \xe0 taille fixe."}),"\n",(0,i.jsxs)(n.p,{children:["Dans ",(0,i.jsx)(n.strong,{children:"Views/UcHelloWorld.xaml"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xaml",metastring:'title="Vous pouvez l\'essayer"',children:'<UserControl x:Class="SuperCarte.WPF.Views.UcHelloWorld"\r\n             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\r\n             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\r\n             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" \r\n             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" \r\n             xmlns:local="clr-namespace:SuperCarte.WPF.Views"\r\n             xmlns:vm="clr-namespace:SuperCarte.WPF.ViewModels"\r\n             xmlns:v="clr-namespace:SuperCarte.WPF.Views"        \r\n             mc:Ignorable="d"\r\n             d:DataContext="{d:DesignInstance Type=vm:HelloWorldVM}" \r\n             d:DesignHeight="450" d:DesignWidth="800">\r\n    <Grid ShowGridLines="true">\r\n        <Grid.RowDefinitions>\r\n            <RowDefinition Height="100" />\r\n            <RowDefinition Height="500" />\r\n            <RowDefinition Height="200" />\r\n        </Grid.RowDefinitions>\r\n        <Grid.ColumnDefinitions>\r\n            <ColumnDefinition Width="200" />\r\n            <ColumnDefinition Width="600" />\r\n        </Grid.ColumnDefinitions>\r\n\r\n        \x3c!-- Rang\xe9e 0 Colonne 0 --\x3e\r\n        <StackPanel Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="Hello World" />\r\n        </StackPanel>\r\n\r\n        \x3c!-- Rang\xe9e 0  Colonne 1--\x3e\r\n        <StackPanel Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="{Binding DateHeure , StringFormat=\\{0:d MMMM yyyy HH:mm:ss\\}}"/>\r\n        </StackPanel>\r\n\r\n        \x3c!-- Rang\xe9e 1 Colonne 1--\x3e\r\n        <StackPanel Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="{Binding ValeurDecimal, StringFormat=\\{0:N3\\}}" />\r\n        </StackPanel>\r\n\r\n        \x3c!-- Rang\xe9e 2 Colonne 2 --\x3e\r\n        <StackPanel Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <CheckBox IsChecked="{Binding ValeurBool}" />\r\n        </StackPanel>\r\n    </Grid>\r\n</UserControl>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"taille-dynamique",children:"Taille dynamique"}),"\n",(0,i.jsxs)(n.p,{children:["La valeur \xe9toile ",(0,i.jsx)(n.strong,{children:"*"})," consiste \xe0 prendre toute l'espace disponible sur la hauteur ou la largeur. Si la valeur n'est pas sp\xe9cifi\xe9e, la valeur par d\xe9faut est ",(0,i.jsx)(n.strong,{children:"*"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Dans ",(0,i.jsx)(n.strong,{children:"Views/UcHelloWorld.xaml"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xaml",metastring:'title="Vous pouvez l\'essayer"',children:'<UserControl x:Class="SuperCarte.WPF.Views.UcHelloWorld"\r\n             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\r\n             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\r\n             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" \r\n             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" \r\n             xmlns:local="clr-namespace:SuperCarte.WPF.Views"\r\n             xmlns:vm="clr-namespace:SuperCarte.WPF.ViewModels"\r\n             xmlns:v="clr-namespace:SuperCarte.WPF.Views"        \r\n             mc:Ignorable="d"\r\n             d:DataContext="{d:DesignInstance Type=vm:HelloWorldVM}" \r\n             d:DesignHeight="450" d:DesignWidth="800">\r\n    <Grid ShowGridLines="true">\r\n        <Grid.RowDefinitions>\r\n            <RowDefinition Height="*" />\r\n            <RowDefinition Height="*" />\r\n            <RowDefinition Height="*" />\r\n        </Grid.RowDefinitions>\r\n        <Grid.ColumnDefinitions>\r\n            <ColumnDefinition Width="*" />\r\n            <ColumnDefinition Width="*"/>\r\n        </Grid.ColumnDefinitions>\r\n\r\n        \x3c!-- Rang\xe9e 0 Colonne 0 --\x3e\r\n        <StackPanel Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="Hello World (0,0)" />\r\n        </StackPanel>\r\n\r\n        \x3c!-- Rang\xe9e 0 Colonne 1 --\x3e\r\n        <StackPanel Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="Hello World (0,1)" />\r\n        </StackPanel>\r\n\r\n        \x3c!-- Rang\xe9e 1 Colonne 0 --\x3e\r\n\r\n        <StackPanel Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="Hello World (1,0)" />\r\n        </StackPanel>\r\n\r\n        \x3c!-- Rang\xe9e 1 Colonne 1 --\x3e\r\n        <StackPanel Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="Hello World (1,1)" />\r\n        </StackPanel>\r\n    </Grid>\r\n</UserControl>\n'})}),"\n",(0,i.jsx)(n.p,{children:"Il est possible de d\xe9finir des proportions relatives dans la taille."}),"\n",(0,i.jsxs)(n.p,{children:["Il est possible d'utiliser l'\xe9toile ",(0,i.jsx)(n.strong,{children:"*"})," avec un nombre pour repr\xe9senter une proportion. La fen\xeatre sera alors ",(0,i.jsx)(n.strong,{children:"responsive"})," et la proportion sera respect\xe9e."]}),"\n",(0,i.jsxs)(n.p,{children:["Dans ",(0,i.jsx)(n.strong,{children:"Views/UcHelloWorld.xaml"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xaml",metastring:'title="Vous pouvez l\'essayer"',children:'<UserControl x:Class="SuperCarte.WPF.Views.UcHelloWorld"\r\n             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\r\n             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\r\n             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" \r\n             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" \r\n             xmlns:local="clr-namespace:SuperCarte.WPF.Views"\r\n             xmlns:vm="clr-namespace:SuperCarte.WPF.ViewModels"\r\n             xmlns:v="clr-namespace:SuperCarte.WPF.Views"        \r\n             mc:Ignorable="d"\r\n             d:DataContext="{d:DesignInstance Type=vm:HelloWorldVM}" \r\n             d:DesignHeight="450" d:DesignWidth="800">\r\n    <Grid ShowGridLines="true">\r\n        <Grid.RowDefinitions>\r\n            <RowDefinition Height="1*" />  \x3c!-- 1/8 --\x3e\r\n            <RowDefinition Height="5*" />  \x3c!-- 5/8 --\x3e\r\n            <RowDefinition Height="2*" />  \x3c!-- 2/8 --\x3e\r\n        </Grid.RowDefinitions>\r\n        <Grid.ColumnDefinitions>\r\n            <ColumnDefinition Width="1*" /> \x3c!-- 1/4--\x3e\r\n            <ColumnDefinition Width="3*"/>  \x3c!-- 1/4 --\x3e\r\n        </Grid.ColumnDefinitions>\r\n\r\n        \x3c!-- Rang\xe9e 0 Colonne 0 --\x3e\r\n        <StackPanel Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="Hello World (0,0)" />\r\n        </StackPanel>\r\n\r\n        \x3c!-- Rang\xe9e 0 Colonne 1 --\x3e\r\n        <StackPanel Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="Hello World (0,1)" />\r\n        </StackPanel>\r\n\r\n        \x3c!-- Rang\xe9e 1 Colonne 0 --\x3e\r\n\r\n        <StackPanel Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="Hello World (1,0)" />\r\n        </StackPanel>\r\n\r\n        \x3c!-- Rang\xe9e 1 Colonne 1 --\x3e\r\n        <StackPanel Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="Hello World (1,1)" />\r\n        </StackPanel>\r\n    </Grid>\r\n</UserControl>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"taille-fixe-et-dynamique",children:"Taille fixe et dynamique"}),"\n",(0,i.jsx)(n.p,{children:"Il est possible de faire une combinaison des 2. Il peut avoir une section fixe pour repr\xe9senter une barre d'outils, mais le reste de la page doit prendre l'espace disponible."}),"\n",(0,i.jsxs)(n.p,{children:["Dans ",(0,i.jsx)(n.strong,{children:"Views/UcHelloWorld.xaml"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xaml",metastring:'title="Vous pouvez l\'essayer"',children:'<UserControl x:Class="SuperCarte.WPF.Views.UcHelloWorld"\r\n             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\r\n             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\r\n             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" \r\n             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" \r\n             xmlns:local="clr-namespace:SuperCarte.WPF.Views"\r\n             xmlns:vm="clr-namespace:SuperCarte.WPF.ViewModels"\r\n             xmlns:v="clr-namespace:SuperCarte.WPF.Views"        \r\n             mc:Ignorable="d"\r\n             d:DataContext="{d:DesignInstance Type=vm:HelloWorldVM}" \r\n             d:DesignHeight="450" d:DesignWidth="800">\r\n    <Grid ShowGridLines="true">\r\n        <Grid.RowDefinitions>\r\n            <RowDefinition Height="50" />\r\n            <RowDefinition Height="*" />\r\n            <RowDefinition Height="100" />\r\n        </Grid.RowDefinitions>        \r\n\r\n        \x3c!-- Rang\xe9e 0 Fixe \xe0 50 pixels --\x3e\r\n        <StackPanel Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="Hello World (0)" />\r\n        </StackPanel>\r\n\r\n        \x3c!-- Rang\xe9e 1 Dynamique --\x3e\r\n        <StackPanel Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="Hello World (1)" />\r\n        </StackPanel>\r\n\r\n        \x3c!-- Rang\xe9e 2 Fixe \xe0 100 pixels --\x3e\r\n\r\n        <StackPanel Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="Hello World (2)" />\r\n        </StackPanel>\r\n    </Grid>\r\n</UserControl>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"taille-automatique",children:"Taille automatique"}),"\n",(0,i.jsxs)(n.p,{children:["Il est possible d'avoir une taille automatique. C'est pratique pour avoir une hauteur d'une rang\xe9e qui s'adapte \xe0 la taille de la fen\xeatre. Elle devient donc ",(0,i.jsx)(n.strong,{children:"responsive"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["La valeur ",(0,i.jsx)(n.strong,{children:"auto"})," permet de g\xe9rer ce comportement."]}),"\n",(0,i.jsxs)(n.p,{children:["Dans la vue ci-dessous, la premi\xe8re rang\xe9e est automatique. Elle contient une liste de bouton \xe0 l'int\xe9rieur d'un ",(0,i.jsx)(n.strong,{children:"<WrapPanel>"}),". Ce composant d\xe9place son contenu en fonction de l'espace disponible. Lorsqu'il a l'int\xe9rieur d'une rang\xe9e automatique, il est en mesure de prendre plus de hauteur si la largeur est insuffisante. Les boutons vont se d\xe9placer sur plusieurs lignes."]}),"\n",(0,i.jsx)(n.p,{children:"La 2e rang\xe9e est dynamique. Elle va prendre l'espace disponible et la 3e rang\xe9e est fixe \xe0 10 pixels."}),"\n",(0,i.jsxs)(n.p,{children:["Dans ",(0,i.jsx)(n.strong,{children:"Views/UcHelloWorld.xaml"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xaml",metastring:'title="Vous pouvez l\'essayer"',children:'<UserControl x:Class="SuperCarte.WPF.Views.UcHelloWorld"\r\n             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\r\n             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\r\n             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" \r\n             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" \r\n             xmlns:local="clr-namespace:SuperCarte.WPF.Views"\r\n             xmlns:vm="clr-namespace:SuperCarte.WPF.ViewModels"\r\n             xmlns:v="clr-namespace:SuperCarte.WPF.Views"        \r\n             mc:Ignorable="d"\r\n             d:DataContext="{d:DesignInstance Type=vm:HelloWorldVM}" \r\n             d:DesignHeight="450" d:DesignWidth="800">\r\n    <Grid ShowGridLines="true">\r\n        <Grid.RowDefinitions>\r\n            <RowDefinition Height="auto" />\r\n            <RowDefinition Height="*" />\r\n            <RowDefinition Height="50" />\r\n        </Grid.RowDefinitions>\r\n\r\n        \x3c!-- Rang\xe9e 0 automatique --\x3e\r\n\t\t//highlight-next-line\r\n        <WrapPanel Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <Button Content="0" Width="30" Height="30" Margin="5"/>\r\n            <Button Content="1" Width="30" Height="30" Margin="5"/>\r\n            <Button Content="2" Width="30" Height="30" Margin="5"/>\r\n            <Button Content="3" Width="30" Height="30" Margin="5"/>\r\n            <Button Content="4" Width="30" Height="30" Margin="5"/>\r\n            <Button Content="5" Width="30" Height="30" Margin="5"/>\r\n            <Button Content="6" Width="30" Height="30" Margin="5"/>\r\n            <Button Content="7" Width="30" Height="30" Margin="5"/>\r\n            <Button Content="8" Width="30" Height="30" Margin="5"/>\r\n            <Button Content="9" Width="30" Height="30" Margin="5"/>            \r\n        </WrapPanel>\r\n\r\n        \x3c!-- Rang\xe9e 1 Dynamique --\x3e\r\n        <StackPanel Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="Hello World (1)" />\r\n        </StackPanel>\r\n\r\n        \x3c!-- Rang\xe9e 2 Fixe \xe0 50 pixels --\x3e\r\n\r\n        <StackPanel Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="Center">\r\n            <TextBlock Text="Hello World (2)" />\r\n        </StackPanel>\r\n    </Grid>\r\n</UserControl>\n'})})]})}function m(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>s,a:()=>o});var i=r(7294);const t={},l=i.createContext(t);function o(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);