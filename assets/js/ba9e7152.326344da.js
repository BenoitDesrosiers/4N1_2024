"use strict";(self.webpackChunknotes_de_cours_4_n_1_2024=self.webpackChunknotes_de_cours_4_n_1_2024||[]).push([[3335],{1795:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var t=r(5893),i=r(1151);const s={sidebar_position:410,draft:!1},a="Authentification",o={id:"WPF partie 4/authentification",title:"Authentification",description:"L'authentification consiste \xe0 valider l'identit\xe9 d'un utilisateur. La m\xe9thode la plus conventionnelle est l'utilisation d'un nom d'utilisateur et d'un mot de passe.",source:"@site/docs/76-WPF partie 4/authentification.md",sourceDirName:"76-WPF partie 4",slug:"/WPF partie 4/authentification",permalink:"/4N1_2024/docs/WPF partie 4/authentification",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:410,frontMatter:{sidebar_position:410,draft:!1},sidebar:"NotesSidebar",previous:{title:"Code Partie 4",permalink:"/4N1_2024/docs/WPF partie 4/wpf_partie4_source"},next:{title:"Message d'erreur",permalink:"/4N1_2024/docs/WPF partie 4/msg_erreur"}},l={},d=[{value:"SuperCarte.Core",id:"supercartecore",level:2},{value:"Requ\xeate ObtenirParNomUtilisateur - UtilisateurRepo",id:"requ\xeate-obtenirparnomutilisateur---utilisateurrepo",level:3},{value:"Classe du mod\xe8le - UtilisateurAuthentifieModel",id:"classe-du-mod\xe8le---utilisateurauthentifiemodel",level:3},{value:"M\xe9thode d&#39;autorisation - UtilisateurService",id:"m\xe9thode-dautorisation---utilisateurservice",level:3},{value:"SuperCarte.WPF",id:"supercartewpf",level:2},{value:"Classe d&#39;assistance - Authentificateur",id:"classe-dassistance---authentificateur",level:3},{value:"Enregistrement de la classe d&#39;assistance - App.xaml.cs",id:"enregistrement-de-la-classe-dassistance---appxamlcs",level:3},{value:"Cr\xe9ation du ViewModel - ConnexionVM",id:"cr\xe9ation-du-viewmodel---connexionvm",level:3},{value:"Classe d&#39;assistance pour le PasswordBox",id:"classe-dassistance-pour-le-passwordbox",level:3},{value:"Enregistrer le ViewModel - SCViewModelExtensions",id:"enregistrer-le-viewmodel---scviewmodelextensions",level:3},{value:"Cr\xe9ation de la vue - UcConnexion.xaml",id:"cr\xe9ation-de-la-vue---ucconnexionxaml",level:3},{value:"Ajout de la ressource pour cr\xe9er le lien entre ViewModel et Vue - MainWindow.xaml",id:"ajout-de-la-ressource-pour-cr\xe9er-le-lien-entre-viewmodel-et-vue---mainwindowxaml",level:3},{value:"Modification de la vue initiale - MainWindowVM",id:"modification-de-la-vue-initiale---mainwindowvm",level:3},{value:"Test",id:"test",level:3}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"authentification",children:"Authentification"}),"\n",(0,t.jsx)(n.p,{children:"L'authentification consiste \xe0 valider l'identit\xe9 d'un utilisateur. La m\xe9thode la plus conventionnelle est l'utilisation d'un nom d'utilisateur et d'un mot de passe."}),"\n",(0,t.jsxs)(n.p,{children:["Pour aider le logiciel, il faut mettre en place une classe d'assistance qui contiendra l'information de l'utilisateur connect\xe9. Cette classe utilisera les services de l'application pour valider le compte utilisateur. Cette classe sera dans le projet ",(0,t.jsx)(n.strong,{children:".WPF"}),", car la gestion de l'\xe9tat de la s\xe9curit\xe9 est d\xe9pendante de la couche de pr\xe9sentation. Pour un contr\xf4leur Web, ce sera g\xe9n\xe9ralement un jeton. Avec ",(0,t.jsx)(n.strong,{children:"WPF"}),", il n'y a pas de classe fournie par le cadriciel pour g\xe9rer la s\xe9curit\xe9, il faut donc la cr\xe9er."]}),"\n",(0,t.jsx)(n.h2,{id:"supercartecore",children:"SuperCarte.Core"}),"\n",(0,t.jsx)(n.h3,{id:"requ\xeate-obtenirparnomutilisateur---utilisateurrepo",children:"Requ\xeate ObtenirParNomUtilisateur - UtilisateurRepo"}),"\n",(0,t.jsx)(n.p,{children:"Pour authentifier l'utilisateur, il faut obtenir son enregistrement dans la base de donn\xe9es \xe0 partir de son nom d'utilisateur."}),"\n",(0,t.jsxs)(n.p,{children:["Dans l'interface ",(0,t.jsx)(n.strong,{children:"IUtilisateurRepo"}),", ajoutez la d\xe9finition de cette m\xe9thode."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers",children:"/// <summary>\r\n/// Obtenir un utilisateur par son nom d'utilisateur en asynchrone\r\n/// </summary>\r\n/// <param name=\"nomUtilisateur\">Nom utilisateur</param>    \r\n/// <returns>L'utilisateur ou null si non trouv\xe9</returns>\r\nTask<Utilisateur?> ObtenirParNomUtilisateurAsync(string nomUtilisateur);\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Dans la classe ",(0,t.jsx)(n.strong,{children:"UtilisateurRepo"}),", ajoutez cette m\xe9thode."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers",children:"public async Task<Utilisateur?> ObtenirParNomUtilisateurAsync(string nomUtilisateur)\r\n{\r\n    return await (from lqUtilisateur in _bd.UtilisateurTb\r\n                  where\r\n                      lqUtilisateur.NomUtilisateur == nomUtilisateur\r\n                  select\r\n                      lqUtilisateur).FirstOrDefaultAsync();\r\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"classe-du-mod\xe8le---utilisateurauthentifiemodel",children:"Classe du mod\xe8le - UtilisateurAuthentifieModel"}),"\n",(0,t.jsx)(n.p,{children:"Il faut avoir une classe qui contient l'information de l'utilisateur authentifi\xe9."}),"\n",(0,t.jsxs)(n.p,{children:["Cr\xe9ez la classe ",(0,t.jsx)(n.strong,{children:"UtilisateurAuthentifieModel"})," dans le dossier ",(0,t.jsx)(n.strong,{children:"Models"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers",children:"namespace SuperCarte.Core.Models;\r\n\r\n/// <summary>\r\n/// Classe qui contient l'information de l'utilisateur authentifi\xe9\r\n/// </summary>\r\npublic class UtilisateurAuthentifieModel\r\n{\r\n    public UtilisateurAuthentifieModel()\r\n    {\r\n        DateConnexion = DateTime.Now;\r\n    }\r\n\r\n    public int UtilisateurId { get; init; }\r\n\r\n    public string Prenom { get; init; } = null!;\r\n\r\n    public string Nom { get; init; } = null!;\r\n\r\n    public string NomUtilisateur { get; init; } = null!;\r\n\r\n    public DateTime DateConnexion { get; private set; }\r\n\r\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Le mot-cl\xe9 ",(0,t.jsx)(n.strong,{children:"init"})," indique que le ",(0,t.jsx)(n.strong,{children:"set"})," est seulement disponible lors de sa cr\xe9ation. Il ne sera pas possible de modifier les propri\xe9t\xe9s apr\xe8s sa cr\xe9ation. La classe est donc ",(0,t.jsx)(n.strong,{children:"immuable"}),". Il est important que l'information de l'utilisateur ne change pas en cours d'ex\xe9cution."]}),"\n",(0,t.jsx)(n.p,{children:"La seule fa\xe7on d'assigner des valeurs est par cette notation."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:'showLineNumbers title="NE PAS COPIER"',children:"var u = new UtilisateurAuthentifieModel()\r\n{\r\n\tUtilisateurId = 1,\r\n\t...\r\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"m\xe9thode-dautorisation---utilisateurservice",children:"M\xe9thode d'autorisation - UtilisateurService"}),"\n",(0,t.jsxs)(n.p,{children:["Il faut faire la m\xe9canique d'authentification. Le mot de passe est enregistr\xe9 dans la base de donn\xe9es par une m\xe9canique de ",(0,t.jsx)(n.strong,{children:"hash"}),". L'algorithme utilis\xe9 est ",(0,t.jsx)(n.strong,{children:"BCrypt"}),"."]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["Pour en savoir plus sur BCrypt: ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Bcrypt",children:"https://en.wikipedia.org/wiki/Bcrypt"})]})}),"\n",(0,t.jsxs)(n.p,{children:["Dans l'interface ",(0,t.jsx)(n.strong,{children:"IUtilisateurService"}),", ajoutez la d\xe9finition de la m\xe9thode ci-dessous."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers",children:'/// <summary>\r\n/// Authentitifer un utilisateur en asynchrone.\r\n/// </summary>\r\n/// <param name="nomUtilisateur">Nom utilisateur</param>\r\n/// <param name="motPasse">Mot de passe en clair</param>\r\n/// <returns>L\'utilisateur authentifi\xe9 ou null si la combinaison nom utilisateur et mot de passe est invalide</returns>\r\nTask<UtilisateurAuthentifieModel?> AuthentifierUtilisateurAsync(string nomUtilisateur, string motPasse);\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Dans la classe ",(0,t.jsx)(n.strong,{children:"UtilisateurService"}),", ajoutez la m\xe9thode ci-dessous."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers",children:"public async Task<UtilisateurAuthentifieModel?> AuthentifierUtilisateurAsync(string nomUtilisateur, string motPasse)\r\n{\r\n    Utilisateur? utilisateur = await _utilisateurRepo.ObtenirParNomUtilisateurAsync(nomUtilisateur);\r\n\r\n    if(utilisateur != null)\r\n    {\r\n        if(BC.Verify(motPasse, utilisateur.MotPasseHash) == true)\r\n        {\r\n            return new UtilisateurAuthentifieModel()\r\n            {\r\n                UtilisateurId = utilisateur.UtilisateurId,\r\n                NomUtilisateur = utilisateur.NomUtilisateur,\r\n                Prenom = utilisateur.Prenom,\r\n                Nom = utilisateur.Nom\r\n            };\r\n        }\r\n        else\r\n        {\r\n            return null;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        return null;\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"En premier lieu, il faut r\xe9cup\xe9rer l'utilisateur."}),"\n",(0,t.jsxs)(n.p,{children:["La librairie ",(0,t.jsx)(n.strong,{children:"BCrypt"})," a une m\xe9thode de v\xe9rification du mot de passe \xe0 partir du ",(0,t.jsx)(n.strong,{children:"hash"})," de la base de donn\xe9es. Selon l'algorithme de ",(0,t.jsx)(n.strong,{children:"hash"}),", il serait possible d'envoyer le ",(0,t.jsx)(n.strong,{children:"hash"})," dans le ",(0,t.jsx)(n.strong,{children:"Repository"})," et de le mettre dans le ",(0,t.jsx)(n.strong,{children:"where"}),". Avec ",(0,t.jsx)(n.strong,{children:"Bcrypt"})," ce n'est pas possible, car il faut connaitre les d\xe9tails du hashage du mot de passe encrypt\xe9 afin d'encrypter le mot de passe en clair. Par exemple, le mot de passe stock\xe9 dans la bd contient un salt, et une version d'encryptage. Sans ces information, il est impossible d'encrypt\xe9 le mot de passe fournie en clair et d'obtenir le m\xeame r\xe9sultat. La m\xe9thode ",(0,t.jsx)(n.strong,{children:"Verify()"})," permet d'analyser le ",(0,t.jsx)(n.strong,{children:"hash"})," et ensuite appliquer les bonnes r\xe8gles sur le mot de passe \xe0 tester."]}),"\n",(0,t.jsx)(n.admonition,{title:"Important",type:"warning",children:(0,t.jsxs)(n.p,{children:["Remarquez que le mot de passe n'est pas conserv\xe9 dans la classe ",(0,t.jsx)(n.strong,{children:"UtilisateurAuthentifieModel"}),". Il ne faut conserver aucune trace de mot de passe en m\xe9moire pour la s\xe9curit\xe9 de l'application."]})}),"\n",(0,t.jsx)(n.h2,{id:"supercartewpf",children:"SuperCarte.WPF"}),"\n",(0,t.jsx)(n.p,{children:"Dans ce projet, il faut cr\xe9er la classe d'assistance et la vue de connexion."}),"\n",(0,t.jsx)(n.h3,{id:"classe-dassistance---authentificateur",children:"Classe d'assistance - Authentificateur"}),"\n",(0,t.jsxs)(n.p,{children:["Cr\xe9ez l'interface ",(0,t.jsx)(n.strong,{children:"IAuthentificateur"})," dans le dossier ",(0,t.jsx)(n.strong,{children:"Aides"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"La classe doit avoir au minimum les 3 membres ci-dessous."}),"\n",(0,t.jsxs)(n.p,{children:["La propri\xe9t\xe9 ",(0,t.jsx)(n.strong,{children:"UtilisateurAuthentifieModel"})," permet de connaitre l'information de l'utilisateur qui est connect\xe9 \xe0 l'application."]}),"\n",(0,t.jsxs)(n.p,{children:["La m\xe9thode ",(0,t.jsx)(n.strong,{children:"AuthentifierUtilisateurAsync()"})," permet d'authentifier l'utilisateur en fonction du nom d'utilisateur et du mot de passe."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers",children:"namespace SuperCarte.WPF.Aides;\r\n\r\n/// <summary>\r\n/// Inteface qui repr\xe9sente la classe d'assistance pour l'authentification et l'autorisation\r\n/// </summary>\r\npublic interface IAuthentificateur\r\n{\r\n    /// <summary>\r\n    /// Authentifie un utilisateur \xe0 partir de son nom d'utilisateur et de son mot de passe en asynchrone.\r\n    /// </summary>\r\n    /// <param name=\"nomUtilisateur\">Nom d'utilisateur</param>\r\n    /// <param name=\"motPasse\">Mot de passe en clair</param>\r\n    /// <returns>Vrai si un utilisateur est authentifi\xe9, faux sinon</returns>\r\n    Task<bool> AuthentifierUtilisateurAsync(string nomUtilisateur, string motPasse);\r\n\r\n    UtilisateurAuthentifieModel? UtilisateurAuthentifie { get; }\r\n    \r\n    bool EstAuthentifie { get; }\r\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Cr\xe9ez la classe ",(0,t.jsx)(n.strong,{children:"Authentificateur"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers",children:"namespace SuperCarte.WPF.Aides;\r\n\r\n/// <summary>\r\n/// Classe qui repr\xe9sente la classe d'assistance pour l'authentification et l'autorisation\r\n/// </summary>\r\npublic class Authentificateur : IAuthentificateur\r\n{\r\n    private readonly IUtilisateurService _utilisateurService;    \r\n\r\n    /// <summary>\r\n    /// Constructeur\r\n    /// </summary>\r\n    /// <param name=\"utilisateurService\">Service du mod\xe8le utilisateur</param>\r\n    public Authentificateur(IUtilisateurService utilisateurService)\r\n    {\r\n        _utilisateurService = utilisateurService;\r\n    }\r\n\r\n    public async Task<bool> AuthentifierUtilisateurAsync(string nomUtilisateur, string motPasse)\r\n    {\r\n        UtilisateurAuthentifie = await _utilisateurService.AuthentifierUtilisateurAsync(nomUtilisateur, motPasse);\r\n\r\n        EstAuthentifie = UtilisateurAuthentifie != null;\r\n\r\n        return EstAuthentifie;\r\n    }  \r\n\r\n    public UtilisateurAuthentifieModel? UtilisateurAuthentifie { get; private set; }\r\n\r\n    public bool EstAuthentifie { get; private set; }\r\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["La classe d'assistance utilise ",(0,t.jsx)(n.strong,{children:"UtilisateurService"})," pour authentifier l'utilisateur."]}),"\n",(0,t.jsx)(n.h3,{id:"enregistrement-de-la-classe-dassistance---appxamlcs",children:"Enregistrement de la classe d'assistance - App.xaml.cs"}),"\n",(0,t.jsx)(n.p,{children:"Il faut enregistrer la classe d'assistance dans les services."}),"\n",(0,t.jsxs)(n.p,{children:["L'enregistrement se fait directement dans la classe ",(0,t.jsx)(n.strong,{children:"App.xaml.cs"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Voici le nouveau constructeur."}),"\n",(0,t.jsxs)(n.p,{children:["\xc0 la ligne 21, l'enregistrement du ",(0,t.jsx)(n.strong,{children:"Authentificateur"})," est fait avec un singleton. Il faut avoir seulement une instance de cette classe."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers",children:'public App()\r\n{\r\n    //Modification de la langue dans l\'extension et du thread principal\r\n    CultureInfo.DefaultThreadCurrentCulture = new CultureInfo("fr-CA");\r\n    WPFLocalizeExtension.Engine.LocalizeDictionary.Instance.SetCurrentThreadCulture = true;\r\n    WPFLocalizeExtension.Engine.LocalizeDictionary.Instance.Culture = CultureInfo.DefaultThreadCurrentCulture;\r\n    \r\n    var builder = Host.CreateDefaultBuilder();\r\n\r\n    //Enregistrement des services\r\n    builder.ConfigureServices((context, services) =>\r\n    {\r\n        services.AddLocalization();\r\n        services.AddSingleton<MainWindow>(); //Fen\xeatre principale\r\n\r\n        //Enregistrement du contexte    \r\n        services.AddDbContext<SuperCarteContext>(options => options.UseSqlServer(context.Configuration.GetConnectionString("DefaultConnection")));\r\n\r\n        //Enregistrement des classes d\'assistance\r\n        services.AddSingleton<INavigateur, Navigateur>();\r\n        //highlight-next-line\r\n        services.AddSingleton<IAuthentificateur, Authentificateur>();\r\n\r\n        //Appel des m\xe9thodes d\'extension                        \r\n        services.EnregistrerRepositories();\r\n        services.EnregistrerServices();\r\n        services.EnregistrerValidateurs();\r\n        services.EnregistrerViewModels();\r\n    });\r\n\r\n    _host = builder.Build();\r\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"cr\xe9ation-du-viewmodel---connexionvm",children:"Cr\xe9ation du ViewModel - ConnexionVM"}),"\n",(0,t.jsxs)(n.p,{children:["Il faut cr\xe9er le ",(0,t.jsx)(n.strong,{children:"ViewModel"})," pour la vue de connexion."]}),"\n",(0,t.jsxs)(n.p,{children:["Cr\xe9ez la classe ",(0,t.jsx)(n.strong,{children:"ConnexionVM"})," dans le dossier ",(0,t.jsx)(n.strong,{children:"ViewModels"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Cette vue a besoin d'une propri\xe9t\xe9 pour le nom d'utilisateur et d'une propri\xe9t\xe9 pour le mot de passe inscrit."}),"\n",(0,t.jsxs)(n.p,{children:["Il faut \xe9galement une commande pour authentifier l'utilisateur (ligne 60). Cette commande est uniquement accessible si les champs ne sont pas vides. La commande utilise la classe d'assistance ",(0,t.jsx)(n.strong,{children:"Authentificateur"})," pour faire l'authentification (ligne 42). Si l'utilisateur est authentifi\xe9, la vue est redirig\xe9e vers ",(0,t.jsx)(n.strong,{children:"ListeCategorieVM"})," (ligne 46). Par contre, cette vue n'est pas accessible pour tous, seulement pour le r\xf4le ",(0,t.jsx)(n.strong,{children:"Administratreur"}),". G\xe9n\xe9ralement, il faut une vue accessible pour tous comme vue initiale."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers",children:'using CommunityToolkit.Mvvm.Input;\r\n\r\nnamespace SuperCarte.WPF.ViewModels;\r\n\r\n/// <summary>\r\n/// ViewModel de la vue Connexion\r\n/// </summary>\r\npublic class ConnexionVM : BaseVM\r\n{\r\n    #region D\xe9pendances\r\n    private readonly INavigateur _navigateur;\r\n    private readonly IAuthentificateur _authentificateur;\r\n    #endregion\r\n\r\n    #region Attributs des propri\xe9t\xe9s        \r\n    private string _nomUtilisateur;\r\n    private string _motPasse;\r\n    private bool _estEnTravail = false;\r\n    private bool _champsModifiables = true;\r\n    #endregion\r\n\r\n    /// <summary>\r\n    /// Constructeur\r\n    /// </summary>\r\n    /// <param name="navigateur">Classe d\'assistance pour la navigation</param>\r\n    /// <param name="authentificateur">Classe d\'assistance pour l\'authentification</param>\r\n    public ConnexionVM(INavigateur navigateur, IAuthentificateur authentificateur)\r\n    {\r\n        _navigateur = navigateur;\r\n        _authentificateur = authentificateur;\r\n\r\n        AuthentifierCommande = new AsyncRelayCommand(AuthentifierAsync, PeutAuthentifier);\r\n    }\r\n\r\n    #region M\xe9thodes des commandes\r\n    private async Task AuthentifierAsync()\r\n    {\r\n        ChampsModifiables = false;\r\n        EstEnTravail = true;\r\n        base.EffacerErreurs();\r\n\r\n//highlight-next-line\r\n        bool authentifier = await _authentificateur.AuthentifierUtilisateurAsync(NomUtilisateur, MotPasse);\r\n\r\n        if (authentifier == true)\r\n        {\r\n            //highlight-next-line\r\n            _navigateur.Naviguer<ListeCategoriesVM>();\r\n        }\r\n\r\n        EstEnTravail = false;\r\n        ChampsModifiables = true;\r\n    }\r\n\r\n    private bool PeutAuthentifier()\r\n    {\r\n        return (!string.IsNullOrWhiteSpace(NomUtilisateur) && !string.IsNullOrWhiteSpace(MotPasse));\r\n    }\r\n    #endregion\r\n\r\n    #region Commandes\r\n    //highlight-next-line\r\n    public IAsyncRelayCommand AuthentifierCommande { get; private set; }\r\n    #endregion\r\n\r\n    #region Propri\xe9t\xe9s li\xe9es\r\n    public bool EstEnTravail\r\n    {\r\n        get\r\n        {\r\n            return _estEnTravail;\r\n        }\r\n        set\r\n        {\r\n            SetProperty(ref _estEnTravail, value);\r\n        }\r\n    }\r\n\r\n    public bool ChampsModifiables\r\n    {\r\n        get\r\n        {\r\n            return _champsModifiables;\r\n        }\r\n        set\r\n        {\r\n            SetProperty(ref _champsModifiables, value);\r\n        }\r\n    }\r\n\r\n    public string NomUtilisateur\r\n    {\r\n        get\r\n        {\r\n            return _nomUtilisateur;\r\n        }\r\n        set\r\n        {\r\n            if (SetProperty(ref _nomUtilisateur, value))\r\n            {\r\n                AuthentifierCommande.NotifyCanExecuteChanged();\r\n            }\r\n        }\r\n    }\r\n\r\n    public string MotPasse\r\n    {\r\n        get\r\n        {\r\n            return _motPasse;\r\n        }\r\n        set\r\n        {\r\n            if (SetProperty(ref _motPasse, value))\r\n            {\r\n                AuthentifierCommande.NotifyCanExecuteChanged();\r\n            }\r\n        }\r\n    }\r\n    #endregion\r\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"classe-dassistance-pour-le-passwordbox",children:"Classe d'assistance pour le PasswordBox"}),"\n",(0,t.jsxs)(n.p,{children:["Le composant ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/system.windows.controls.passwordbox?view=windowsdesktop-8.0",children:"PasswordBox"})})," ne peut pas \xeatre utilis\xe9 avec la liaison dans sa conception. Cette limitation est impos\xe9e pour des raisons de s\xe9curit\xe9."]}),"\n",(0,t.jsxs)(n.p,{children:["Il est \xe9galement impossible de cr\xe9er un sous-composant en h\xe9ritant de la classe ",(0,t.jsx)(n.strong,{children:"PasswordBox"}),", car celle-ci est scell\xe9e ",(0,t.jsx)(n.strong,{children:"sealed"}),". Une classe ",(0,t.jsx)(n.strong,{children:"sealed"})," est une classe qui emp\xeache l'h\xe9ritage. Microsoft veut s'assurer que la m\xe9canique du ",(0,t.jsx)(n.strong,{children:"PasswordBox"})," ne soit pas modifi\xe9e par la r\xe9\xe9criture des m\xe9thodes."]}),"\n",(0,t.jsxs)(n.p,{children:["Les librairies de composants comme ",(0,t.jsx)(n.strong,{children:"DevExpress"})," offre un ",(0,t.jsx)(n.strong,{children:"PasswordBox"})," \xe9volu\xe9 qui permettre de faire la liaison. La conception d'un composant demande \xe9norm\xe9ment de code et faire une version soit m\xeame serait tr\xe8s long."]}),"\n",(0,t.jsxs)(n.p,{children:["Le site ",(0,t.jsx)(n.strong,{children:"WPF Tutorial"})," donne une classe d'extension qui permet d'ajouter la fonctionnalit\xe9 au ",(0,t.jsx)(n.strong,{children:"PasswordBox"}),". Ceci contourne la vision de s\xe9curit\xe9 de Microsoft, mais pour la nature de cette application, cette option est valide."]}),"\n",(0,t.jsxs)(n.p,{children:["Pour plus d'information : ",(0,t.jsx)(n.a,{href:"https://www.wpftutorial.net/PasswordBox.html",children:"https://www.wpftutorial.net/PasswordBox.html"})]}),"\n",(0,t.jsxs)(n.p,{children:["La classe pr\xe9sent\xe9e ci-dessous est l\xe9g\xe8rement modifi\xe9e par rapport \xe0 celle de ",(0,t.jsx)(n.strong,{children:"WPF Tutorial"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Cr\xe9ez le dossier ",(0,t.jsx)(n.strong,{children:"Composants"})," dans le projet ",(0,t.jsx)(n.strong,{children:"SuperCarte.WPF"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Cr\xe9ez la classe ",(0,t.jsx)(n.strong,{children:"PasswordBoxExt.cs"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers",children:'/*\r\n * Source \r\n * WPF Tutorial.Net\r\n * https://www.wpftutorial.net/PasswordBox.html\r\n */\r\n\r\nusing System.Windows.Controls;\r\nusing System.Windows;\r\n\r\nnamespace SuperCarte.WPF.Composants;\r\n\r\n/// <summary>\r\n/// Classe d\'aide pour ajouter la liaison sur le mot de passe du composant PasswordBox\r\n/// </summary>\r\npublic static class PasswordBoxExt\r\n{\r\n    public static readonly DependencyProperty PasswordProperty =\r\n        DependencyProperty.RegisterAttached("Password",\r\n        typeof(string), typeof(PasswordBoxExt),\r\n        new FrameworkPropertyMetadata(string.Empty, OnPasswordPropertyChanged)\r\n        {\r\n            BindsTwoWayByDefault = true\r\n\r\n        });\r\n\r\n    public static readonly DependencyProperty AttachProperty =\r\n        DependencyProperty.RegisterAttached("Attach",\r\n        typeof(bool), typeof(PasswordBoxExt), new PropertyMetadata(false, Attach));\r\n\r\n    private static readonly DependencyProperty IsUpdatingProperty =\r\n       DependencyProperty.RegisterAttached("IsUpdating", typeof(bool),\r\n       typeof(PasswordBoxExt));\r\n\r\n\r\n    public static void SetAttach(DependencyObject dp, bool value)\r\n    {\r\n        dp.SetValue(AttachProperty, value);\r\n    }\r\n\r\n    public static bool GetAttach(DependencyObject dp)\r\n    {\r\n        return (bool)dp.GetValue(AttachProperty);\r\n    }\r\n\r\n    public static string GetPassword(DependencyObject dp)\r\n    {\r\n        return (string)dp.GetValue(PasswordProperty);\r\n    }\r\n\r\n    public static void SetPassword(DependencyObject dp, string value)\r\n    {\r\n        dp.SetValue(PasswordProperty, value);\r\n    }\r\n\r\n    private static bool GetIsUpdating(DependencyObject dp)\r\n    {\r\n        return (bool)dp.GetValue(IsUpdatingProperty);\r\n    }\r\n\r\n    private static void SetIsUpdating(DependencyObject dp, bool value)\r\n    {\r\n        dp.SetValue(IsUpdatingProperty, value);\r\n    }\r\n\r\n    private static void OnPasswordPropertyChanged(DependencyObject sender,\r\n        DependencyPropertyChangedEventArgs e)\r\n    {\r\n        PasswordBox passwordBox = sender as PasswordBox;\r\n        passwordBox.PasswordChanged -= PasswordChanged;\r\n\r\n        if (!(bool)GetIsUpdating(passwordBox))\r\n        {\r\n            passwordBox.Password = (string)e.NewValue;\r\n        }\r\n        passwordBox.PasswordChanged += PasswordChanged;\r\n    }\r\n\r\n    private static void Attach(DependencyObject sender,\r\n        DependencyPropertyChangedEventArgs e)\r\n    {\r\n        PasswordBox passwordBox = sender as PasswordBox;\r\n\r\n        if (passwordBox == null)\r\n            return;\r\n\r\n        if ((bool)e.OldValue)\r\n        {\r\n            passwordBox.PasswordChanged -= PasswordChanged;\r\n        }\r\n\r\n        if ((bool)e.NewValue)\r\n        {\r\n            passwordBox.PasswordChanged += PasswordChanged;\r\n        }\r\n    }\r\n\r\n    private static void PasswordChanged(object sender, RoutedEventArgs e)\r\n    {\r\n        PasswordBox passwordBox = sender as PasswordBox;\r\n        SetIsUpdating(passwordBox, true);\r\n        SetPassword(passwordBox, passwordBox.Password);\r\n        SetIsUpdating(passwordBox, false);\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["Pour le ",(0,t.jsx)(n.strong,{children:"TP 3"})," il faudra utiliser cette extension pour le mot de passe."]})}),"\n",(0,t.jsx)(n.h3,{id:"enregistrer-le-viewmodel---scviewmodelextensions",children:"Enregistrer le ViewModel - SCViewModelExtensions"}),"\n",(0,t.jsxs)(n.p,{children:["Dans la classe ",(0,t.jsx)(n.strong,{children:"SCViewModelExtensions"}),", il faut enregistrer le ",(0,t.jsx)(n.strong,{children:"ViewModel"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers",children:"public static void EnregistrerViewModels(this IServiceCollection services)\r\n{\r\n    services.AddSingleton<MainWindowVM>();\r\n    services.AddTransient<HelloWordVM>(); //\xc0 retirer\r\n    services.AddTransient<ListeCategoriesVM>();\r\n    services.AddTransient<ListeCartesVM>();\r\n    services.AddTransient<GestionCategorieVM>();\r\n    services.AddTransient<GestionUtilisateurVM>();\r\n    //highlight-next-line\r\n    services.AddTransient<ConnexionVM>();\r\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"cr\xe9ation-de-la-vue---ucconnexionxaml",children:"Cr\xe9ation de la vue - UcConnexion.xaml"}),"\n",(0,t.jsxs)(n.p,{children:["Cr\xe9ez le fichier ",(0,t.jsx)(n.strong,{children:"UcConnexion.xaml"})," de type ",(0,t.jsx)(n.strong,{children:"Contr\xf4le utilisateur WPF"})," dans le dossier ",(0,t.jsx)(n.strong,{children:"Views"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["\xc0 la ligne 8, le ",(0,t.jsx)(n.strong,{children:"namespace"})," pour les composants est ajout\xe9. Ce ",(0,t.jsx)(n.strong,{children:"namespace"})," permet d'utiliser la classe ",(0,t.jsx)(n.strong,{children:"PasswordBoxExt"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Les champs ",(0,t.jsx)(n.strong,{children:"Nom d'utilisateur"})," et ",(0,t.jsx)(n.strong,{children:"Mot de passe"})," (ligne 45 et 61) ont le ",(0,t.jsx)(n.strong,{children:'Validation.ErrorTemplate="{StaticResource erreurTemplate}"'})," pour afficher les erreurs."]}),"\n",(0,t.jsxs)(n.p,{children:["Pour faire la liaison du ",(0,t.jsx)(n.strong,{children:"PasswordBox"}),", il faut ajouter les lignes 62 et 63."]}),"\n",(0,t.jsxs)(n.p,{children:["\xc9galement, il est int\xe9ressant de permettre la touche ",(0,t.jsx)(n.strong,{children:"Entr\xe9e"})," pour ex\xe9cuter la commande d'authentification. Les lignes 67 \xe0 69 permettent de lier une commande \xe0 une touche."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xaml",metastring:"showLineNumbers ",children:'<UserControl x:Class="SuperCarte.WPF.Views.UcConnexion"\r\n             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\r\n             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\r\n             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" \r\n             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" \r\n             xmlns:vm="clr-namespace:SuperCarte.WPF.ViewModels"\r\n             xmlns:local="clr-namespace:SuperCarte.WPF.Views"\r\n             //highlight-next-line\r\n             xmlns:composants="clr-namespace:SuperCarte.WPF.Composants"    \r\n             d:DataContext="{d:DesignInstance vm:ConnexionVM}"\r\n             mc:Ignorable="d" \r\n             d:DesignHeight="450" d:DesignWidth="800">\r\n    <Grid>\r\n        <Grid.RowDefinitions>\r\n            <RowDefinition Height="auto"/>\r\n            <RowDefinition Height="*" />\r\n            <RowDefinition Height="20" />\r\n        </Grid.RowDefinitions>\r\n\r\n        \x3c!--Rang\xe9e 0--\x3e\r\n        <TextBlock \r\n            Grid.Row="0" \r\n            VerticalAlignment="Center" HorizontalAlignment="Center"\r\n            FontSize="16" FontWeight="Bold"\r\n            Text="Connexion"/>\r\n\r\n        \x3c!--Rang\xe9e 1--\x3e\r\n        \x3c!-- Formulaire --\x3e\r\n        <Grid Grid.Row="1" MaxWidth="800" IsEnabled="{Binding ChampsModifiables}">\r\n            <Grid.RowDefinitions>\r\n                <RowDefinition Height="auto"/>\r\n                <RowDefinition Height="auto"/>\r\n                <RowDefinition Height="auto"/>\r\n            </Grid.RowDefinitions>\r\n            <Grid.ColumnDefinitions>\r\n                <ColumnDefinition Width="auto"/>\r\n                <ColumnDefinition Width="*" />\r\n            </Grid.ColumnDefinitions>\r\n\r\n            \x3c!-- Nom utilisateur --\x3e\r\n            <Label Grid.Row="0" Grid.Column="0" \r\n                   Content="Nom d\'utilisateur : "\r\n                   Margin="5 10 5 10" \r\n                   FontWeight="Bold"/>\r\n            <TextBox Grid.Row="0" Grid.Column="1" \r\n            //highlight-next-line\r\n                     Validation.ErrorTemplate="{StaticResource erreurTemplate}"\r\n                     Text="{Binding NomUtilisateur}"\r\n                     Padding="2 4 0 0"\r\n                     Margin="0 10 5 10">\r\n                <TextBox.InputBindings>\r\n                    <KeyBinding Command="{Binding AuthentifierCommande}" Key="Return"/>\r\n                </TextBox.InputBindings>\r\n            </TextBox>\r\n\r\n            \x3c!-- Mot de passe --\x3e\r\n            <Label Grid.Row="1" Grid.Column="0" \r\n                   Content="Mot de passe : "\r\n                   Margin="5 10 5 10" \r\n                   FontWeight="Bold"/>\r\n\r\n            <PasswordBox Grid.Row="1" Grid.Column="1"\r\n            //highlight-next-line\r\n                         Validation.ErrorTemplate="{StaticResource erreurTemplate}"\r\n                         //highlight-start\r\n                         composants:PasswordBoxExt.Attach="True"\r\n                         composants:PasswordBoxExt.Password="{Binding MotPasse}"\r\n                         //highlight-end                                                \r\n                         Padding="2 4 0 0"\r\n                         Margin="0 10 5 10">\r\n                         //highlight-start\r\n                <PasswordBox.InputBindings>\r\n                    <KeyBinding Command="{Binding AuthentifierCommande}" Key="Return"/>\r\n                </PasswordBox.InputBindings>\r\n                //highlight-end\r\n            </PasswordBox>\r\n\r\n            \x3c!--Rang\xe9e 2--\x3e\r\n            <Button Grid.Row="2" Grid.ColumnSpan="2" HorizontalAlignment="Right"\r\n                    Command="{Binding AuthentifierCommande}"\r\n                    Content="Connexion"\r\n                    Width="70" Height="30"\r\n                    Margin="0 10 5 0"/>\r\n\r\n        </Grid>\r\n\r\n        \x3c!--Rang\xe9e 2--\x3e\r\n        <ProgressBar Grid.Row="2" Height="10" IsIndeterminate="{Binding EstEnTravail}" />\r\n    </Grid>\r\n</UserControl>\n'})}),"\n",(0,t.jsx)(n.h3,{id:"ajout-de-la-ressource-pour-cr\xe9er-le-lien-entre-viewmodel-et-vue---mainwindowxaml",children:"Ajout de la ressource pour cr\xe9er le lien entre ViewModel et Vue - MainWindow.xaml"}),"\n",(0,t.jsxs)(n.p,{children:["Il faut ajouter dans les ressources le lien entre le ",(0,t.jsx)(n.strong,{children:"ViewModel"})," et la ",(0,t.jsx)(n.strong,{children:"Vue"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Les lignes 31 \xe0 33 contiennent le lien entre ",(0,t.jsx)(n.strong,{children:"UcConnexion"})," et ",(0,t.jsx)(n.strong,{children:"ConnexionVM"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xaml",metastring:"showLineNumbers ",children:'<Window x:Class="SuperCarte.WPF.MainWindow"\r\n        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\r\n        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\r\n        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\r\n        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\r\n        xmlns:local="clr-namespace:SuperCarte.WPF"  \r\n        xmlns:vm="clr-namespace:SuperCarte.WPF.ViewModels"\r\n        xmlns:v="clr-namespace:SuperCarte.WPF.Views"                \r\n        mc:Ignorable="d"         \r\n        d:DataContext="{d:DesignInstance Type=vm:MainWindowVM}"\r\n        Title="Super Carte App" \r\n        Height="450" Width="800" WindowState="Maximized">\r\n    <Window.Resources>\r\n        \x3c!--Assignation du ViewModel \xe0 Vue--\x3e\r\n        <DataTemplate DataType="{x:Type TypeName=vm:HelloWordVM}">\r\n            \x3c!--\xc0 retirer \xe9ventuellement--\x3e\r\n            <v:UcHelloWorld />\r\n        </DataTemplate>\r\n        <DataTemplate DataType="{x:Type TypeName=vm:ListeCategoriesVM}">\r\n            <v:UcListeCategories />\r\n        </DataTemplate>\r\n        <DataTemplate DataType="{x:Type TypeName=vm:ListeCartesVM}">\r\n            <v:UcListeCartes />\r\n        </DataTemplate>\r\n        <DataTemplate DataType="{x:Type TypeName=vm:GestionCategorieVM}">\r\n            <v:UcGestionCategorie />\r\n        </DataTemplate>\r\n        <DataTemplate DataType="{x:Type TypeName=vm:GestionUtilisateurVM}">\r\n            <v:UcGestionUtilisateur />\r\n        </DataTemplate>\r\n        //highlight-start\r\n        <DataTemplate DataType="{x:Type TypeName=vm:ConnexionVM}">\r\n            <v:UcConnexion />\r\n        </DataTemplate>\r\n        //highlight-end\r\n    </Window.Resources>\r\n    <Grid>\r\n        <Grid.RowDefinitions>\r\n            <RowDefinition Height="auto"/>\r\n            <RowDefinition Height="*"/>\r\n        </Grid.RowDefinitions>\r\n        <Menu Grid.Row="0" HorizontalContentAlignment="Stretch" VerticalAlignment="Stretch">\r\n            <MenuItem Header="_Fichier">\r\n                <MenuItem Header="_Quitter" />\r\n            </MenuItem>\r\n            <MenuItem Header="_Administration">\r\n                <MenuItem Header="Liste des _cartes" Command="{Binding NaviguerListeCartesVMCommande}"/>\r\n                <MenuItem Header="Liste des c_at\xe9gories" Command="{Binding NaviguerListeCategoriesVMCommande}"/>\r\n            </MenuItem>            \r\n        </Menu>\r\n\r\n        <ContentControl Grid.Row="1"  Content="{Binding Navigateur.VMActif}" />                \r\n    </Grid>\r\n</Window>\n'})}),"\n",(0,t.jsx)(n.h3,{id:"modification-de-la-vue-initiale---mainwindowvm",children:"Modification de la vue initiale - MainWindowVM"}),"\n",(0,t.jsx)(n.p,{children:"Il faut que la vue initiale soit la connexion."}),"\n",(0,t.jsxs)(n.p,{children:["Modifiez la classe ",(0,t.jsx)(n.strong,{children:"MainWindowVM"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers",children:"public MainWindowVM(INavigateur navigateur)\r\n{   \r\n    //S\xe9lectionner le ViewModel de d\xe9marrage        \r\n    _navigateur = navigateur;\r\n\r\n    //Cr\xe9ation des commandes\r\n    NaviguerListeCartesVMCommande = new RelayCommand(_navigateur.Naviguer<ListeCartesVM>);\r\n    NaviguerListeCategoriesVMCommande = new RelayCommand(_navigateur.Naviguer<ListeCategoriesVM>);\r\n\r\n    //Vue initiale\r\n    //highlight-next-line\r\n    _navigateur.Naviguer<ConnexionVM>();\r\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"test",children:"Test"}),"\n",(0,t.jsx)(n.p,{children:"D\xe9marrez l'application."}),"\n",(0,t.jsx)(n.p,{children:"Essayez avec ce compte."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"fsthilaire"}),"\n",(0,t.jsx)(n.li,{children:"1234"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Rien ne se passe lorsque vous appuyez sur le bouton de connexion. Il faudra am\xe9liorer la fen\xeatre dans une prochaine section."}),"\n",(0,t.jsx)(n.p,{children:"Essayez avec ce compte."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"fsthilaire"}),"\n",(0,t.jsx)(n.li,{children:"Native3!"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["La vue ",(0,t.jsx)(n.strong,{children:"Liste des cartes"})," est affich\xe9e."]}),"\n",(0,t.jsxs)(n.p,{children:["D\xe9marrez de nouveau le programme. S\xe9lectionnez le menu ",(0,t.jsx)(n.strong,{children:"Administration -> Liste des cartes"}),". Il est possible d'y acc\xe9der sans \xeatre connect\xe9. Ce probl\xe8me sera r\xe9gl\xe9 dans une section future."]})]})}function c(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>a});var t=r(7294);const i={},s=t.createContext(i);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);