"use strict";(self.webpackChunknotes_de_cours_4_n_1_2024=self.webpackChunknotes_de_cours_4_n_1_2024||[]).push([[4755],{9421:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>c});var l=i(5893),s=i(1151);const r={sidebar_position:215,draft:!1},a="Ex\xe9cution du HelloWorld",t={id:"WPF partie 2/partie2_helloworld_resume",title:"Ex\xe9cution du HelloWorld",description:"Pour voir ce diagramme plus gros sur Kroki!",source:"@site/docs/72-WPF partie 2/partie2_helloworld_resume.md",sourceDirName:"72-WPF partie 2",slug:"/WPF partie 2/partie2_helloworld_resume",permalink:"/4N1_2024/docs/WPF partie 2/partie2_helloworld_resume",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:215,frontMatter:{sidebar_position:215,draft:!1},sidebar:"NotesSidebar",previous:{title:"HelloWorld en WPF",permalink:"/4N1_2024/docs/WPF partie 2/helloworld_wpf"},next:{title:"Composants XAML",permalink:"/4N1_2024/docs/WPF partie 2/composants_xaml"}},o={},c=[{value:"Liens",id:"liens",level:2}];function d(e){const n={a:"a",h1:"h1",h2:"h2",li:"li",mermaid:"mermaid",p:"p",ul:"ul",...(0,s.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"ex\xe9cution-du-helloworld",children:"Ex\xe9cution du HelloWorld"}),"\n",(0,l.jsx)(n.mermaid,{value:'sequenceDiagram\r\n    participant System\r\n\r\n    create participant App_xaml_cs as App.<br>xaml.cs\r\n    System->>App_xaml_cs: new()\r\n    activate App_xaml_cs\r\n    participant serv as ServiceProvider\r\n    Note right of App_xaml_cs: Enregistrement des services\r\n    App_xaml_cs->>serv: AddSingleton<MainWindow>\r\n    App_xaml_cs->>serv: SCViewModelExtensions <br/> AddTransient<MainWindowVM>()\r\n    App_xaml_cs->>serv: SCViewModelExtensions <br/> AddTransient<HelloWorldVM>()\r\n    deactivate App_xaml_cs\r\n    System->>App_xaml_cs: OnStartup\r\n    activate App_xaml_cs\r\n    App_xaml_cs->>serv: GetRequiredService<MainWindow>\r\n    create participant MainWindow_xaml_cs as MainWindow<br>.xaml.cs\r\n    serv->>MainWindow_xaml_cs: Singleton new<br/>MainWindowVM\r\n    activate MainWindow_xaml_cs\r\n    create participant MainWindowVM_cs as MainWindowVM<br>.cs \r\n    MainWindow_xaml_cs->>MainWindowVM_cs: Inject\xe9 par<br>le constructeur\r\n    MainWindowVM_cs->>serv: GetRequiredService<HelloWorldVM>\r\n    create participant HelloWorldVM.cs\r\n    serv->>HelloWorldVM.cs: Transient new()\r\n    MainWindowVM_cs--\x3eHelloWorldVM.cs: VMActif =\r\n    create participant MainWindow_xaml as MainWindow<br>.xaml\r\n    MainWindow_xaml_cs->>MainWindow_xaml:InitializeComponent()\r\n    MainWindow_xaml--\x3e>HelloWorldVM.cs: <DataTemplate <br>"{vm:HelloWorldVM}"><br><v:UcHelloWorld /> >\r\n    MainWindow_xaml_cs--\x3eMainWindowVM_cs: DataContext =\r\n    deactivate MainWindow_xaml_cs\r\n\r\n    App_xaml_cs->>MainWindow_xaml: Show()\r\n    MainWindow_xaml--\x3eMainWindow_xaml_cs:Content = Binding VMActif\r\n    Note over MainWindow_xaml,HelloWorldVM.cs: VMactif = HelloWorldVM, <br/> donc c\'est la view associ\xe9e<br/>UcHelloWorld qui est affich\xe9e\r\n    create participant UcHelloWorld_xaml_cs as UcHelloWorld<br>.xaml.cs\r\n    MainWindow_xaml->>UcHelloWorld_xaml_cs:Transient new()\r\n    create participant UcHelloWorld_xaml as UcHelloWorld<br>.xaml\r\n    UcHelloWorld_xaml_cs->>UcHelloWorld_xaml:Initialize<br>Component()\r\n    UcHelloWorld_xaml--\x3eHelloWorldVM.cs: DateHeure, ValeurDecimal, ValeurBool\r\n\r\n    deactivate App_xaml_cs\r\n    '}),"\n",(0,l.jsxs)(n.p,{children:["Pour voir ce diagramme plus gros sur ",(0,l.jsx)(n.a,{href:"https://kroki.io/mermaid/svg/eNqlVcGO2jAQvfMV1l7aSkDvERtpF1bdHtJWzTZ7XHmdASw5dmqbQFv1g_od_bGODSxO4rBIzYVkPPPm-c2zMfB9A5LBgtOVptWI4FNTbTnjNZWW5D-MhWrk40wDtdBavqnrpx2txBMzhBr3OZ0969SFpsz4qj3CJE2D3IRI2L5959cps7xxuMF6j4YB3bgGOf5yBl-0angJ2ud9Ulis-WptiVqSVpc7qWHFjdVQAaKUYDwSIuxbBMlI0C0l5KYscy5XAqySs4xy-chlqbbpYEE-LzhsM1WCuNtZkIYraQjK8D51YA-aYgjbB2BFlh52_1-A9yCEelRalCfAEgYFjU_is8wtKr2pz08jRvQD2K_oH66hPAymJ1jEM6eU0DqnqDPQNHSQa4Y9-3Uo1XFSzlBeoVDk9o769a8zLLIevSLzBDHsy_uoLaoeICEvMwuM30k6p2pr0EOsw6SOdJ2l1_i87GTSryyyGxR0Sa4vHO_AbC_RzgeTj5JbTgX_CXNV1Uoi6TjhSWyjswW19AGqWjierv3Vr6ZKwrzfV6mLz5rkGzvFCR62dFiX3oRdn7mSFnb2oE1wEiPWixyq7s5Jvlbbwb1GjoPvjyO4Jre4gEfjOK3TPaka0F2wcWTIdD_klqnGhzuoVJIR9gaMJYKSBu8qHLJRjP_9Az6jpSM6mbhUulxytsaUIeOEVeHNEMZ7d0NXlzSNwSQxv19CYbC_R4i1ijEIPOwAuj7u5cfOHfoL7mGjYUwKKvBlAYxXVBw_b5USo3P_AP8ARcDBAg==",children:"Kroki!"})]}),"\n",(0,l.jsx)(n.p,{children:"le constructeur de App.xaml.cs est appel\xe9"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"C'est toujours App.xaml qui est appel\xe9 pour d\xe9marrer l'application."}),"\n",(0,l.jsx)(n.li,{children:"cr\xe9e le builder"}),"\n",(0,l.jsxs)(n.li,{children:["configure les services","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["met la classe MainWindow en tant que service disponible en singleton","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"l'avantage de mettre MainWindow en tant que service c'est que chaque fois qu'on en demande une, c'est toujours la m\xeame qui sera utilis\xe9e (singleton)"}),"\n",(0,l.jsx)(n.li,{children:"\xe9tant donn\xe9 qu'on ne pr\xe9voit pas en avoir besoin pour le testing, donc de le \"mocker\", on a pas besoin d'interface. Mais on pourrait le faire avec interface aussi."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["met SuperCarteContext en tant que context pour la bd","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"ce qui veut dire que si l'application demande un DbContext, c'est SuperCarteContext qui sera utilis\xe9"}),"\n",(0,l.jsx)(n.li,{children:"va chercher la string de connection dans appsettings.json (DefaultConnection)"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["enregistre les services suppl\xe9mentaires","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"les fonctions utilis\xe9es sont dans Extensions/ServiceCollections et sont dans des classes d'extensions de IServiceCollection"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Initialise le host","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"ce qui appel OnStartup"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"OnStartup est appel\xe9 par le host.Build()"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"d\xe9marre le host"}),"\n",(0,l.jsx)(n.li,{children:"va chercher le singleton MainWindow"}),"\n",(0,l.jsx)(n.li,{children:"affiche la fen\xeatre"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Constructeur de MainWindow.xaml"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Dans MainWindow.xaml.cs","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"recoit un MainWindowVM  (pas d'injection, c'est pas une interface)"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Initialise MainWindow.xaml (InitializeComponent())"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"set le DataContext au MainWindowVM recu en argument"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Dans MainWindow.xaml:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["la premi\xe8re ligne indique c'est une Window, et que le code behing sera dans SuperCarte.WPF.Mainwindow. C'est x",":class"," qui indique ca."]}),"\n",(0,l.jsx)(n.li,{children:"Le titre de la fenetre est set par Title="}),"\n",(0,l.jsx)(n.li,{children:"Les caract\xe9rististique height, width, windowstate sont set"}),"\n",(0,l.jsxs)(n.li,{children:["Dans la section DataTemplate","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"un DataTemplate sert a indique que si je veux afficher un HelloWorldVM, voici comme l'afficher. Ici, c'est en prenant la view UcHelloWorld."}),"\n",(0,l.jsx)(n.li,{children:"le vm (le quoi afficher) est set a HelloWorldVM"}),"\n",(0,l.jsx)(n.li,{children:"et la view (le comment l'afficher) est set a UcHelloWorld"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Le Grid est le contenant dans lequel la sous-view sera affich\xe9","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["ici on indique d'utiliser celui qui est dans VMActif","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["VMActif provient du DataContext","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Le DataContext est set dans le constructeur de MainWindow.xaml.cs","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["le DataContext est set \xe0 MainWindowVM (sous classe de BaseVM) qui a \xe9t\xe9 cr\xe9\xe9 dans le constructeur de MainWindow.xaml.cs","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Dans MainWindowVM (qui est le DataContext) on d\xe9clare VMActif"}),"\n",(0,l.jsx)(n.li,{children:"VMActif est set \xe0 HelloWorldVM, c'est donc la template pour afficher un HelloWorldVM qui sera affich\xe9e"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Affichage de HelloWorldVM"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\xe9tant donn\xe9 que VMActif indique d'afficher un HelloWorldVM, c'est la view UcHelloWorld qui sera affich\xe9e","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"UcHelloWorld.xaml.cs ne fait rien de sp\xe9cial"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"UcHelloWorld.xaml affiche les 3 champs."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"liens",children:"Liens"}),"\n",(0,l.jsxs)(n.p,{children:["building a WPF application ",(0,l.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/desktop/wpf/app-development/building-a-wpf-application-wpf?view=netframeworkdesktop-4.8",children:"https://learn.microsoft.com/en-us/dotnet/desktop/wpf/app-development/building-a-wpf-application-wpf?view=netframeworkdesktop-4.8"})]}),"\n",(0,l.jsxs)(n.p,{children:["code behind ",(0,l.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/desktop/wpf/advanced/code-behind-and-xaml-in-wpf?view=netframeworkdesktop-4.8",children:"https://learn.microsoft.com/en-us/dotnet/desktop/wpf/advanced/code-behind-and-xaml-in-wpf?view=netframeworkdesktop-4.8"})]})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>t,a:()=>a});var l=i(7294);const s={},r=l.createContext(s);function a(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);