"use strict";(self.webpackChunknotes_de_cours_4_n_1_2024=self.webpackChunknotes_de_cours_4_n_1_2024||[]).push([[5775],{4306:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>n,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>_});var a=r(5893),s=r(1151);const i={sidebar_position:260,draft:!1},n="Ex\xe9cution de la partie 2",c={id:"WPF partie 2/partie2_final_resume",title:"Ex\xe9cution de la partie 2",description:"Ce diagramme synth\xe9tise le processus d'ex\xe9cution de ce que nous avons vue jusqu'\xe0 maintenant.",source:"@site/docs/72-WPF partie 2/partie2_final_resume.md",sourceDirName:"72-WPF partie 2",slug:"/WPF partie 2/partie2_final_resume",permalink:"/4N1_2024/docs/WPF partie 2/partie2_final_resume",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:260,frontMatter:{sidebar_position:260,draft:!1},sidebar:"NotesSidebar",previous:{title:"Liste des cartes",permalink:"/4N1_2024/docs/WPF partie 2/lister_carte"},next:{title:"Code Partie 3",permalink:"/4N1_2024/docs/WPF partie 3/wpf_partie3_source"}},o={},_=[];function l(e){const t={a:"a",h1:"h1",mermaid:"mermaid",p:"p",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"ex\xe9cution-de-la-partie-2",children:"Ex\xe9cution de la partie 2"}),"\n",(0,a.jsx)(t.p,{children:"Ce diagramme synth\xe9tise le processus d'ex\xe9cution de ce que nous avons vue jusqu'\xe0 maintenant."}),"\n",(0,a.jsx)(t.mermaid,{value:"sequenceDiagram\r\n    autonumber\r\n    participant System\r\n\r\n    create participant App_xaml_cs as App.<br>xaml.cs\r\n    System->>App_xaml_cs: new()\r\n    activate App_xaml_cs\r\n    participant serv as ServiceProvider\r\n    Note right of App_xaml_cs: Enregistrement des services\r\n    App_xaml_cs->>serv: AddSingleton<MainWindow>\r\n    App_xaml_cs->>serv: SCRepositories<br>EnregistrerRepositories...\r\n    App_xaml_cs->>serv: SCServiceExtensions<br>EnregistrerServices...\r\n    App_xaml_cs->>serv: SCViewModelExtensions <br/> AddTransient<MainWindowVM>()\r\n    App_xaml_cs->>serv: SCViewModelExtensions <br/> AddTransient<ListeCategoriesVM>()\r\n    App_xaml_cs->>serv: SCViewModelExtensions <br/> AddTransient<ListeCartesVM>()\r\n    Note right of App_xaml_cs: Enregistrement du dbcontext\r\n    App_xaml_cs->>serv: AddDbContext<SuperCarteContext>\r\n    deactivate App_xaml_cs\r\n    System->>App_xaml_cs: OnStartup\r\n    activate App_xaml_cs\r\n    App_xaml_cs->>serv: GetRequiredService<MainWindow>\r\n    create participant MainWindow_xaml_cs as WPF:<br>MainWindow<br>.xaml.cs\r\n    serv->>MainWindow_xaml_cs: Singleton new<br/>MainWindowVM\r\n    activate MainWindow_xaml_cs\r\n    create participant MainWindowVM_cs as WPF:<br>MainWindowVM<br>.cs \r\n    MainWindow_xaml_cs->>MainWindowVM_cs: Inject\xe9 par<br>le constructeur\r\n    MainWindowVM_cs->>serv: GetRequiredService<ListeCartesVM>\r\n    create participant ListeCartesVM_cs as WPF:<br>ListeCartesVM.cs\r\n    serv->>ListeCartesVM_cs: Transient new()\r\n    create participant CarteService_cs as Core:<br>CarteService_cs\r\n    ListeCartesVM_cs->>CarteService_cs: Inject\xe9 par<br>le constructeur\r\n    create participant CarteRepo_cs as Core:<br>CarteRepo.cs\r\n    CarteService_cs--\x3eCarteRepo_cs: Inject\xe9 par<br>le constructeur\r\n    MainWindowVM_cs--XListeCartesVM_cs: VMActif =\r\n    create participant MainWindow_xaml as WPF:<br>MainWindow<br>.xaml\r\n    MainWindow_xaml_cs->>MainWindow_xaml:InitializeComponent()\r\n    MainWindow_xaml--\x3e>ListeCartesVM_cs: <DataTemplate<br>{vm:ListeCartesVM}\"><br><v:UcListeCartes/>><br><br>{vm:ListeCategoriesVM}\"><br><v:UcListeCategories/>\r\n    MainWindow_xaml_cs--XMainWindowVM_cs: DataContext =\r\n    deactivate MainWindow_xaml_cs\r\n\r\n    App_xaml_cs->>MainWindow_xaml: Show()\r\n    MainWindow_xaml--XMainWindow_xaml_cs:Content = Binding VMActif\r\n    Note over MainWindow_xaml,ListeCartesVM_cs: VMactif = ListeCartesVM, <br/> donc c'est la view associ\xe9e<br/>UcListeCartes qui est affich\xe9e\r\n    create participant UcListeCartes_xaml_cs as WPF:<br>UcListeCartes<br>.xaml.cs\r\n    MainWindow_xaml->>UcListeCartes_xaml_cs:Transient new()\r\n    create participant UcListeCartes_xaml as WPF:<br>UcListeCartes_xaml\r\n    UcListeCartes_xaml_cs->>UcListeCartes_xaml:Initialize<br>Component()\r\n    UcListeCartes_xaml_cs--XMainWindow_xaml: get vm associ\xe9e <br>\xe0 cette vue \r\n    UcListeCartes_xaml_cs--XListeCartesVM_cs: DataContext =\r\n    UcListeCartes_xaml->>UcListeCartes_xaml_cs: UserControl_Loaded\r\n    UcListeCartes_xaml--XListeCartesVM_cs: ProgressBar Binding EstEnTravail\r\n    UcListeCartes_xaml_cs-)ListeCartesVM_cs:ObtenirListeCommande\r\n    ListeCartesVM_cs-)ListeCartesVM_cs: ObtenirListeAsync\r\n    ListeCartesVM_cs->>ListeCartesVM_cs: EstEnTravail = true\r\n    ListeCartesVM_cs->>ListeCartesVM_cs: setter de EstEnTravail\r\n    ListeCartesVM_cs--\x3e>UcListeCartes_xaml: affiche le ProgressBar \r\n    ListeCartesVM_cs-)CarteService_cs: ObtenirListeCarteDetailAsync()\r\n    CarteService_cs-)CarteRepo_cs: ObtenirListeCarteDetailAsync()\r\n    create participant CarteDetailModel_cs as Core:<br>CarteDetailModel.cs\r\n    CarteRepo_cs->>CarteDetailModel_cs: new\r\n    create participant Database\r\n    CarteDetailModel_cs->>Database: charge CarteDetailModel\r\n    ListeCartesVM_cs--XCarteDetailModel_cs: ListeCartes =\r\n    ListeCartesVM_cs->>ListeCartesVM_cs: EstEnTravail = false\r\n    ListeCartesVM_cs--\x3e>UcListeCartes_xaml: arr\xeate d'afficher le ProgressBar \r\n    ListeCartesVM_cs--\x3e>UcListeCartes_xaml: via le binding\r\n    UcListeCartes_xaml--\x3e>UcListeCartes_xaml: DataGrid.ItemsSources ListeCartesVM.cs:ListeCartes<br>SelectedItem=VM.CarteSelection\r\n    UcListeCartes_xaml--\x3e>UcListeCartes_xaml: affiche la liste des cartes<br>highlight la carte s\xe9lectionn\xe9e\r\n    actor Usager \r\n    Usager->>UcListeCartes_xaml: appuie sur Supprimer .... \xe0 suivre\r\n\r\n    deactivate App_xaml_cs"}),"\n",(0,a.jsxs)(t.p,{children:["Pour ce diagramme en plus gros sur ",(0,a.jsx)(t.a,{href:"https://kroki.io/mermaid/svg/eNqtV91u2zYUvs9TELvpAtTOveAISJOsCFCvRd26uQto6ljmIJEaSSnphr3LbrPX8IvtkJJtSSQdp1tvUvOc7zv_h6KG32sQDG44zRUtzwj-o7WRoi5XoNzPiirDGa-oMGTxXRsoz9w5U0ANDMRXVfXwRMvigWlCtf05na1Uao-mTDtUyzBJ055uQgQ8_nzeGmeGN5a3J_fc0KAaa2CBfzmDT0o2POvc_VUiWPF8Y4hck4GVW6Eg59ooKAFZMtCOCRlaEz1ldNCKEnKVZQsu8gIwJ7M55eIbF5l8TKOAxfVnqKTmRioO2oZ_MKv6oul0eoSkC-32yYDQXIoxUyd_gWXJ4XEuMygOPASJLlIb1xdF8Qgz0YtrOU-7Qvwnwg_oJFxjGXMX6v_Lqkyf8RX1rkm2YlIYeDLH6n2zum6VZou6AuUMdidt2TOIdmm4vT-KhUGWujre4iF_3oP5jDPKFWRdyb0uDAziQaU_j98-_ZLYNjpI7a9pfzytUbTt47FMuzGw0-qq02-bYWQ-_mVPl_Oom8u5cxTFjsZnH7jsiBJyJ34DZrbP1pyFF0Cw-NgNNTNQqxGTAx3L-rD5YuEMtEbxDGSjhI9xCdm3fW85Bgw6TOdjZ-9aKnAGRzJHMTaEtkdqp2Uu5ordcEE_rGAX9MjiZJL2sT9Wusm9n8Pl_Ao7ck0uT5yTF4bklOZzh8md4IbTgv-Bi6OspMAydiUcaU6CtZ_dUEO_QFkV6LA1_2dTJgO1v35K7fmsSb6ynuAibY-HkMMaDsB2wos0Ft7k3pst61-3Ervk9nZiYPgD622cMrLYyMdYku4DC8nZxxpekncowOW0K_fhWpANqDHZ21Cb0LZNhtPxtruDMikYYW9AG1JQ0uBdhX2iJePbZ3AagxIQXBvE6tL1mrMN6sSabwAL7emBgreqx0lK0yBhcuIi8cFRVx72wxC0GPSkNxJuJYzGIkzk1T0hORjSlIcC2Bql278JA4MBNTWQo3x-8f1W9rHR3JKvuL8tWsni4YOkGWQxipBt_HDNFWj9jqp9E99qcyuwZg3lx3J87rF9XOE4cNWey7KkIoPwyvexpA--0t8Fi10WPrTvMI4QLmk4Haxt2RRuDz9uDx_uq27OgOAl0c9nJHTvshukzQpvwKALLgldc46vq_PhbXUCQ-y2bDXdp2_w0uzJB3dnZ3t3eQ9p3HMqZta2-4pqOHANwUi5U0kI21CVg6cWKc990Jf-arz84a5a00LD69pCqe0_GHz2pmsQdVqHROgaTi1-1U5pdMjDYJvR94pn0zt8HOiFrBW-3Mj4ezAZbfsFFPgVBJkFXaJG14b2EF9Ir3RhPyUYhhW61y_b29rgA6pwjyhUcMdEb587U2J3ieE1KRXuPJpDl772_zGbVVVzJKoVwZdUpXiJMHywTgkubF3zRsHZkQfVv8Zo2Po",children:"Kroki!"})]})]})}function p(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},1151:(e,t,r)=>{r.d(t,{Z:()=>c,a:()=>n});var a=r(7294);const s={},i=a.createContext(s);function n(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:n(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);